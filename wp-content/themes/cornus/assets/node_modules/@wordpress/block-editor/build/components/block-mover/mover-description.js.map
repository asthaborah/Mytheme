{"version":3,"names":["_i18n","require","getMovementDirection","moveDirection","orientation","isRTL","getBlockMoverDescription","selectedCount","type","firstIndex","isFirst","isLast","dir","position","getMultiBlockMoverDescription","sprintf","__","movementDirection"],"sources":["@wordpress/block-editor/src/components/block-mover/mover-description.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, sprintf, isRTL } from '@wordpress/i18n';\n\nconst getMovementDirection = ( moveDirection, orientation ) => {\n\tif ( moveDirection === 'up' ) {\n\t\tif ( orientation === 'horizontal' ) {\n\t\t\treturn isRTL() ? 'right' : 'left';\n\t\t}\n\t\treturn 'up';\n\t} else if ( moveDirection === 'down' ) {\n\t\tif ( orientation === 'horizontal' ) {\n\t\t\treturn isRTL() ? 'left' : 'right';\n\t\t}\n\t\treturn 'down';\n\t}\n\treturn null;\n};\n\n/**\n * Return a label for the block movement controls depending on block position.\n *\n * @param {number}  selectedCount Number of blocks selected.\n * @param {string}  type          Block type - in the case of a single block, should\n *                                define its 'type'. I.e. 'Text', 'Heading', 'Image' etc.\n * @param {number}  firstIndex    The index (position - 1) of the first block selected.\n * @param {boolean} isFirst       This is the first block.\n * @param {boolean} isLast        This is the last block.\n * @param {number}  dir           Direction of movement (> 0 is considered to be going\n *                                down, < 0 is up).\n * @param {string}  orientation   The orientation of the block movers, vertical or\n *                                horizontal.\n *\n * @return {string | undefined} Label for the block movement controls.\n */\nexport function getBlockMoverDescription(\n\tselectedCount,\n\ttype,\n\tfirstIndex,\n\tisFirst,\n\tisLast,\n\tdir,\n\torientation\n) {\n\tconst position = firstIndex + 1;\n\n\tif ( selectedCount > 1 ) {\n\t\treturn getMultiBlockMoverDescription(\n\t\t\tselectedCount,\n\t\t\tfirstIndex,\n\t\t\tisFirst,\n\t\t\tisLast,\n\t\t\tdir,\n\t\t\torientation\n\t\t);\n\t}\n\n\tif ( isFirst && isLast ) {\n\t\treturn sprintf(\n\t\t\t// translators: %s: Type of block (i.e. Text, Image etc)\n\t\t\t__( 'Block %s is the only block, and cannot be moved' ),\n\t\t\ttype\n\t\t);\n\t}\n\n\tif ( dir > 0 && ! isLast ) {\n\t\t// Moving down.\n\t\tconst movementDirection = getMovementDirection( 'down', orientation );\n\n\t\tif ( movementDirection === 'down' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d down to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition + 1\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d left to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition + 1\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d right to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition + 1\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir > 0 && isLast ) {\n\t\t// Moving down, and is the last item.\n\t\tconst movementDirection = getMovementDirection( 'down', orientation );\n\n\t\tif ( movementDirection === 'down' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the end of the content and can’t be moved down'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the end of the content and can’t be moved left'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the end of the content and can’t be moved right'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir < 0 && ! isFirst ) {\n\t\t// Moving up.\n\t\tconst movementDirection = getMovementDirection( 'up', orientation );\n\n\t\tif ( movementDirection === 'up' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__( 'Move %1$s block from position %2$d up to position %3$d' ),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition - 1\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d left to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition - 1\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc), 2: Position of selected block, 3: New position\n\t\t\t\t__(\n\t\t\t\t\t'Move %1$s block from position %2$d right to position %3$d'\n\t\t\t\t),\n\t\t\t\ttype,\n\t\t\t\tposition,\n\t\t\t\tposition - 1\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir < 0 && isFirst ) {\n\t\t// Moving up, and is the first item.\n\t\tconst movementDirection = getMovementDirection( 'up', orientation );\n\n\t\tif ( movementDirection === 'up' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the beginning of the content and can’t be moved up'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the beginning of the content and can’t be moved left'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Type of block (i.e. Text, Image etc)\n\t\t\t\t__(\n\t\t\t\t\t'Block %1$s is at the beginning of the content and can’t be moved right'\n\t\t\t\t),\n\t\t\t\ttype\n\t\t\t);\n\t\t}\n\t}\n}\n\n/**\n * Return a label for the block movement controls depending on block position.\n *\n * @param {number}  selectedCount Number of blocks selected.\n * @param {number}  firstIndex    The index (position - 1) of the first block selected.\n * @param {boolean} isFirst       This is the first block.\n * @param {boolean} isLast        This is the last block.\n * @param {number}  dir           Direction of movement (> 0 is considered to be going\n *                                down, < 0 is up).\n * @param {string}  orientation   The orientation of the block movers, vertical or\n *                                horizontal.\n *\n * @return {string | undefined} Label for the block movement controls.\n */\nexport function getMultiBlockMoverDescription(\n\tselectedCount,\n\tfirstIndex,\n\tisFirst,\n\tisLast,\n\tdir,\n\torientation\n) {\n\tconst position = firstIndex + 1;\n\n\tif ( isFirst && isLast ) {\n\t\t// All blocks are selected\n\t\treturn __( 'All blocks are selected, and cannot be moved' );\n\t}\n\n\tif ( dir > 0 && ! isLast ) {\n\t\t// moving down\n\t\tconst movementDirection = getMovementDirection( 'down', orientation );\n\n\t\tif ( movementDirection === 'down' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d down by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d left by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d right by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir > 0 && isLast ) {\n\t\t// moving down, and the selected blocks are the last item\n\t\tconst movementDirection = getMovementDirection( 'down', orientation );\n\n\t\tif ( movementDirection === 'down' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved down as they are already at the bottom'\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved left as they are already are at the leftmost position'\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved right as they are already are at the rightmost position'\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir < 0 && ! isFirst ) {\n\t\t// moving up\n\t\tconst movementDirection = getMovementDirection( 'up', orientation );\n\n\t\tif ( movementDirection === 'up' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d up by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d left by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn sprintf(\n\t\t\t\t// translators: 1: Number of selected blocks, 2: Position of selected blocks\n\t\t\t\t__( 'Move %1$d blocks from position %2$d right by one place' ),\n\t\t\t\tselectedCount,\n\t\t\t\tposition\n\t\t\t);\n\t\t}\n\t}\n\n\tif ( dir < 0 && isFirst ) {\n\t\t// moving up, and the selected blocks are the first item\n\t\tconst movementDirection = getMovementDirection( 'up', orientation );\n\n\t\tif ( movementDirection === 'up' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved up as they are already at the top'\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'left' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved left as they are already are at the leftmost position'\n\t\t\t);\n\t\t}\n\n\t\tif ( movementDirection === 'right' ) {\n\t\t\treturn __(\n\t\t\t\t'Blocks cannot be moved right as they are already are at the rightmost position'\n\t\t\t);\n\t\t}\n\t}\n}\n"],"mappings":"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"}