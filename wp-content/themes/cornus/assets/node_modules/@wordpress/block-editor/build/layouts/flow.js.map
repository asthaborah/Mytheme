{"version":3,"names":["_i18n","require","_utils","_gap","_utils2","_definitions","_default","exports","default","name","label","__","inspectorControls","DefaultLayoutInspectorControls","toolBarControls","DefaultLayoutToolbarControls","getLayoutStyle","selector","style","blockName","hasBlockGapSupport","layoutDefinitions","LAYOUT_DEFINITIONS","blockGapStyleValue","getGapCSSValue","spacing","blockGap","blockGapValue","shouldSkipSerialization","top","output","getBlockGapCSS","getOrientation","getAlignments","layout","isBlockBasedTheme","alignmentInfo","getAlignmentsInfo","alignments","undefined","includes","unshift","map","alignment","info","contentSize","wideSize","wide","none"],"sources":["@wordpress/block-editor/src/layouts/flow.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { getBlockGapCSS, getAlignmentsInfo } from './utils';\nimport { getGapCSSValue } from '../hooks/gap';\nimport { shouldSkipSerialization } from '../hooks/utils';\nimport { LAYOUT_DEFINITIONS } from './definitions';\n\nexport default {\n\tname: 'default',\n\tlabel: __( 'Flow' ),\n\tinspectorControls: function DefaultLayoutInspectorControls() {\n\t\treturn null;\n\t},\n\ttoolBarControls: function DefaultLayoutToolbarControls() {\n\t\treturn null;\n\t},\n\tgetLayoutStyle: function getLayoutStyle( {\n\t\tselector,\n\t\tstyle,\n\t\tblockName,\n\t\thasBlockGapSupport,\n\t\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\t} ) {\n\t\tconst blockGapStyleValue = getGapCSSValue( style?.spacing?.blockGap );\n\n\t\t// If a block's block.json skips serialization for spacing or\n\t\t// spacing.blockGap, don't apply the user-defined value to the styles.\n\t\tlet blockGapValue = '';\n\t\tif ( ! shouldSkipSerialization( blockName, 'spacing', 'blockGap' ) ) {\n\t\t\t// If an object is provided only use the 'top' value for this kind of gap.\n\t\t\tif ( blockGapStyleValue?.top ) {\n\t\t\t\tblockGapValue = getGapCSSValue( blockGapStyleValue?.top );\n\t\t\t} else if ( typeof blockGapStyleValue === 'string' ) {\n\t\t\t\tblockGapValue = getGapCSSValue( blockGapStyleValue );\n\t\t\t}\n\t\t}\n\n\t\tlet output = '';\n\n\t\t// Output blockGap styles based on rules contained in layout definitions in theme.json.\n\t\tif ( hasBlockGapSupport && blockGapValue ) {\n\t\t\toutput += getBlockGapCSS(\n\t\t\t\tselector,\n\t\t\t\tlayoutDefinitions,\n\t\t\t\t'default',\n\t\t\t\tblockGapValue\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t},\n\tgetOrientation() {\n\t\treturn 'vertical';\n\t},\n\tgetAlignments( layout, isBlockBasedTheme ) {\n\t\tconst alignmentInfo = getAlignmentsInfo( layout );\n\t\tif ( layout.alignments !== undefined ) {\n\t\t\tif ( ! layout.alignments.includes( 'none' ) ) {\n\t\t\t\tlayout.alignments.unshift( 'none' );\n\t\t\t}\n\t\t\treturn layout.alignments.map( ( alignment ) => ( {\n\t\t\t\tname: alignment,\n\t\t\t\tinfo: alignmentInfo[ alignment ],\n\t\t\t} ) );\n\t\t}\n\n\t\tconst alignments = [\n\t\t\t{ name: 'left' },\n\t\t\t{ name: 'center' },\n\t\t\t{ name: 'right' },\n\t\t];\n\n\t\t// This is for backwards compatibility with hybrid themes.\n\t\tif ( ! isBlockBasedTheme ) {\n\t\t\tconst { contentSize, wideSize } = layout;\n\t\t\tif ( contentSize ) {\n\t\t\t\talignments.unshift( { name: 'full' } );\n\t\t\t}\n\n\t\t\tif ( wideSize ) {\n\t\t\t\talignments.unshift( {\n\t\t\t\t\tname: 'wide',\n\t\t\t\t\tinfo: alignmentInfo.wide,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\talignments.unshift( { name: 'none', info: alignmentInfo.none } );\n\n\t\treturn alignments;\n\t},\n};\n"],"mappings":"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"}