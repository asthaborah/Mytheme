{"version":3,"names":["_data","require","_blocks","_store","useBlockDisplayTitle","clientId","maximumLength","context","blockTitle","useSelect","select","getBlockName","getBlockAttributes","blockEditorStore","getBlockType","getActiveBlockVariation","blocksStore","blockName","blockType","attributes","label","getBlockLabel","title","match","length","omission","slice"],"sources":["@wordpress/block-editor/src/components/block-title/use-block-display-title.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport {\n\t__experimentalGetBlockLabel as getBlockLabel,\n\tstore as blocksStore,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\n/**\n * Returns the block's configured title as a string, or empty if the title\n * cannot be determined.\n *\n * @example\n *\n * ```js\n * useBlockDisplayTitle( { clientId: 'afd1cb17-2c08-4e7a-91be-007ba7ddc3a1', maximumLength: 17 } );\n * ```\n *\n * @param {Object}           props\n * @param {string}           props.clientId      Client ID of block.\n * @param {number|undefined} props.maximumLength The maximum length that the block title string may be before truncated.\n * @param {string|undefined} props.context       The context to pass to `getBlockLabel`.\n * @return {?string} Block title.\n */\nexport default function useBlockDisplayTitle( {\n\tclientId,\n\tmaximumLength,\n\tcontext,\n} ) {\n\tconst blockTitle = useSelect(\n\t\t( select ) => {\n\t\t\tif ( ! clientId ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst { getBlockName, getBlockAttributes } =\n\t\t\t\tselect( blockEditorStore );\n\t\t\tconst { getBlockType, getActiveBlockVariation } =\n\t\t\t\tselect( blocksStore );\n\n\t\t\tconst blockName = getBlockName( clientId );\n\t\t\tconst blockType = getBlockType( blockName );\n\t\t\tif ( ! blockType ) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst attributes = getBlockAttributes( clientId );\n\t\t\tconst label = getBlockLabel( blockType, attributes, context );\n\t\t\t// If the label is defined we prioritize it over a possible block variation title match.\n\t\t\tif ( label !== blockType.title ) {\n\t\t\t\treturn label;\n\t\t\t}\n\n\t\t\tconst match = getActiveBlockVariation( blockName, attributes );\n\t\t\t// Label will fallback to the title if no label is defined for the current label context.\n\t\t\treturn match?.title || blockType.title;\n\t\t},\n\t\t[ clientId, context ]\n\t);\n\n\tif ( ! blockTitle ) {\n\t\treturn null;\n\t}\n\n\tif (\n\t\tmaximumLength &&\n\t\tmaximumLength > 0 &&\n\t\tblockTitle.length > maximumLength\n\t) {\n\t\tconst omission = '...';\n\t\treturn (\n\t\t\tblockTitle.slice( 0, maximumLength - omission.length ) + omission\n\t\t);\n\t}\n\n\treturn blockTitle;\n}\n"],"mappings":";;;;;;AAGA,IAAAA,KAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAQA,IAAAE,MAAA,GAAAF,OAAA;AAZA;AACA;AACA;;AAOA;AACA;AACA;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACe,SAASG,oBAAoBA,CAAE;EAC7CC,QAAQ;EACRC,aAAa;EACbC;AACD,CAAC,EAAG;EACH,MAAMC,UAAU,GAAG,IAAAC,eAAS,EACzBC,MAAM,IAAM;IACb,IAAK,CAAEL,QAAQ,EAAG;MACjB,OAAO,IAAI;IACZ;IAEA,MAAM;MAAEM,YAAY;MAAEC;IAAmB,CAAC,GACzCF,MAAM,CAAEG,YAAiB,CAAC;IAC3B,MAAM;MAAEC,YAAY;MAAEC;IAAwB,CAAC,GAC9CL,MAAM,CAAEM,aAAY,CAAC;IAEtB,MAAMC,SAAS,GAAGN,YAAY,CAAEN,QAAS,CAAC;IAC1C,MAAMa,SAAS,GAAGJ,YAAY,CAAEG,SAAU,CAAC;IAC3C,IAAK,CAAEC,SAAS,EAAG;MAClB,OAAO,IAAI;IACZ;IAEA,MAAMC,UAAU,GAAGP,kBAAkB,CAAEP,QAAS,CAAC;IACjD,MAAMe,KAAK,GAAG,IAAAC,mCAAa,EAAEH,SAAS,EAAEC,UAAU,EAAEZ,OAAQ,CAAC;IAC7D;IACA,IAAKa,KAAK,KAAKF,SAAS,CAACI,KAAK,EAAG;MAChC,OAAOF,KAAK;IACb;IAEA,MAAMG,KAAK,GAAGR,uBAAuB,CAAEE,SAAS,EAAEE,UAAW,CAAC;IAC9D;IACA,OAAOI,KAAK,EAAED,KAAK,IAAIJ,SAAS,CAACI,KAAK;EACvC,CAAC,EACD,CAAEjB,QAAQ,EAAEE,OAAO,CACpB,CAAC;EAED,IAAK,CAAEC,UAAU,EAAG;IACnB,OAAO,IAAI;EACZ;EAEA,IACCF,aAAa,IACbA,aAAa,GAAG,CAAC,IACjBE,UAAU,CAACgB,MAAM,GAAGlB,aAAa,EAChC;IACD,MAAMmB,QAAQ,GAAG,KAAK;IACtB,OACCjB,UAAU,CAACkB,KAAK,CAAE,CAAC,EAAEpB,aAAa,GAAGmB,QAAQ,CAACD,MAAO,CAAC,GAAGC,QAAQ;EAEnE;EAEA,OAAOjB,UAAU;AAClB"}