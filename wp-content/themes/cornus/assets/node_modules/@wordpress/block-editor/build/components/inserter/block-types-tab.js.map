{"version":3,"names":["_i18n","require","_element","_compose","_blockTypesList","_interopRequireDefault","_panel","_useBlockTypesState","_inserterListbox","_sorting","getBlockNamespace","item","name","split","MAX_SUGGESTED_ITEMS","EMPTY_ARRAY","BlockTypesTab","rootClientId","onInsert","onHover","showMostUsedBlocks","items","categories","collections","onSelectItem","useBlockTypesState","suggestedItems","useMemo","orderBy","slice","uncategorizedItems","filter","category","itemsPerCategory","pipe","itemList","reduce","acc","push","itemsPerCollection","result","Object","keys","forEach","namespace","length","useEffect","currentlyRenderedCategories","useAsyncList","didRenderAllCategories","collectionEntries","entries","currentlyRenderedCollections","_react","createElement","default","title","_x","onSelect","label","map","categoryItems","slug","key","icon","className","__","collection","collectionItems","_default","exports"],"sources":["@wordpress/block-editor/src/components/inserter/block-types-tab.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { pipe, useAsyncList } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport InserterPanel from './panel';\nimport useBlockTypesState from './hooks/use-block-types-state';\nimport InserterListbox from '../inserter-listbox';\nimport { orderBy } from '../../utils/sorting';\n\nconst getBlockNamespace = ( item ) => item.name.split( '/' )[ 0 ];\n\nconst MAX_SUGGESTED_ITEMS = 6;\n\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation and rerendering the component.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\nexport function BlockTypesTab( {\n\trootClientId,\n\tonInsert,\n\tonHover,\n\tshowMostUsedBlocks,\n} ) {\n\tconst [ items, categories, collections, onSelectItem ] = useBlockTypesState(\n\t\trootClientId,\n\t\tonInsert\n\t);\n\n\tconst suggestedItems = useMemo( () => {\n\t\treturn orderBy( items, 'frecency', 'desc' ).slice(\n\t\t\t0,\n\t\t\tMAX_SUGGESTED_ITEMS\n\t\t);\n\t}, [ items ] );\n\n\tconst uncategorizedItems = useMemo( () => {\n\t\treturn items.filter( ( item ) => ! item.category );\n\t}, [ items ] );\n\n\tconst itemsPerCategory = useMemo( () => {\n\t\treturn pipe(\n\t\t\t( itemList ) =>\n\t\t\t\titemList.filter(\n\t\t\t\t\t( item ) => item.category && item.category !== 'reusable'\n\t\t\t\t),\n\t\t\t( itemList ) =>\n\t\t\t\titemList.reduce( ( acc, item ) => {\n\t\t\t\t\tconst { category } = item;\n\t\t\t\t\tif ( ! acc[ category ] ) {\n\t\t\t\t\t\tacc[ category ] = [];\n\t\t\t\t\t}\n\t\t\t\t\tacc[ category ].push( item );\n\t\t\t\t\treturn acc;\n\t\t\t\t}, {} )\n\t\t)( items );\n\t}, [ items ] );\n\n\tconst itemsPerCollection = useMemo( () => {\n\t\t// Create a new Object to avoid mutating collection.\n\t\tconst result = { ...collections };\n\t\tObject.keys( collections ).forEach( ( namespace ) => {\n\t\t\tresult[ namespace ] = items.filter(\n\t\t\t\t( item ) => getBlockNamespace( item ) === namespace\n\t\t\t);\n\t\t\tif ( result[ namespace ].length === 0 ) {\n\t\t\t\tdelete result[ namespace ];\n\t\t\t}\n\t\t} );\n\n\t\treturn result;\n\t}, [ items, collections ] );\n\n\t// Hide block preview on unmount.\n\tuseEffect( () => () => onHover( null ), [] );\n\n\t/**\n\t * The inserter contains a big number of blocks and opening it is a costful operation.\n\t * The rendering is the most costful part of it, in order to improve the responsiveness\n\t * of the \"opening\" action, these lazy lists allow us to render the inserter category per category,\n\t * once all the categories are rendered, we start rendering the collections and the uncategorized block types.\n\t */\n\tconst currentlyRenderedCategories = useAsyncList( categories );\n\tconst didRenderAllCategories =\n\t\tcategories.length === currentlyRenderedCategories.length;\n\n\t// Async List requires an array.\n\tconst collectionEntries = useMemo( () => {\n\t\treturn Object.entries( collections );\n\t}, [ collections ] );\n\tconst currentlyRenderedCollections = useAsyncList(\n\t\tdidRenderAllCategories ? collectionEntries : EMPTY_ARRAY\n\t);\n\n\treturn (\n\t\t<InserterListbox>\n\t\t\t<div>\n\t\t\t\t{ showMostUsedBlocks && !! suggestedItems.length && (\n\t\t\t\t\t<InserterPanel title={ _x( 'Most used', 'blocks' ) }>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ suggestedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ _x( 'Most used', 'blocks' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t\t{ currentlyRenderedCategories.map( ( category ) => {\n\t\t\t\t\tconst categoryItems = itemsPerCategory[ category.slug ];\n\t\t\t\t\tif ( ! categoryItems || ! categoryItems.length ) {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\tkey={ category.slug }\n\t\t\t\t\t\t\ttitle={ category.title }\n\t\t\t\t\t\t\ticon={ category.icon }\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\titems={ categoryItems }\n\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\tlabel={ category.title }\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t);\n\t\t\t\t} ) }\n\n\t\t\t\t{ didRenderAllCategories && uncategorizedItems.length > 0 && (\n\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\tclassName=\"block-editor-inserter__uncategorized-blocks-panel\"\n\t\t\t\t\t\ttitle={ __( 'Uncategorized' ) }\n\t\t\t\t\t>\n\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\titems={ uncategorizedItems }\n\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\tlabel={ __( 'Uncategorized' ) }\n\t\t\t\t\t\t/>\n\t\t\t\t\t</InserterPanel>\n\t\t\t\t) }\n\n\t\t\t\t{ currentlyRenderedCollections.map(\n\t\t\t\t\t( [ namespace, collection ] ) => {\n\t\t\t\t\t\tconst collectionItems = itemsPerCollection[ namespace ];\n\t\t\t\t\t\tif ( ! collectionItems || ! collectionItems.length ) {\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<InserterPanel\n\t\t\t\t\t\t\t\tkey={ namespace }\n\t\t\t\t\t\t\t\ttitle={ collection.title }\n\t\t\t\t\t\t\t\ticon={ collection.icon }\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t<BlockTypesList\n\t\t\t\t\t\t\t\t\titems={ collectionItems }\n\t\t\t\t\t\t\t\t\tonSelect={ onSelectItem }\n\t\t\t\t\t\t\t\t\tonHover={ onHover }\n\t\t\t\t\t\t\t\t\tlabel={ collection.title }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</InserterPanel>\n\t\t\t\t\t\t);\n\t\t\t\t\t}\n\t\t\t\t) }\n\t\t\t</div>\n\t\t</InserterListbox>\n\t);\n}\n\nexport default BlockTypesTab;\n"],"mappings":"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"}