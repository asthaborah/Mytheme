import type { CompositeTypeaheadOptions } from "../composite/composite-typeahead.js";
import type { HovercardAnchorOptions } from "../hovercard/hovercard-anchor.js";
import type { PopoverDisclosureOptions } from "../popover/popover-disclosure.js";
import type { As, Props } from "../utils/types.js";
import type { MenuStore } from "./menu-store.js";
/**
 * Returns props to create a `MenuButton` component.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx
 * const store = useMenuStore();
 * const props = useMenuButton({ store });
 * <Role {...props}>Edit</Role>
 * <Menu store={store}>
 *   <MenuItem>Undo</MenuItem>
 *   <MenuItem>Redo</MenuItem>
 * </Menu>
 * ```
 */
export declare const useMenuButton: import("../utils/types.js").Hook<MenuButtonOptions<"button" | "div">>;
/**
 * Renders a menu button that toggles the visibility of a
 * [`Menu`](https://ariakit.org/reference/menu) component when clicked or when
 * using arrow keys.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx {2}
 * <MenuProvider>
 *   <MenuButton>Edit</MenuButton>
 *   <Menu>
 *     <MenuItem>Undo</MenuItem>
 *     <MenuItem>Redo</MenuItem>
 *   </Menu>
 * </MenuProvider>
 * ```
 */
export declare const MenuButton: import("../utils/types.js").Component<MenuButtonOptions<"button" | "div">>;
export interface MenuButtonOptions<T extends As = "button" | "div"> extends HovercardAnchorOptions<T>, PopoverDisclosureOptions<T>, CompositeTypeaheadOptions<T> {
    /**
     * Object returned by the
     * [`useMenuStore`](https://ariakit.org/reference/use-menu-store) hook. If not
     * provided, the closest
     * [`MenuProvider`](https://ariakit.org/reference/menu-provider) component's
     * context will be used.
     */
    store?: MenuStore;
    /**
     * Determines whether pressing a character key while focusing on the
     * [`MenuButton`](https://ariakit.org/reference/menu-button) should move focus
     * to the [`MenuItem`](https://ariakit.org/reference/menu-item) starting with
     * that character.
     *
     * By default, it's `true` for menu buttons in a
     * [`Menubar`](https://ariakit.org/reference/menubar), but `false` for other
     * menu buttons.
     */
    typeahead?: boolean;
}
export type MenuButtonProps<T extends As = "button" | "div"> = Props<MenuButtonOptions<T>>;
