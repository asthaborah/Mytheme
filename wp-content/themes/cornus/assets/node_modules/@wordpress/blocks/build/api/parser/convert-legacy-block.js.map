{"version":3,"names":["convertLegacyBlockNameAndAttributes","name","attributes","newAttributes","indexOf","service","substring","providerSlug","deprecated","speaker","polldaddy","providerNameSlug","includes","responsive","className","join","legacy","process","env","IS_GUTENBERG_PLUGIN","metadata","bindings","forEach","binding","source"],"sources":["@wordpress/blocks/src/api/parser/convert-legacy-block.js"],"sourcesContent":["/**\n * Convert legacy blocks to their canonical form. This function is used\n * both in the parser level for previous content and to convert such blocks\n * used in Custom Post Types templates.\n *\n * @param {string} name       The block's name\n * @param {Object} attributes The block's attributes\n *\n * @return {[string, Object]} The block's name and attributes, changed accordingly if a match was found\n */\nexport function convertLegacyBlockNameAndAttributes( name, attributes ) {\n\tconst newAttributes = { ...attributes };\n\t// Convert 'core/cover-image' block in existing content to 'core/cover'.\n\tif ( 'core/cover-image' === name ) {\n\t\tname = 'core/cover';\n\t}\n\n\t// Convert 'core/text' blocks in existing content to 'core/paragraph'.\n\tif ( 'core/text' === name || 'core/cover-text' === name ) {\n\t\tname = 'core/paragraph';\n\t}\n\n\t// Convert derivative blocks such as 'core/social-link-wordpress' to the\n\t// canonical form 'core/social-link'.\n\tif ( name && name.indexOf( 'core/social-link-' ) === 0 ) {\n\t\t// Capture `social-link-wordpress` into `{\"service\":\"wordpress\"}`\n\t\tnewAttributes.service = name.substring( 17 );\n\t\tname = 'core/social-link';\n\t}\n\n\t// Convert derivative blocks such as 'core-embed/instagram' to the\n\t// canonical form 'core/embed'.\n\tif ( name && name.indexOf( 'core-embed/' ) === 0 ) {\n\t\t// Capture `core-embed/instagram` into `{\"providerNameSlug\":\"instagram\"}`\n\t\tconst providerSlug = name.substring( 11 );\n\t\tconst deprecated = {\n\t\t\tspeaker: 'speaker-deck',\n\t\t\tpolldaddy: 'crowdsignal',\n\t\t};\n\t\tnewAttributes.providerNameSlug =\n\t\t\tproviderSlug in deprecated\n\t\t\t\t? deprecated[ providerSlug ]\n\t\t\t\t: providerSlug;\n\t\t// This is needed as the `responsive` attribute was passed\n\t\t// in a different way before the refactoring to block variations.\n\t\tif ( ! [ 'amazon-kindle', 'wordpress' ].includes( providerSlug ) ) {\n\t\t\tnewAttributes.responsive = true;\n\t\t}\n\t\tname = 'core/embed';\n\t}\n\n\t// Convert Post Comment blocks in existing content to Comment blocks.\n\t// TODO: Remove these checks when WordPress 6.0 is released.\n\tif ( name === 'core/post-comment-author' ) {\n\t\tname = 'core/comment-author-name';\n\t}\n\tif ( name === 'core/post-comment-content' ) {\n\t\tname = 'core/comment-content';\n\t}\n\tif ( name === 'core/post-comment-date' ) {\n\t\tname = 'core/comment-date';\n\t}\n\tif ( name === 'core/comments-query-loop' ) {\n\t\tname = 'core/comments';\n\t\tconst { className = '' } = newAttributes;\n\t\tif ( ! className.includes( 'wp-block-comments-query-loop' ) ) {\n\t\t\tnewAttributes.className = [\n\t\t\t\t'wp-block-comments-query-loop',\n\t\t\t\tclassName,\n\t\t\t].join( ' ' );\n\t\t}\n\t\t// Note that we also had to add a deprecation to the block in order\n\t\t// for the ID change to work.\n\t}\n\tif ( name === 'core/post-comments' ) {\n\t\tname = 'core/comments';\n\t\tnewAttributes.legacy = true;\n\t}\n\n\t// The following code is only relevant for the Gutenberg plugin.\n\t// It's a stand-alone if statement for dead-code elimination.\n\tif ( process.env.IS_GUTENBERG_PLUGIN ) {\n\t\t// Convert pattern overrides added during experimental phase.\n\t\t// Only four blocks were supported initially.\n\t\t// These checks can be removed in WordPress 6.6.\n\t\tif (\n\t\t\tnewAttributes.metadata?.bindings &&\n\t\t\t( name === 'core/paragraph' ||\n\t\t\t\tname === 'core/heading' ||\n\t\t\t\tname === 'core/image' ||\n\t\t\t\tname === 'core/button' )\n\t\t) {\n\t\t\tconst bindings = [\n\t\t\t\t'content',\n\t\t\t\t'url',\n\t\t\t\t'title',\n\t\t\t\t'alt',\n\t\t\t\t'text',\n\t\t\t\t'linkTarget',\n\t\t\t];\n\t\t\tbindings.forEach( ( binding ) => {\n\t\t\t\tif (\n\t\t\t\t\tnewAttributes.metadata.bindings[ binding ]?.source?.name ===\n\t\t\t\t\t'pattern_attributes'\n\t\t\t\t) {\n\t\t\t\t\tnewAttributes.metadata.bindings[ binding ].source =\n\t\t\t\t\t\t'core/pattern-overrides';\n\t\t\t\t}\n\t\t\t} );\n\t\t}\n\t}\n\treturn [ name, newAttributes ];\n}\n"],"mappings":"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"}