{"version":3,"names":["defaultSettings","stripTags","transposeAstralsToCountableChar","stripHTMLEntities","stripConnectors","stripRemovables","stripHTMLComments","stripShortcodes","stripSpaces","transposeHTMLEntitiesToCountableChars","loadSettings","type","userSettings","_settings$l10n$shortc","settings","Object","assign","shortcodes","l10n","length","shortcodesRegExp","RegExp","join","countWords","text","regex","_text$match$length","bind","reduce","result","fn","match","countCharacters","_text$match$length2","count","matchRegExp","wordsRegExp","characters_including_spacesRegExp","characters_excluding_spacesRegExp"],"sources":["@wordpress/wordcount/src/index.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { defaultSettings } from './defaultSettings';\nimport stripTags from './stripTags';\nimport transposeAstralsToCountableChar from './transposeAstralsToCountableChar';\nimport stripHTMLEntities from './stripHTMLEntities';\nimport stripConnectors from './stripConnectors';\nimport stripRemovables from './stripRemovables';\nimport stripHTMLComments from './stripHTMLComments';\nimport stripShortcodes from './stripShortcodes';\nimport stripSpaces from './stripSpaces';\nimport transposeHTMLEntitiesToCountableChars from './transposeHTMLEntitiesToCountableChars';\n\n/**\n * @typedef {import('./defaultSettings').WPWordCountDefaultSettings}  WPWordCountSettings\n * @typedef {import('./defaultSettings').WPWordCountUserSettings}     WPWordCountUserSettings\n */\n\n/**\n * Possible ways of counting.\n *\n * @typedef {'words'|'characters_excluding_spaces'|'characters_including_spaces'} WPWordCountStrategy\n */\n\n/**\n * Private function to manage the settings.\n *\n * @param {WPWordCountStrategy}     type         The type of count to be done.\n * @param {WPWordCountUserSettings} userSettings Custom settings for the count.\n *\n * @return {WPWordCountSettings} The combined settings object to be used.\n */\nfunction loadSettings( type, userSettings ) {\n\tconst settings = Object.assign( {}, defaultSettings, userSettings );\n\n\tsettings.shortcodes = settings.l10n?.shortcodes ?? [];\n\n\tif ( settings.shortcodes && settings.shortcodes.length ) {\n\t\tsettings.shortcodesRegExp = new RegExp(\n\t\t\t'\\\\[\\\\/?(?:' + settings.shortcodes.join( '|' ) + ')[^\\\\]]*?\\\\]',\n\t\t\t'g'\n\t\t);\n\t}\n\n\tsettings.type = type;\n\n\tif (\n\t\tsettings.type !== 'characters_excluding_spaces' &&\n\t\tsettings.type !== 'characters_including_spaces'\n\t) {\n\t\tsettings.type = 'words';\n\t}\n\n\treturn settings;\n}\n\n/**\n * Count the words in text\n *\n * @param {string}              text     The text being processed\n * @param {RegExp}              regex    The regular expression pattern being matched\n * @param {WPWordCountSettings} settings Settings object containing regular expressions for each strip function\n *\n * @return {number} Count of words.\n */\nfunction countWords( text, regex, settings ) {\n\ttext = [\n\t\tstripTags.bind( null, settings ),\n\t\tstripHTMLComments.bind( null, settings ),\n\t\tstripShortcodes.bind( null, settings ),\n\t\tstripSpaces.bind( null, settings ),\n\t\tstripHTMLEntities.bind( null, settings ),\n\t\tstripConnectors.bind( null, settings ),\n\t\tstripRemovables.bind( null, settings ),\n\t].reduce( ( result, fn ) => fn( result ), text );\n\ttext = text + '\\n';\n\treturn text.match( regex )?.length ?? 0;\n}\n\n/**\n * Count the characters in text\n *\n * @param {string}              text     The text being processed\n * @param {RegExp}              regex    The regular expression pattern being matched\n * @param {WPWordCountSettings} settings Settings object containing regular expressions for each strip function\n *\n * @return {number} Count of characters.\n */\nfunction countCharacters( text, regex, settings ) {\n\ttext = [\n\t\tstripTags.bind( null, settings ),\n\t\tstripHTMLComments.bind( null, settings ),\n\t\tstripShortcodes.bind( null, settings ),\n\t\ttransposeAstralsToCountableChar.bind( null, settings ),\n\t\tstripSpaces.bind( null, settings ),\n\t\ttransposeHTMLEntitiesToCountableChars.bind( null, settings ),\n\t].reduce( ( result, fn ) => fn( result ), text );\n\ttext = text + '\\n';\n\treturn text.match( regex )?.length ?? 0;\n}\n\n/**\n * Count some words.\n *\n * @param {string}                  text         The text being processed\n * @param {WPWordCountStrategy}     type         The type of count. Accepts 'words', 'characters_excluding_spaces', or 'characters_including_spaces'.\n * @param {WPWordCountUserSettings} userSettings Custom settings object.\n *\n * @example\n * ```js\n * import { count } from '@wordpress/wordcount';\n * const numberOfWords = count( 'Words to count', 'words', {} )\n * ```\n *\n * @return {number} The word or character count.\n */\nexport function count( text, type, userSettings ) {\n\tconst settings = loadSettings( type, userSettings );\n\tlet matchRegExp;\n\tswitch ( settings.type ) {\n\t\tcase 'words':\n\t\t\tmatchRegExp = settings.wordsRegExp;\n\t\t\treturn countWords( text, matchRegExp, settings );\n\t\tcase 'characters_including_spaces':\n\t\t\tmatchRegExp = settings.characters_including_spacesRegExp;\n\t\t\treturn countCharacters( text, matchRegExp, settings );\n\t\tcase 'characters_excluding_spaces':\n\t\t\tmatchRegExp = settings.characters_excluding_spacesRegExp;\n\t\t\treturn countCharacters( text, matchRegExp, settings );\n\t\tdefault:\n\t\t\treturn 0;\n\t}\n}\n"],"mappings":"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"}