"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";



var _UZNYSPKPcjs = require('./UZNYSPKP.cjs');




var _RNZNGEL4cjs = require('./RNZNGEL4.cjs');



var _EO6LS72Hcjs = require('./EO6LS72H.cjs');



var _AV6KTKLEcjs = require('./AV6KTKLE.cjs');

// src/composite/composite-row.tsx
var _react = require('react');
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var useCompositeRow = _RNZNGEL4cjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, {
      store,
      "aria-setsize": ariaSetSize,
      "aria-posinset": ariaPosInSet
    } = _b, props = _AV6KTKLEcjs.__objRest.call(void 0, _b, [
      "store",
      "aria-setsize",
      "aria-posinset"
    ]);
    const context = _UZNYSPKPcjs.useCompositeContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "CompositeRow must be wrapped in a Composite component."
    );
    const id = _EO6LS72Hcjs.useId.call(void 0, props.id);
    const baseElement = store.useState(
      (state) => state.baseElement || void 0
    );
    const providerValue = _react.useMemo.call(void 0, 
      () => ({ id, baseElement, ariaSetSize, ariaPosInSet }),
      [id, baseElement, ariaSetSize, ariaPosInSet]
    );
    props = _EO6LS72Hcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _UZNYSPKPcjs.CompositeRowContext.Provider, { value: providerValue, children: element }),
      [providerValue]
    );
    props = _AV6KTKLEcjs.__spreadValues.call(void 0, { id }, props);
    return props;
  }
);
var CompositeRow = _RNZNGEL4cjs.createComponent.call(void 0, (props) => {
  const htmlProps = useCompositeRow(props);
  return _RNZNGEL4cjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  CompositeRow.displayName = "CompositeRow";
}




exports.useCompositeRow = useCompositeRow; exports.CompositeRow = CompositeRow;
