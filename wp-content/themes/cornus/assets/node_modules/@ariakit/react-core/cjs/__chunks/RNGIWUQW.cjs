"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";



var _7LBZXSLYcjs = require('./7LBZXSLY.cjs');


var _EUHOCOY2cjs = require('./EUHOCOY2.cjs');


var _H6OLBVHAcjs = require('./H6OLBVHA.cjs');




var _RNZNGEL4cjs = require('./RNZNGEL4.cjs');


var _EO6LS72Hcjs = require('./EO6LS72H.cjs');



var _AV6KTKLEcjs = require('./AV6KTKLE.cjs');

// src/menubar/menubar.tsx
var _jsxruntime = require('react/jsx-runtime');
var useMenubar = _RNZNGEL4cjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, {
      store: storeProp,
      composite = true,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    } = _b, props = _AV6KTKLEcjs.__objRest.call(void 0, _b, [
      "store",
      "composite",
      "orientation",
      "virtualFocus",
      "focusLoop",
      "rtl"
    ]);
    const context = _7LBZXSLYcjs.useMenubarProviderContext.call(void 0, );
    storeProp = storeProp || context;
    const store = _EUHOCOY2cjs.useMenubarStore.call(void 0, {
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    });
    const orientation = store.useState(
      (state) => !composite || state.orientation === "both" ? void 0 : state.orientation
    );
    props = _EO6LS72Hcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _7LBZXSLYcjs.MenubarScopedContextProvider, { value: store, children: element }),
      [store]
    );
    if (composite) {
      props = _AV6KTKLEcjs.__spreadValues.call(void 0, {
        role: "menubar",
        "aria-orientation": orientation
      }, props);
    }
    props = _H6OLBVHAcjs.useComposite.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, { store, composite }, props));
    return props;
  }
);
var Menubar = _RNZNGEL4cjs.createComponent.call(void 0, (props) => {
  const htmlProps = useMenubar(props);
  return _RNZNGEL4cjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  Menubar.displayName = "Menubar";
}




exports.useMenubar = useMenubar; exports.Menubar = Menubar;
