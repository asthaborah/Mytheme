{"version":3,"names":["useRef","useRefEffect","pasteHandler","findTransform","getBlockTransforms","isEmpty","insert","create","isURL","addActiveFormats","splitValue","getPasteEventData","usePasteHandler","props","propsRef","current","element","_onPaste","event","isSelected","disableFormats","onChange","value","formatTypes","tagName","onReplace","onSplit","__unstableEmbedURLOnPaste","pastePlainText","plainText","html","files","preventDefault","window","console","log","isInternal","clipboardData","getData","pasteInline","content","transformed","reduce","accumulator","__unstablePasteRule","valueToInsert","activeFormats","text","length","fromTransforms","blocks","file","transformation","transform","type","isMatch","push","flat","pastedBlocks","mode","trimmedPlainText","trim","test","HTML","addEventListener","removeEventListener"],"sources":["@wordpress/block-editor/src/components/rich-text/use-paste-handler.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef } from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\nimport {\n\tpasteHandler,\n\tfindTransform,\n\tgetBlockTransforms,\n} from '@wordpress/blocks';\nimport { isEmpty, insert, create } from '@wordpress/rich-text';\nimport { isURL } from '@wordpress/url';\n\n/**\n * Internal dependencies\n */\nimport { addActiveFormats } from './utils';\nimport { splitValue } from './split-value';\nimport { getPasteEventData } from '../../utils/pasting';\n\n/** @typedef {import('@wordpress/rich-text').RichTextValue} RichTextValue */\n\nexport function usePasteHandler( props ) {\n\tconst propsRef = useRef( props );\n\tpropsRef.current = props;\n\treturn useRefEffect( ( element ) => {\n\t\tfunction _onPaste( event ) {\n\t\t\tconst {\n\t\t\t\tisSelected,\n\t\t\t\tdisableFormats,\n\t\t\t\tonChange,\n\t\t\t\tvalue,\n\t\t\t\tformatTypes,\n\t\t\t\ttagName,\n\t\t\t\tonReplace,\n\t\t\t\tonSplit,\n\t\t\t\t__unstableEmbedURLOnPaste,\n\t\t\t\tpastePlainText,\n\t\t\t} = propsRef.current;\n\n\t\t\tif ( ! isSelected ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { plainText, html, files } = getPasteEventData( event );\n\n\t\t\tevent.preventDefault();\n\n\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\twindow.console.log( 'Received HTML:\\n\\n', html );\n\t\t\twindow.console.log( 'Received plain text:\\n\\n', plainText );\n\n\t\t\tif ( disableFormats ) {\n\t\t\t\tonChange( insert( value, plainText ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst isInternal =\n\t\t\t\tevent.clipboardData.getData( 'rich-text' ) === 'true';\n\n\t\t\tfunction pasteInline( content ) {\n\t\t\t\tconst transformed = formatTypes.reduce(\n\t\t\t\t\t( accumulator, { __unstablePasteRule } ) => {\n\t\t\t\t\t\t// Only allow one transform.\n\t\t\t\t\t\tif ( __unstablePasteRule && accumulator === value ) {\n\t\t\t\t\t\t\taccumulator = __unstablePasteRule( value, {\n\t\t\t\t\t\t\t\thtml,\n\t\t\t\t\t\t\t\tplainText,\n\t\t\t\t\t\t\t} );\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t},\n\t\t\t\t\tvalue\n\t\t\t\t);\n\t\t\t\tif ( transformed !== value ) {\n\t\t\t\t\tonChange( transformed );\n\t\t\t\t} else {\n\t\t\t\t\tconst valueToInsert = create( { html: content } );\n\t\t\t\t\taddActiveFormats( valueToInsert, value.activeFormats );\n\t\t\t\t\tonChange( insert( value, valueToInsert ) );\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t// If the data comes from a rich text instance, we can directly use it\n\t\t\t// without filtering the data. The filters are only meant for externally\n\t\t\t// pasted content and remove inline styles.\n\t\t\tif ( isInternal ) {\n\t\t\t\tpasteInline( html );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( pastePlainText ) {\n\t\t\t\tonChange( insert( value, create( { text: plainText } ) ) );\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif ( files?.length ) {\n\t\t\t\t// Allows us to ask for this information when we get a report.\n\t\t\t\t// eslint-disable-next-line no-console\n\t\t\t\twindow.console.log( 'Received items:\\n\\n', files );\n\n\t\t\t\tconst fromTransforms = getBlockTransforms( 'from' );\n\t\t\t\tconst blocks = files\n\t\t\t\t\t.reduce( ( accumulator, file ) => {\n\t\t\t\t\t\tconst transformation = findTransform(\n\t\t\t\t\t\t\tfromTransforms,\n\t\t\t\t\t\t\t( transform ) =>\n\t\t\t\t\t\t\t\ttransform.type === 'files' &&\n\t\t\t\t\t\t\t\ttransform.isMatch( [ file ] )\n\t\t\t\t\t\t);\n\t\t\t\t\t\tif ( transformation ) {\n\t\t\t\t\t\t\taccumulator.push(\n\t\t\t\t\t\t\t\ttransformation.transform( [ file ] )\n\t\t\t\t\t\t\t);\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn accumulator;\n\t\t\t\t\t}, [] )\n\t\t\t\t\t.flat();\n\t\t\t\tif ( ! blocks.length ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tif ( onReplace && isEmpty( value ) ) {\n\t\t\t\t\tonReplace( blocks );\n\t\t\t\t} else {\n\t\t\t\t\tsplitValue( {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tpastedBlocks: blocks,\n\t\t\t\t\t\tonReplace,\n\t\t\t\t\t\tonSplit,\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet mode = onReplace && onSplit ? 'AUTO' : 'INLINE';\n\n\t\t\tconst trimmedPlainText = plainText.trim();\n\n\t\t\tif (\n\t\t\t\t__unstableEmbedURLOnPaste &&\n\t\t\t\tisEmpty( value ) &&\n\t\t\t\tisURL( trimmedPlainText ) &&\n\t\t\t\t// For the link pasting feature, allow only http(s) protocols.\n\t\t\t\t/^https?:/.test( trimmedPlainText )\n\t\t\t) {\n\t\t\t\tmode = 'BLOCKS';\n\t\t\t}\n\n\t\t\tconst content = pasteHandler( {\n\t\t\t\tHTML: html,\n\t\t\t\tplainText,\n\t\t\t\tmode,\n\t\t\t\ttagName,\n\t\t\t} );\n\n\t\t\tif ( typeof content === 'string' ) {\n\t\t\t\tpasteInline( content );\n\t\t\t} else if ( content.length > 0 ) {\n\t\t\t\tif ( onReplace && isEmpty( value ) ) {\n\t\t\t\t\tonReplace( content, content.length - 1, -1 );\n\t\t\t\t} else {\n\t\t\t\t\tsplitValue( {\n\t\t\t\t\t\tvalue,\n\t\t\t\t\t\tpastedBlocks: content,\n\t\t\t\t\t\tonReplace,\n\t\t\t\t\t\tonSplit,\n\t\t\t\t\t} );\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\telement.addEventListener( 'paste', _onPaste );\n\t\treturn () => {\n\t\t\telement.removeEventListener( 'paste', _onPaste );\n\t\t};\n\t}, [] );\n}\n"],"mappings":"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"}