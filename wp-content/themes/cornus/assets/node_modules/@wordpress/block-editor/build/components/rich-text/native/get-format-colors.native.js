"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.getFormatColors = getFormatColors;
var _colors = require("../../../components/colors");
/**
 * Internal dependencies
 */

const FORMAT_TYPE = 'core/text-color';
const REGEX_TO_MATCH = /^has-(.*)-color$/;
function getFormatColors(formats, colors) {
  const newFormats = formats.slice();

  // We are looping through a sparse array where empty indices will be
  // skipped.
  newFormats.forEach(format => {
    format.forEach(currentFormat => {
      if (currentFormat?.type === FORMAT_TYPE) {
        const className = currentFormat?.attributes?.class;
        className?.split(' ').forEach(currentClass => {
          const match = currentClass.match(REGEX_TO_MATCH);
          if (match) {
            const [, colorSlug] = currentClass.match(REGEX_TO_MATCH);
            const colorObject = (0, _colors.getColorObjectByAttributeValues)(colors, colorSlug);
            const currentStyles = currentFormat?.attributes?.style;
            if (colorObject && (!currentStyles || currentStyles?.indexOf(colorObject.color) === -1)) {
              currentFormat.attributes.style = [`color: ${colorObject.color}`, currentStyles].join(';');
            }
          }
        });
      }
    });
  });
  return newFormats;
}
//# sourceMappingURL=get-format-colors.native.js.map