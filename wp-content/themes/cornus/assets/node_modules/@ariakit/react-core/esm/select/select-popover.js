"use client";
import {
  useSelectList
} from "../__chunks/SU2GU5JB.js";
import "../__chunks/346FK57L.js";
import {
  useSelectProviderContext
} from "../__chunks/5HVNGX6D.js";
import "../__chunks/7QTPYGNZ.js";
import "../__chunks/3IEDWLST.js";
import "../__chunks/IB7YUKH5.js";
import "../__chunks/4UUKJZ4V.js";
import {
  usePopover
} from "../__chunks/IRX7SFUJ.js";
import {
  createDialogComponent
} from "../__chunks/NERBASET.js";
import "../__chunks/LWHPHW7Q.js";
import "../__chunks/TQYOGOE2.js";
import "../__chunks/BULCTPRV.js";
import "../__chunks/6BJGLK2C.js";
import "../__chunks/CS347UVZ.js";
import "../__chunks/IUB2BTEK.js";
import "../__chunks/XHJGS6Z5.js";
import "../__chunks/TL67WVI6.js";
import "../__chunks/MKDDWKFK.js";
import "../__chunks/72E5EPFF.js";
import "../__chunks/OOBDFMJL.js";
import "../__chunks/X6WIMZJE.js";
import "../__chunks/677M2CI3.js";
import "../__chunks/6GXEOXGT.js";
import "../__chunks/HPP6CWMY.js";
import "../__chunks/UYRJLDVS.js";
import "../__chunks/JPXNJYSO.js";
import "../__chunks/CHKJ74UC.js";
import "../__chunks/7452U3HH.js";
import "../__chunks/XPF5GU3Q.js";
import "../__chunks/FSFPRQFR.js";
import "../__chunks/CLE7NTOY.js";
import "../__chunks/7H5KSHHF.js";
import "../__chunks/G6BJYYBK.js";
import "../__chunks/OAYFXAQ2.js";
import "../__chunks/KK7H3W2B.js";
import "../__chunks/SHA3WOPI.js";
import "../__chunks/BG6HZDS7.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/3ORBWXWF.js";
import "../__chunks/ZSELSBRM.js";
import "../__chunks/SFCBA2JZ.js";
import "../__chunks/EKQEJRUF.js";
import "../__chunks/6O5OEQGF.js";
import "../__chunks/XM66DUTO.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/4R3V3JGP.js";

// src/select/select-popover.ts
var useSelectPopover = createHook(
  (_a) => {
    var _b = _a, { store, alwaysVisible } = _b, props = __objRest(_b, ["store", "alwaysVisible"]);
    const context = useSelectProviderContext();
    store = store || context;
    props = useSelectList(__spreadValues({ store, alwaysVisible }, props));
    props = usePopover(__spreadValues({ store, alwaysVisible }, props));
    return props;
  }
);
var SelectPopover = createDialogComponent(
  createComponent((props) => {
    const htmlProps = useSelectPopover(props);
    return createElement("div", htmlProps);
  }),
  useSelectProviderContext
);
if (process.env.NODE_ENV !== "production") {
  SelectPopover.displayName = "SelectPopover";
}
export {
  SelectPopover,
  useSelectPopover
};
