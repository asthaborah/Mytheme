"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _QCG6J6X5cjs = require('./QCG6J6X5.cjs');


var _3QW6ELTGcjs = require('./3QW6ELTG.cjs');



var _UVBBMANLcjs = require('./UVBBMANL.cjs');




var _RNZNGEL4cjs = require('./RNZNGEL4.cjs');



var _EO6LS72Hcjs = require('./EO6LS72H.cjs');




var _AV6KTKLEcjs = require('./AV6KTKLE.cjs');

// src/popover/popover-disclosure.tsx
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var usePopoverDisclosure = _RNZNGEL4cjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store } = _b, props = _AV6KTKLEcjs.__objRest.call(void 0, _b, ["store"]);
    const context = _UVBBMANLcjs.usePopoverProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "PopoverDisclosure must receive a `store` prop or be wrapped in a PopoverProvider component."
    );
    const onClickProp = props.onClick;
    const onClick = _EO6LS72Hcjs.useEvent.call(void 0, (event) => {
      store == null ? void 0 : store.setAnchorElement(event.currentTarget);
      onClickProp == null ? void 0 : onClickProp(event);
    });
    props = _EO6LS72Hcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _UVBBMANLcjs.PopoverScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props), {
      onClick
    });
    props = _3QW6ELTGcjs.usePopoverAnchor.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, { store }, props));
    props = _QCG6J6X5cjs.useDialogDisclosure.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, { store }, props));
    return props;
  }
);
var PopoverDisclosure = _RNZNGEL4cjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = usePopoverDisclosure(props);
    return _RNZNGEL4cjs.createElement.call(void 0, "button", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  PopoverDisclosure.displayName = "PopoverDisclosure";
}




exports.usePopoverDisclosure = usePopoverDisclosure; exports.PopoverDisclosure = PopoverDisclosure;
