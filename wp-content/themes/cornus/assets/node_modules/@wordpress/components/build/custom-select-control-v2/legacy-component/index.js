"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var Ariakit = _interopRequireWildcard(require("@ariakit/react"));
var _element = require("@wordpress/element");
var _customSelect = _interopRequireDefault(require("../custom-select"));
var _ = require("..");
var Styled = _interopRequireWildcard(require("../styles"));
var _context = require("../../context");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * External dependencies
 */
// eslint-disable-next-line no-restricted-imports

/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function CustomSelect(props) {
  const {
    __experimentalShowSelectedHint,
    __next40pxDefaultSize = false,
    options,
    onChange,
    size = 'default',
    value,
    ...restProps
  } = props;

  // Forward props + store from v2 implementation
  const store = Ariakit.useSelectStore({
    async setValue(nextValue) {
      if (!onChange) return;

      // Executes the logic in a microtask after the popup is closed.
      // This is simply to ensure the isOpen state matches that in Downshift.
      await Promise.resolve();
      const state = store.getState();
      const changeObject = {
        highlightedIndex: state.renderedItems.findIndex(item => item.value === nextValue),
        inputValue: '',
        isOpen: state.open,
        selectedItem: {
          name: nextValue,
          key: nextValue
        },
        type: ''
      };
      onChange(changeObject);
    }
  });
  const children = options.map(({
    name,
    key,
    __experimentalHint,
    ...rest
  }) => {
    const withHint = (0, _react.createElement)(Styled.WithHintWrapper, null, (0, _react.createElement)("span", null, name), (0, _react.createElement)(Styled.ExperimentalHintItem, {
      className: "components-custom-select-control__item-hint"
    }, __experimentalHint));
    return (0, _react.createElement)(_.CustomSelectItem, {
      key: key,
      value: name,
      children: __experimentalShowSelectedHint ? withHint : name,
      ...rest
    });
  });
  const renderSelectedValueHint = () => {
    const {
      value: currentValue
    } = store.getState();
    const currentHint = options?.find(({
      name
    }) => currentValue === name);
    return (0, _react.createElement)(_react.Fragment, null, currentValue, (0, _react.createElement)(Styled.SelectedExperimentalHintItem, {
      className: "components-custom-select-control__hint"
    }, currentHint?.__experimentalHint));
  };

  // translate legacy button sizing
  const contextSystemValue = (0, _element.useMemo)(() => {
    let selectedSize;
    if (__next40pxDefaultSize && size === 'default' || size === '__unstable-large') {
      selectedSize = 'default';
    } else if (!__next40pxDefaultSize && size === 'default') {
      selectedSize = 'compact';
    } else {
      selectedSize = size;
    }
    return {
      CustomSelectControlButton: {
        _overrides: {
          size: selectedSize
        }
      }
    };
  }, [__next40pxDefaultSize, size]);
  const translatedProps = {
    'aria-describedby': props.describedBy,
    children,
    renderSelectedValue: __experimentalShowSelectedHint ? renderSelectedValueHint : undefined,
    ...restProps
  };
  return (0, _react.createElement)(_context.ContextSystemProvider, {
    value: contextSystemValue
  }, (0, _react.createElement)(_customSelect.default, {
    ...translatedProps,
    store: store
  }));
}
var _default = exports.default = CustomSelect;
//# sourceMappingURL=index.js.map