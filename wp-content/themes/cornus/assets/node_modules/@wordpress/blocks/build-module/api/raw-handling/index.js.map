{"version":3,"names":["deprecated","getPhrasingContentSchema","htmlToBlocks","parse","normaliseBlocks","specialCommentConverter","listReducer","blockquoteNormaliser","figureContentReducer","shortcodeConverter","deepFilterHTML","getBlockContentSchema","pasteHandler","deprecatedGetPhrasingContentSchema","context","since","alternative","rawHandler","HTML","indexOf","pieces","blockContentSchema","map","piece","filters","flat","filter","Boolean"],"sources":["@wordpress/blocks/src/api/raw-handling/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport deprecated from '@wordpress/deprecated';\nimport { getPhrasingContentSchema } from '@wordpress/dom';\n\n/**\n * Internal dependencies\n */\nimport { htmlToBlocks } from './html-to-blocks';\nimport parse from '../parser';\nimport normaliseBlocks from './normalise-blocks';\nimport specialCommentConverter from './special-comment-converter';\nimport listReducer from './list-reducer';\nimport blockquoteNormaliser from './blockquote-normaliser';\nimport figureContentReducer from './figure-content-reducer';\nimport shortcodeConverter from './shortcode-converter';\nimport { deepFilterHTML, getBlockContentSchema } from './utils';\n\nexport { pasteHandler } from './paste-handler';\n\nexport function deprecatedGetPhrasingContentSchema( context ) {\n\tdeprecated( 'wp.blocks.getPhrasingContentSchema', {\n\t\tsince: '5.6',\n\t\talternative: 'wp.dom.getPhrasingContentSchema',\n\t} );\n\treturn getPhrasingContentSchema( context );\n}\n\n/**\n * Converts an HTML string to known blocks.\n *\n * @param {Object} $1\n * @param {string} $1.HTML The HTML to convert.\n *\n * @return {Array} A list of blocks.\n */\nexport function rawHandler( { HTML = '' } ) {\n\t// If we detect block delimiters, parse entirely as blocks.\n\tif ( HTML.indexOf( '<!-- wp:' ) !== -1 ) {\n\t\treturn parse( HTML );\n\t}\n\n\t// An array of HTML strings and block objects. The blocks replace matched\n\t// shortcodes.\n\tconst pieces = shortcodeConverter( HTML );\n\tconst blockContentSchema = getBlockContentSchema();\n\n\treturn pieces\n\t\t.map( ( piece ) => {\n\t\t\t// Already a block from shortcode.\n\t\t\tif ( typeof piece !== 'string' ) {\n\t\t\t\treturn piece;\n\t\t\t}\n\n\t\t\t// These filters are essential for some blocks to be able to transform\n\t\t\t// from raw HTML. These filters move around some content or add\n\t\t\t// additional tags, they do not remove any content.\n\t\t\tconst filters = [\n\t\t\t\t// Needed to adjust invalid lists.\n\t\t\t\tlistReducer,\n\t\t\t\t// Needed to create more and nextpage blocks.\n\t\t\t\tspecialCommentConverter,\n\t\t\t\t// Needed to create media blocks.\n\t\t\t\tfigureContentReducer,\n\t\t\t\t// Needed to create the quote block, which cannot handle text\n\t\t\t\t// without wrapper paragraphs.\n\t\t\t\tblockquoteNormaliser,\n\t\t\t];\n\n\t\t\tpiece = deepFilterHTML( piece, filters, blockContentSchema );\n\t\t\tpiece = normaliseBlocks( piece );\n\n\t\t\treturn htmlToBlocks( piece, rawHandler );\n\t\t} )\n\t\t.flat()\n\t\t.filter( Boolean );\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,uBAAuB;AAC9C,SAASC,wBAAwB,QAAQ,gBAAgB;;AAEzD;AACA;AACA;AACA,SAASC,YAAY,QAAQ,kBAAkB;AAC/C,OAAOC,KAAK,MAAM,WAAW;AAC7B,OAAOC,eAAe,MAAM,oBAAoB;AAChD,OAAOC,uBAAuB,MAAM,6BAA6B;AACjE,OAAOC,WAAW,MAAM,gBAAgB;AACxC,OAAOC,oBAAoB,MAAM,yBAAyB;AAC1D,OAAOC,oBAAoB,MAAM,0BAA0B;AAC3D,OAAOC,kBAAkB,MAAM,uBAAuB;AACtD,SAASC,cAAc,EAAEC,qBAAqB,QAAQ,SAAS;AAE/D,SAASC,YAAY,QAAQ,iBAAiB;AAE9C,OAAO,SAASC,kCAAkCA,CAAEC,OAAO,EAAG;EAC7Dd,UAAU,CAAE,oCAAoC,EAAE;IACjDe,KAAK,EAAE,KAAK;IACZC,WAAW,EAAE;EACd,CAAE,CAAC;EACH,OAAOf,wBAAwB,CAAEa,OAAQ,CAAC;AAC3C;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,SAASG,UAAUA,CAAE;EAAEC,IAAI,GAAG;AAAG,CAAC,EAAG;EAC3C;EACA,IAAKA,IAAI,CAACC,OAAO,CAAE,UAAW,CAAC,KAAK,CAAC,CAAC,EAAG;IACxC,OAAOhB,KAAK,CAAEe,IAAK,CAAC;EACrB;;EAEA;EACA;EACA,MAAME,MAAM,GAAGX,kBAAkB,CAAES,IAAK,CAAC;EACzC,MAAMG,kBAAkB,GAAGV,qBAAqB,CAAC,CAAC;EAElD,OAAOS,MAAM,CACXE,GAAG,CAAIC,KAAK,IAAM;IAClB;IACA,IAAK,OAAOA,KAAK,KAAK,QAAQ,EAAG;MAChC,OAAOA,KAAK;IACb;;IAEA;IACA;IACA;IACA,MAAMC,OAAO,GAAG;IACf;IACAlB,WAAW;IACX;IACAD,uBAAuB;IACvB;IACAG,oBAAoB;IACpB;IACA;IACAD,oBAAoB,CACpB;IAEDgB,KAAK,GAAGb,cAAc,CAAEa,KAAK,EAAEC,OAAO,EAAEH,kBAAmB,CAAC;IAC5DE,KAAK,GAAGnB,eAAe,CAAEmB,KAAM,CAAC;IAEhC,OAAOrB,YAAY,CAAEqB,KAAK,EAAEN,UAAW,CAAC;EACzC,CAAE,CAAC,CACFQ,IAAI,CAAC,CAAC,CACNC,MAAM,CAAEC,OAAQ,CAAC;AACpB"}