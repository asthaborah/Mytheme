"use client";
import {
  useComposite
} from "../__chunks/7QTPYGNZ.js";
import "../__chunks/3IEDWLST.js";
import {
  useToolbarStore
} from "../__chunks/BPNXFCFY.js";
import "../__chunks/7GBW5FLS.js";
import "../__chunks/Y6GYTNQ2.js";
import {
  ToolbarScopedContextProvider,
  useToolbarProviderContext
} from "../__chunks/SOK7T35T.js";
import "../__chunks/IB7YUKH5.js";
import "../__chunks/4UUKJZ4V.js";
import "../__chunks/KK7H3W2B.js";
import "../__chunks/SHA3WOPI.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/3ORBWXWF.js";
import "../__chunks/EKQEJRUF.js";
import {
  useWrapElement
} from "../__chunks/6O5OEQGF.js";
import "../__chunks/XM66DUTO.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/4R3V3JGP.js";

// src/toolbar/toolbar.tsx
import { jsx } from "react/jsx-runtime";
var useToolbar = createHook(
  (_a) => {
    var _b = _a, {
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    } = _b, props = __objRest(_b, [
      "store",
      "orientation",
      "virtualFocus",
      "focusLoop",
      "rtl"
    ]);
    const context = useToolbarProviderContext();
    storeProp = storeProp || context;
    const store = useToolbarStore({
      store: storeProp,
      orientation: orientationProp,
      virtualFocus,
      focusLoop,
      rtl
    });
    const orientation = store.useState(
      (state) => state.orientation === "both" ? void 0 : state.orientation
    );
    props = useWrapElement(
      props,
      (element) => /* @__PURE__ */ jsx(ToolbarScopedContextProvider, { value: store, children: element }),
      [store]
    );
    props = __spreadValues({
      role: "toolbar",
      "aria-orientation": orientation
    }, props);
    props = useComposite(__spreadValues({ store }, props));
    return props;
  }
);
var Toolbar = createComponent((props) => {
  const htmlProps = useToolbar(props);
  return createElement("div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  Toolbar.displayName = "Toolbar";
}
export {
  Toolbar,
  useToolbar
};
