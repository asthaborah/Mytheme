{"version":3,"names":["getValueFromObjectPath","object","path","defaultValue","_value","normalizedPath","Array","isArray","split","value","forEach","fieldName","exports"],"sources":["@wordpress/blocks/src/store/utils.js"],"sourcesContent":["/**\n * Helper util to return a value from a certain path of the object.\n * Path is specified as either:\n * - a string of properties, separated by dots, for example: \"x.y\".\n * - an array of properties, for example `[ 'x', 'y' ]`.\n * You can also specify a default value in case the result is nullish.\n *\n * @param {Object}       object       Input object.\n * @param {string|Array} path         Path to the object property.\n * @param {*}            defaultValue Default value if the value at the specified path is nullish.\n * @return {*} Value of the object property at the specified path.\n */\nexport const getValueFromObjectPath = ( object, path, defaultValue ) => {\n\tconst normalizedPath = Array.isArray( path ) ? path : path.split( '.' );\n\tlet value = object;\n\tnormalizedPath.forEach( ( fieldName ) => {\n\t\tvalue = value?.[ fieldName ];\n\t} );\n\treturn value ?? defaultValue;\n};\n"],"mappings":";;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,MAAMA,sBAAsB,GAAGA,CAAEC,MAAM,EAAEC,IAAI,EAAEC,YAAY,KAAM;EAAA,IAAAC,MAAA;EACvE,MAAMC,cAAc,GAAGC,KAAK,CAACC,OAAO,CAAEL,IAAK,CAAC,GAAGA,IAAI,GAAGA,IAAI,CAACM,KAAK,CAAE,GAAI,CAAC;EACvE,IAAIC,KAAK,GAAGR,MAAM;EAClBI,cAAc,CAACK,OAAO,CAAIC,SAAS,IAAM;IACxCF,KAAK,GAAGA,KAAK,GAAIE,SAAS,CAAE;EAC7B,CAAE,CAAC;EACH,QAAAP,MAAA,GAAOK,KAAK,cAAAL,MAAA,cAAAA,MAAA,GAAID,YAAY;AAC7B,CAAC;AAACS,OAAA,CAAAZ,sBAAA,GAAAA,sBAAA"}