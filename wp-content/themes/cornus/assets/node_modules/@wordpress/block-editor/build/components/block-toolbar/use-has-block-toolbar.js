"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useHasBlockToolbar = useHasBlockToolbar;
var _data = require("@wordpress/data");
var _blocks = require("@wordpress/blocks");
var _store = require("../../store");
var _useHasBlockControls = require("../block-controls/use-has-block-controls");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Returns true if the block toolbar should be shown.
 *
 * @return {boolean} Whether the block toolbar component will be rendered.
 */
function useHasBlockToolbar() {
  const hasAnyBlockControls = (0, _useHasBlockControls.useHasAnyBlockControls)();
  return (0, _data.useSelect)(select => {
    const {
      getBlockEditingMode,
      getBlockName,
      getSelectedBlockClientIds
    } = select(_store.store);
    const selectedBlockClientIds = getSelectedBlockClientIds();
    const selectedBlockClientId = selectedBlockClientIds[0];
    const isDefaultEditingMode = getBlockEditingMode(selectedBlockClientId) === 'default';
    const blockType = selectedBlockClientId && (0, _blocks.getBlockType)(getBlockName(selectedBlockClientId));
    const isToolbarEnabled = blockType && (0, _blocks.hasBlockSupport)(blockType, '__experimentalToolbar', true);
    if (!isToolbarEnabled || !isDefaultEditingMode && !hasAnyBlockControls) {
      return false;
    }
    return true;
  }, [hasAnyBlockControls]);
}
//# sourceMappingURL=use-has-block-toolbar.js.map