"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _6PUZ4NWRcjs = require('./6PUZ4NWR.cjs');



var _2WCJJQSKcjs = require('./2WCJJQSK.cjs');


var _H6OLBVHAcjs = require('./H6OLBVHA.cjs');


var _YPVQYY4Jcjs = require('./YPVQYY4J.cjs');




var _RNZNGEL4cjs = require('./RNZNGEL4.cjs');







var _EO6LS72Hcjs = require('./EO6LS72H.cjs');




var _AV6KTKLEcjs = require('./AV6KTKLE.cjs');

// src/select/select-list.tsx
var _react = require('react');
var _events = require('@ariakit/core/utils/events');
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var useSelectList = _RNZNGEL4cjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, {
      store,
      resetOnEscape = true,
      hideOnEnter = true,
      focusOnMove = true,
      composite,
      alwaysVisible
    } = _b, props = _AV6KTKLEcjs.__objRest.call(void 0, _b, [
      "store",
      "resetOnEscape",
      "hideOnEnter",
      "focusOnMove",
      "composite",
      "alwaysVisible"
    ]);
    const context = _2WCJJQSKcjs.useSelectProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "SelectList must receive a `store` prop or be wrapped in a SelectProvider component."
    );
    const ref = _react.useRef.call(void 0, null);
    const id = _EO6LS72Hcjs.useId.call(void 0, props.id);
    const value = store.useState("value");
    const multiSelectable = Array.isArray(value);
    const [defaultValue, setDefaultValue] = _react.useState.call(void 0, value);
    const mounted = store.useState("mounted");
    _react.useEffect.call(void 0, () => {
      if (mounted)
        return;
      setDefaultValue(value);
    }, [mounted, value]);
    resetOnEscape = resetOnEscape && !multiSelectable;
    const onKeyDownProp = props.onKeyDown;
    const resetOnEscapeProp = _EO6LS72Hcjs.useBooleanEvent.call(void 0, resetOnEscape);
    const hideOnEnterProp = _EO6LS72Hcjs.useBooleanEvent.call(void 0, hideOnEnter);
    const onKeyDown = _EO6LS72Hcjs.useEvent.call(void 0, (event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (event.defaultPrevented)
        return;
      if (event.key === "Escape" && resetOnEscapeProp(event)) {
        store == null ? void 0 : store.setValue(defaultValue);
      }
      if (event.key === " " || event.key === "Enter") {
        if (_events.isSelfTarget.call(void 0, event) && hideOnEnterProp(event)) {
          event.preventDefault();
          store == null ? void 0 : store.hide();
        }
      }
    });
    props = _EO6LS72Hcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _2WCJJQSKcjs.SelectScopedContextProvider, { value: store, children: element }),
      [store]
    );
    const labelId = store.useState((state) => {
      var _a2;
      return (_a2 = state.labelElement) == null ? void 0 : _a2.id;
    });
    const hasCombobox = !!store.combobox;
    composite = composite != null ? composite : !hasCombobox;
    if (composite) {
      props = _AV6KTKLEcjs.__spreadValues.call(void 0, { role: "listbox" }, props);
    }
    const role = _EO6LS72Hcjs.useAttribute.call(void 0, ref, "role", props.role);
    const isCompositeRole = role === "listbox" || role === "menu" || role === "tree" || role === "grid";
    const ariaMultiSelectable = composite || isCompositeRole ? multiSelectable || void 0 : void 0;
    const hidden = _YPVQYY4Jcjs.isHidden.call(void 0, mounted, props.hidden, alwaysVisible);
    const style = hidden ? _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props.style), { display: "none" }) : props.style;
    props = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {
      id,
      "aria-labelledby": labelId,
      "aria-multiselectable": ariaMultiSelectable,
      hidden
    }, props), {
      ref: _EO6LS72Hcjs.useMergeRefs.call(void 0, id ? store.setContentElement : null, ref, props.ref),
      style,
      onKeyDown
    });
    props = _H6OLBVHAcjs.useComposite.call(void 0, _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, { store }, props), { composite }));
    props = _6PUZ4NWRcjs.useCompositeTypeahead.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, { store, typeahead: !hasCombobox }, props));
    return props;
  }
);
var SelectList = _RNZNGEL4cjs.createComponent.call(void 0, (props) => {
  const htmlProps = useSelectList(props);
  return _RNZNGEL4cjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  SelectList.displayName = "SelectList";
}




exports.useSelectList = useSelectList; exports.SelectList = SelectList;
