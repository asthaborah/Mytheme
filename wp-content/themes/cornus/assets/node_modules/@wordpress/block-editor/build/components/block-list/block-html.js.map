{"version":3,"names":["_reactAutosizeTextarea","_interopRequireDefault","require","_element","_data","_blocks","_store","BlockHTML","clientId","html","setHtml","useState","block","useSelect","select","blockEditorStore","getBlock","updateBlock","useDispatch","onChange","blockType","getBlockType","name","attributes","getBlockAttributes","content","getSaveContent","isValid","validateBlock","originalContent","useEffect","getBlockContent","_react","createElement","default","className","value","onBlur","event","target","_default","exports"],"sources":["@wordpress/block-editor/src/components/block-list/block-html.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport TextareaAutosize from 'react-autosize-textarea';\n\n/**\n * WordPress dependencies\n */\nimport { useEffect, useState } from '@wordpress/element';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport {\n\tgetBlockAttributes,\n\tgetBlockContent,\n\tgetBlockType,\n\tgetSaveContent,\n\tvalidateBlock,\n} from '@wordpress/blocks';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\nfunction BlockHTML( { clientId } ) {\n\tconst [ html, setHtml ] = useState( '' );\n\tconst block = useSelect(\n\t\t( select ) => select( blockEditorStore ).getBlock( clientId ),\n\t\t[ clientId ]\n\t);\n\tconst { updateBlock } = useDispatch( blockEditorStore );\n\tconst onChange = () => {\n\t\tconst blockType = getBlockType( block.name );\n\n\t\tif ( ! blockType ) {\n\t\t\treturn;\n\t\t}\n\n\t\tconst attributes = getBlockAttributes(\n\t\t\tblockType,\n\t\t\thtml,\n\t\t\tblock.attributes\n\t\t);\n\n\t\t// If html is empty  we reset the block to the default HTML and mark it as valid to avoid triggering an error\n\t\tconst content = html ? html : getSaveContent( blockType, attributes );\n\t\tconst [ isValid ] = html\n\t\t\t? validateBlock( {\n\t\t\t\t\t...block,\n\t\t\t\t\tattributes,\n\t\t\t\t\toriginalContent: content,\n\t\t\t  } )\n\t\t\t: [ true ];\n\n\t\tupdateBlock( clientId, {\n\t\t\tattributes,\n\t\t\toriginalContent: content,\n\t\t\tisValid,\n\t\t} );\n\n\t\t// Ensure the state is updated if we reset so it displays the default content.\n\t\tif ( ! html ) {\n\t\t\tsetHtml( content );\n\t\t}\n\t};\n\n\tuseEffect( () => {\n\t\tsetHtml( getBlockContent( block ) );\n\t}, [ block ] );\n\n\treturn (\n\t\t<TextareaAutosize\n\t\t\tclassName=\"block-editor-block-list__block-html-textarea\"\n\t\t\tvalue={ html }\n\t\t\tonBlur={ onChange }\n\t\t\tonChange={ ( event ) => setHtml( event.target.value ) }\n\t\t/>\n\t);\n}\n\nexport default BlockHTML;\n"],"mappings":";;;;;;;;AAGA,IAAAA,sBAAA,GAAAC,sBAAA,CAAAC,OAAA;AAKA,IAAAC,QAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,OAAA,GAAAH,OAAA;AAWA,IAAAI,MAAA,GAAAJ,OAAA;AArBA;AACA;AACA;;AAGA;AACA;AACA;;AAWA;AACA;AACA;;AAGA,SAASK,SAASA,CAAE;EAAEC;AAAS,CAAC,EAAG;EAClC,MAAM,CAAEC,IAAI,EAAEC,OAAO,CAAE,GAAG,IAAAC,iBAAQ,EAAE,EAAG,CAAC;EACxC,MAAMC,KAAK,GAAG,IAAAC,eAAS,EACpBC,MAAM,IAAMA,MAAM,CAAEC,YAAiB,CAAC,CAACC,QAAQ,CAAER,QAAS,CAAC,EAC7D,CAAEA,QAAQ,CACX,CAAC;EACD,MAAM;IAAES;EAAY,CAAC,GAAG,IAAAC,iBAAW,EAAEH,YAAiB,CAAC;EACvD,MAAMI,QAAQ,GAAGA,CAAA,KAAM;IACtB,MAAMC,SAAS,GAAG,IAAAC,oBAAY,EAAET,KAAK,CAACU,IAAK,CAAC;IAE5C,IAAK,CAAEF,SAAS,EAAG;MAClB;IACD;IAEA,MAAMG,UAAU,GAAG,IAAAC,0BAAkB,EACpCJ,SAAS,EACTX,IAAI,EACJG,KAAK,CAACW,UACP,CAAC;;IAED;IACA,MAAME,OAAO,GAAGhB,IAAI,GAAGA,IAAI,GAAG,IAAAiB,sBAAc,EAAEN,SAAS,EAAEG,UAAW,CAAC;IACrE,MAAM,CAAEI,OAAO,CAAE,GAAGlB,IAAI,GACrB,IAAAmB,qBAAa,EAAE;MACf,GAAGhB,KAAK;MACRW,UAAU;MACVM,eAAe,EAAEJ;IACjB,CAAE,CAAC,GACH,CAAE,IAAI,CAAE;IAEXR,WAAW,CAAET,QAAQ,EAAE;MACtBe,UAAU;MACVM,eAAe,EAAEJ,OAAO;MACxBE;IACD,CAAE,CAAC;;IAEH;IACA,IAAK,CAAElB,IAAI,EAAG;MACbC,OAAO,CAAEe,OAAQ,CAAC;IACnB;EACD,CAAC;EAED,IAAAK,kBAAS,EAAE,MAAM;IAChBpB,OAAO,CAAE,IAAAqB,uBAAe,EAAEnB,KAAM,CAAE,CAAC;EACpC,CAAC,EAAE,CAAEA,KAAK,CAAG,CAAC;EAEd,OACC,IAAAoB,MAAA,CAAAC,aAAA,EAACjC,sBAAA,CAAAkC,OAAgB;IAChBC,SAAS,EAAC,8CAA8C;IACxDC,KAAK,EAAG3B,IAAM;IACd4B,MAAM,EAAGlB,QAAU;IACnBA,QAAQ,EAAKmB,KAAK,IAAM5B,OAAO,CAAE4B,KAAK,CAACC,MAAM,CAACH,KAAM;EAAG,CACvD,CAAC;AAEJ;AAAC,IAAAI,QAAA,GAAAC,OAAA,CAAAP,OAAA,GAEc3B,SAAS"}