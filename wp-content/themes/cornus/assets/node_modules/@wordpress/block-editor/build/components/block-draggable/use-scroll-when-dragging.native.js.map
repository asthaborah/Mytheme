{"version":3,"names":["_reactNative","require","_reactNativeReanimated","_blockListContext","SCROLL_INACTIVE_DISTANCE_PX","SCROLL_INTERVAL_MS","VELOCITY_MULTIPLIER","useScrollWhenDragging","scrollRef","useBlockListContext","animatedScrollRef","useAnimatedRef","scrollViewRef","height","windowHeight","useWindowDimensions","velocityY","useSharedValue","offsetY","dragStartY","animationTimer","isAnimationTimerActive","isScrollActive","scroll","maxOffsetY","scrollHandler","event","contentSize","contentOffset","layoutMeasurement","value","y","stopScrolling","cancelAnimation","startScrolling","withRepeat","withTiming","duration","easing","Easing","linear","scrollOnDragOver","dragDistance","Math","max","abs","distancePercentage","useAnimatedReaction","previous","delta","newOffset","min","scrollTo"],"sources":["@wordpress/block-editor/src/components/block-draggable/use-scroll-when-dragging.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { useWindowDimensions } from 'react-native';\nimport {\n\tuseSharedValue,\n\tuseAnimatedRef,\n\tscrollTo,\n\tuseAnimatedReaction,\n\twithTiming,\n\twithRepeat,\n\tcancelAnimation,\n\tEasing,\n} from 'react-native-reanimated';\n\n/**\n * Internal dependencies\n */\nimport { useBlockListContext } from '../block-list/block-list-context';\n\nconst SCROLL_INACTIVE_DISTANCE_PX = 50;\nconst SCROLL_INTERVAL_MS = 1000;\nconst VELOCITY_MULTIPLIER = 5000;\n\n/**\n * React hook that scrolls the scroll container when a block is being dragged.\n *\n * @return {Function[]} `startScrolling`, `scrollOnDragOver`, `stopScrolling`\n *                      functions to be called in `onDragStart`, `onDragOver`\n *                      and `onDragEnd` events respectively. Additionally,\n * \t\t\t\t\t\t`scrollHandler` function is returned which should be\n * \t\t\t\t\t\tcalled in the `onScroll` event of the block list.\n */\nexport default function useScrollWhenDragging() {\n\tconst { scrollRef } = useBlockListContext();\n\tconst animatedScrollRef = useAnimatedRef();\n\tanimatedScrollRef( scrollRef?.scrollViewRef );\n\n\tconst { height: windowHeight } = useWindowDimensions();\n\n\tconst velocityY = useSharedValue( 0 );\n\tconst offsetY = useSharedValue( 0 );\n\tconst dragStartY = useSharedValue( 0 );\n\tconst animationTimer = useSharedValue( 0 );\n\tconst isAnimationTimerActive = useSharedValue( false );\n\tconst isScrollActive = useSharedValue( false );\n\n\tconst scroll = {\n\t\toffsetY: useSharedValue( 0 ),\n\t\tmaxOffsetY: useSharedValue( 0 ),\n\t};\n\tconst scrollHandler = ( event ) => {\n\t\t'worklet';\n\t\tconst { contentSize, contentOffset, layoutMeasurement } = event;\n\t\tscroll.offsetY.value = contentOffset.y;\n\t\tscroll.maxOffsetY.value = contentSize.height - layoutMeasurement.height;\n\t};\n\n\tconst stopScrolling = () => {\n\t\t'worklet';\n\t\tcancelAnimation( animationTimer );\n\n\t\tisAnimationTimerActive.value = false;\n\t\tisScrollActive.value = false;\n\t\tvelocityY.value = 0;\n\t};\n\n\tconst startScrolling = ( y ) => {\n\t\t'worklet';\n\t\tstopScrolling();\n\t\toffsetY.value = scroll.offsetY.value;\n\t\tdragStartY.value = y;\n\n\t\tanimationTimer.value = 0;\n\t\tanimationTimer.value = withRepeat(\n\t\t\twithTiming( 1, {\n\t\t\t\tduration: SCROLL_INTERVAL_MS,\n\t\t\t\teasing: Easing.linear,\n\t\t\t} ),\n\t\t\t-1,\n\t\t\ttrue\n\t\t);\n\t\tisAnimationTimerActive.value = true;\n\t};\n\n\tconst scrollOnDragOver = ( y ) => {\n\t\t'worklet';\n\t\tconst dragDistance = Math.max(\n\t\t\tMath.abs( y - dragStartY.value ) - SCROLL_INACTIVE_DISTANCE_PX,\n\t\t\t0\n\t\t);\n\t\tconst distancePercentage = dragDistance / windowHeight;\n\n\t\tif ( ! isScrollActive.value ) {\n\t\t\tisScrollActive.value = dragDistance > 0;\n\t\t} else if ( y > dragStartY.value ) {\n\t\t\t// User is dragging downwards.\n\t\t\tvelocityY.value = VELOCITY_MULTIPLIER * distancePercentage;\n\t\t} else if ( y < dragStartY.value ) {\n\t\t\t// User is dragging upwards.\n\t\t\tvelocityY.value = -VELOCITY_MULTIPLIER * distancePercentage;\n\t\t} else {\n\t\t\tvelocityY.value = 0;\n\t\t}\n\t};\n\n\tuseAnimatedReaction(\n\t\t() => animationTimer.value,\n\t\t( value, previous ) => {\n\t\t\tif ( velocityY.value === 0 ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst delta = Math.abs( value - previous );\n\t\t\tlet newOffset = offsetY.value + delta * velocityY.value;\n\n\t\t\tif ( scroll.maxOffsetY.value !== 0 ) {\n\t\t\t\tnewOffset = Math.max(\n\t\t\t\t\t0,\n\t\t\t\t\tMath.min( scroll.maxOffsetY.value, newOffset )\n\t\t\t\t);\n\t\t\t} else {\n\t\t\t\t// Scroll values are empty until receiving the first scroll event.\n\t\t\t\t// In that case, the max offset is unknown and we can't clamp the\n\t\t\t\t// new offset value.\n\t\t\t\tnewOffset = Math.max( 0, newOffset );\n\t\t\t}\n\n\t\t\toffsetY.value = newOffset;\n\t\t\tscrollTo( animatedScrollRef, 0, offsetY.value, false );\n\t\t}\n\t);\n\n\treturn [ startScrolling, scrollOnDragOver, stopScrolling, scrollHandler ];\n}\n"],"mappings":"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"}