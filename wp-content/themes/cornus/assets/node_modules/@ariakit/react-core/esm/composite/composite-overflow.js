"use client";
import {
  usePopover
} from "../__chunks/IRX7SFUJ.js";
import "../__chunks/NERBASET.js";
import "../__chunks/LWHPHW7Q.js";
import "../__chunks/TQYOGOE2.js";
import "../__chunks/BULCTPRV.js";
import "../__chunks/6BJGLK2C.js";
import "../__chunks/CS347UVZ.js";
import "../__chunks/IUB2BTEK.js";
import "../__chunks/XHJGS6Z5.js";
import "../__chunks/TL67WVI6.js";
import "../__chunks/MKDDWKFK.js";
import "../__chunks/72E5EPFF.js";
import "../__chunks/OOBDFMJL.js";
import "../__chunks/X6WIMZJE.js";
import "../__chunks/677M2CI3.js";
import "../__chunks/6GXEOXGT.js";
import "../__chunks/HPP6CWMY.js";
import "../__chunks/UYRJLDVS.js";
import "../__chunks/JPXNJYSO.js";
import "../__chunks/CHKJ74UC.js";
import "../__chunks/7452U3HH.js";
import "../__chunks/XPF5GU3Q.js";
import "../__chunks/FSFPRQFR.js";
import "../__chunks/CLE7NTOY.js";
import "../__chunks/7H5KSHHF.js";
import "../__chunks/G6BJYYBK.js";
import "../__chunks/OAYFXAQ2.js";
import "../__chunks/KK7H3W2B.js";
import "../__chunks/SHA3WOPI.js";
import "../__chunks/BG6HZDS7.js";
import {
  createComponent,
  createElement,
  createHook
} from "../__chunks/3ORBWXWF.js";
import "../__chunks/ZSELSBRM.js";
import "../__chunks/SFCBA2JZ.js";
import "../__chunks/EKQEJRUF.js";
import {
  useEvent
} from "../__chunks/6O5OEQGF.js";
import "../__chunks/XM66DUTO.js";
import {
  __objRest,
  __spreadProps,
  __spreadValues
} from "../__chunks/4R3V3JGP.js";

// src/composite/composite-overflow.ts
var hiddenStyle = {
  opacity: 0,
  pointerEvents: "none"
};
var useCompositeOverflow = createHook(
  (_a) => {
    var _b = _a, {
      store,
      backdropProps: backdropPropsProp,
      wrapperProps: wrapperPropsProp,
      portal = false
    } = _b, props = __objRest(_b, [
      "store",
      "backdropProps",
      "wrapperProps",
      "portal"
    ]);
    const onFocusProp = props.onFocus;
    const onFocus = useEvent((event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (event.defaultPrevented)
        return;
      store.show();
    });
    const mounted = store.useState("mounted");
    const getStyle = (styleProp) => mounted ? styleProp : __spreadValues(__spreadValues({}, hiddenStyle), styleProp);
    const backdropProps = __spreadProps(__spreadValues({
      hidden: false
    }, backdropPropsProp), {
      style: getStyle(backdropPropsProp == null ? void 0 : backdropPropsProp.style)
    });
    const wrapperProps = __spreadProps(__spreadValues({}, wrapperPropsProp), {
      style: getStyle(wrapperPropsProp == null ? void 0 : wrapperPropsProp.style)
    });
    props = __spreadProps(__spreadValues({
      role: "presentation",
      hidden: false,
      focusable: false
    }, props), {
      onFocus
    });
    props = usePopover(__spreadValues({
      store,
      backdropProps,
      wrapperProps,
      portal
    }, props));
    return props;
  }
);
var CompositeOverflow = createComponent(
  (props) => {
    const htmlProps = useCompositeOverflow(props);
    return createElement("div", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  CompositeOverflow.displayName = "CompositeOverflow";
}
export {
  CompositeOverflow,
  useCompositeOverflow
};
