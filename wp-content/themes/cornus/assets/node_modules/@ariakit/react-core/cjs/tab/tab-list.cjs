"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";



var _I65V32V2cjs = require('../__chunks/I65V32V2.cjs');


var _H6OLBVHAcjs = require('../__chunks/H6OLBVHA.cjs');
require('../__chunks/6ZZYUFPW.cjs');
require('../__chunks/UZNYSPKP.cjs');
require('../__chunks/BZTDJIVT.cjs');
require('../__chunks/Z3GCTNW4.cjs');
require('../__chunks/75KXQZJX.cjs');




var _RNZNGEL4cjs = require('../__chunks/RNZNGEL4.cjs');


var _EO6LS72Hcjs = require('../__chunks/EO6LS72H.cjs');
require('../__chunks/CJDHQUBR.cjs');



var _AV6KTKLEcjs = require('../__chunks/AV6KTKLE.cjs');

// src/tab/tab-list.tsx
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
var useTabList = _RNZNGEL4cjs.createHook.call(void 0, (_a) => {
  var _b = _a, { store } = _b, props = _AV6KTKLEcjs.__objRest.call(void 0, _b, ["store"]);
  const context = _I65V32V2cjs.useTabProviderContext.call(void 0, );
  store = store || context;
  _misc.invariant.call(void 0, 
    store,
    process.env.NODE_ENV !== "production" && "TabList must receive a `store` prop or be wrapped in a TabProvider component."
  );
  const orientation = store.useState(
    (state) => state.orientation === "both" ? void 0 : state.orientation
  );
  props = _EO6LS72Hcjs.useWrapElement.call(void 0, 
    props,
    (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _I65V32V2cjs.TabScopedContextProvider, { value: store, children: element }),
    [store]
  );
  props = _AV6KTKLEcjs.__spreadValues.call(void 0, {
    role: "tablist",
    "aria-orientation": orientation
  }, props);
  props = _H6OLBVHAcjs.useComposite.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, { store }, props));
  return props;
});
var TabList = _RNZNGEL4cjs.createComponent.call(void 0, (props) => {
  const htmlProps = useTabList(props);
  return _RNZNGEL4cjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  TabList.displayName = "TabList";
}



exports.TabList = TabList; exports.useTabList = useTabList;
