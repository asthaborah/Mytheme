{"version":3,"names":["_element","require","_i18n","_components","_compose","_a11y","_data","_blockTypesList","_interopRequireDefault","_blockPatternsList","_inserterMenuExtension","_panel","_noResults","_useInsertionPoint","_usePatternsState","_useBlockTypesState","_searchItems","_inserterListbox","_sorting","_orderInserterBlockItems","_store","INITIAL_INSERTER_RESULTS","EMPTY_ARRAY","InserterSearchResults","filterValue","onSelect","onHover","onHoverPattern","rootClientId","clientId","isAppender","__experimentalInsertionIndex","maxBlockPatterns","maxBlockTypes","showBlockDirectory","isDraggable","shouldFocusBlock","prioritizePatterns","selectBlockOnInsert","showBlocks","debouncedSpeak","useDebounce","speak","prioritizedBlocks","useSelect","select","blockListSettings","blockEditorStore","getBlockListSettings","prioritizedInserterBlocks","destinationRootClientId","onInsertBlocks","useInsertionPoint","insertionIndex","blockTypes","blockTypeCategories","blockTypeCollections","onSelectBlockType","useBlockTypesState","patterns","onClickPattern","usePatternsState","filteredBlockPatterns","useMemo","results","searchItems","undefined","slice","maxBlockTypesToShow","length","filteredBlockTypes","nonPatternBlockTypes","filter","blockType","name","orderedItems","orderBy","orderInserterBlockItems","searchBlockItems","useEffect","count","resultsFoundMessage","sprintf","_n","currentShownBlockTypes","useAsyncList","step","currentShownPatterns","hasItems","blocksUI","_react","createElement","default","title","VisuallyHidden","__","items","label","patternsUI","className","shownPatterns","blockPatterns","Slot","fillProps","fills","_default","exports"],"sources":["@wordpress/block-editor/src/components/inserter/search-results.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useMemo, useEffect } from '@wordpress/element';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { VisuallyHidden } from '@wordpress/components';\nimport { useDebounce, useAsyncList } from '@wordpress/compose';\nimport { speak } from '@wordpress/a11y';\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport BlockTypesList from '../block-types-list';\nimport BlockPatternsList from '../block-patterns-list';\nimport __unstableInserterMenuExtension from '../inserter-menu-extension';\nimport InserterPanel from './panel';\nimport InserterNoResults from './no-results';\nimport useInsertionPoint from './hooks/use-insertion-point';\nimport usePatternsState from './hooks/use-patterns-state';\nimport useBlockTypesState from './hooks/use-block-types-state';\nimport { searchBlockItems, searchItems } from './search-items';\nimport InserterListbox from '../inserter-listbox';\nimport { orderBy } from '../../utils/sorting';\nimport { orderInserterBlockItems } from '../../utils/order-inserter-block-items';\nimport { store as blockEditorStore } from '../../store';\n\nconst INITIAL_INSERTER_RESULTS = 9;\n/**\n * Shared reference to an empty array for cases where it is important to avoid\n * returning a new array reference on every invocation and rerendering the component.\n *\n * @type {Array}\n */\nconst EMPTY_ARRAY = [];\n\nfunction InserterSearchResults( {\n\tfilterValue,\n\tonSelect,\n\tonHover,\n\tonHoverPattern,\n\trootClientId,\n\tclientId,\n\tisAppender,\n\t__experimentalInsertionIndex,\n\tmaxBlockPatterns,\n\tmaxBlockTypes,\n\tshowBlockDirectory = false,\n\tisDraggable = true,\n\tshouldFocusBlock = true,\n\tprioritizePatterns,\n\tselectBlockOnInsert,\n\tshowBlocks = true,\n} ) {\n\tconst debouncedSpeak = useDebounce( speak, 500 );\n\n\tconst { prioritizedBlocks } = useSelect(\n\t\t( select ) => {\n\t\t\tconst blockListSettings =\n\t\t\t\tselect( blockEditorStore ).getBlockListSettings( rootClientId );\n\n\t\t\treturn {\n\t\t\t\tprioritizedBlocks:\n\t\t\t\t\tblockListSettings?.prioritizedInserterBlocks || EMPTY_ARRAY,\n\t\t\t};\n\t\t},\n\t\t[ rootClientId ]\n\t);\n\n\tconst [ destinationRootClientId, onInsertBlocks ] = useInsertionPoint( {\n\t\tonSelect,\n\t\trootClientId,\n\t\tclientId,\n\t\tisAppender,\n\t\tinsertionIndex: __experimentalInsertionIndex,\n\t\tshouldFocusBlock,\n\t\tselectBlockOnInsert,\n\t} );\n\tconst [\n\t\tblockTypes,\n\t\tblockTypeCategories,\n\t\tblockTypeCollections,\n\t\tonSelectBlockType,\n\t] = useBlockTypesState( destinationRootClientId, onInsertBlocks );\n\tconst [ patterns, , onClickPattern ] = usePatternsState(\n\t\tonInsertBlocks,\n\t\tdestinationRootClientId\n\t);\n\n\tconst filteredBlockPatterns = useMemo( () => {\n\t\tif ( maxBlockPatterns === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tconst results = searchItems( patterns, filterValue );\n\t\treturn maxBlockPatterns !== undefined\n\t\t\t? results.slice( 0, maxBlockPatterns )\n\t\t\t: results;\n\t}, [ filterValue, patterns, maxBlockPatterns ] );\n\n\tlet maxBlockTypesToShow = maxBlockTypes;\n\tif ( prioritizePatterns && filteredBlockPatterns.length > 2 ) {\n\t\tmaxBlockTypesToShow = 0;\n\t}\n\n\tconst filteredBlockTypes = useMemo( () => {\n\t\tif ( maxBlockTypesToShow === 0 ) {\n\t\t\treturn [];\n\t\t}\n\t\tconst nonPatternBlockTypes = blockTypes.filter(\n\t\t\t( blockType ) => blockType.name !== 'core/block'\n\t\t);\n\t\tlet orderedItems = orderBy( nonPatternBlockTypes, 'frecency', 'desc' );\n\n\t\tif ( ! filterValue && prioritizedBlocks.length ) {\n\t\t\torderedItems = orderInserterBlockItems(\n\t\t\t\torderedItems,\n\t\t\t\tprioritizedBlocks\n\t\t\t);\n\t\t}\n\n\t\tconst results = searchBlockItems(\n\t\t\torderedItems,\n\t\t\tblockTypeCategories,\n\t\t\tblockTypeCollections,\n\t\t\tfilterValue\n\t\t);\n\n\t\treturn maxBlockTypesToShow !== undefined\n\t\t\t? results.slice( 0, maxBlockTypesToShow )\n\t\t\t: results;\n\t}, [\n\t\tfilterValue,\n\t\tblockTypes,\n\t\tblockTypeCategories,\n\t\tblockTypeCollections,\n\t\tmaxBlockTypesToShow,\n\t\tprioritizedBlocks,\n\t] );\n\n\t// Announce search results on change.\n\tuseEffect( () => {\n\t\tif ( ! filterValue ) {\n\t\t\treturn;\n\t\t}\n\t\tconst count = filteredBlockTypes.length + filteredBlockPatterns.length;\n\t\tconst resultsFoundMessage = sprintf(\n\t\t\t/* translators: %d: number of results. */\n\t\t\t_n( '%d result found.', '%d results found.', count ),\n\t\t\tcount\n\t\t);\n\t\tdebouncedSpeak( resultsFoundMessage );\n\t}, [\n\t\tfilterValue,\n\t\tdebouncedSpeak,\n\t\tfilteredBlockTypes,\n\t\tfilteredBlockPatterns,\n\t] );\n\n\tconst currentShownBlockTypes = useAsyncList( filteredBlockTypes, {\n\t\tstep: INITIAL_INSERTER_RESULTS,\n\t} );\n\tconst currentShownPatterns = useAsyncList(\n\t\tcurrentShownBlockTypes.length === filteredBlockTypes.length\n\t\t\t? filteredBlockPatterns\n\t\t\t: EMPTY_ARRAY\n\t);\n\n\tconst hasItems =\n\t\tfilteredBlockTypes.length > 0 || filteredBlockPatterns.length > 0;\n\n\tconst blocksUI = showBlocks && !! filteredBlockTypes.length && (\n\t\t<InserterPanel\n\t\t\ttitle={ <VisuallyHidden>{ __( 'Blocks' ) }</VisuallyHidden> }\n\t\t>\n\t\t\t<BlockTypesList\n\t\t\t\titems={ currentShownBlockTypes }\n\t\t\t\tonSelect={ onSelectBlockType }\n\t\t\t\tonHover={ onHover }\n\t\t\t\tlabel={ __( 'Blocks' ) }\n\t\t\t\tisDraggable={ isDraggable }\n\t\t\t/>\n\t\t</InserterPanel>\n\t);\n\n\tconst patternsUI = !! filteredBlockPatterns.length && (\n\t\t<InserterPanel\n\t\t\ttitle={\n\t\t\t\t<VisuallyHidden>{ __( 'Block patterns' ) }</VisuallyHidden>\n\t\t\t}\n\t\t>\n\t\t\t<div className=\"block-editor-inserter__quick-inserter-patterns\">\n\t\t\t\t<BlockPatternsList\n\t\t\t\t\tshownPatterns={ currentShownPatterns }\n\t\t\t\t\tblockPatterns={ filteredBlockPatterns }\n\t\t\t\t\tonClickPattern={ onClickPattern }\n\t\t\t\t\tonHover={ onHoverPattern }\n\t\t\t\t\tisDraggable={ isDraggable }\n\t\t\t\t/>\n\t\t\t</div>\n\t\t</InserterPanel>\n\t);\n\n\treturn (\n\t\t<InserterListbox>\n\t\t\t{ ! showBlockDirectory && ! hasItems && <InserterNoResults /> }\n\n\t\t\t{ prioritizePatterns ? patternsUI : blocksUI }\n\n\t\t\t{ !! filteredBlockTypes.length &&\n\t\t\t\t!! filteredBlockPatterns.length && (\n\t\t\t\t\t<div className=\"block-editor-inserter__quick-inserter-separator\" />\n\t\t\t\t) }\n\n\t\t\t{ prioritizePatterns ? blocksUI : patternsUI }\n\n\t\t\t{ showBlockDirectory && (\n\t\t\t\t<__unstableInserterMenuExtension.Slot\n\t\t\t\t\tfillProps={ {\n\t\t\t\t\t\tonSelect: onSelectBlockType,\n\t\t\t\t\t\tonHover,\n\t\t\t\t\t\tfilterValue,\n\t\t\t\t\t\thasItems,\n\t\t\t\t\t\trootClientId: destinationRootClientId,\n\t\t\t\t\t} }\n\t\t\t\t>\n\t\t\t\t\t{ ( fills ) => {\n\t\t\t\t\t\tif ( fills.length ) {\n\t\t\t\t\t\t\treturn fills;\n\t\t\t\t\t\t}\n\t\t\t\t\t\tif ( ! hasItems ) {\n\t\t\t\t\t\t\treturn <InserterNoResults />;\n\t\t\t\t\t\t}\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t} }\n\t\t\t\t</__unstableInserterMenuExtension.Slot>\n\t\t\t) }\n\t\t</InserterListbox>\n\t);\n}\n\nexport default InserterSearchResults;\n"],"mappings":"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"}