"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.chevronIconSize = exports.Select = exports.InputControlSuffixWrapperWithClickThrough = exports.DownArrowWrapper = void 0;
var _base = _interopRequireDefault(require("@emotion/styled/base"));
var _react = require("@emotion/react");
var _utils = require("../../utils");
var _space = require("../../utils/space");
var _inputSuffixWrapper = _interopRequireDefault(require("../../input-control/input-suffix-wrapper"));
var _inputControlStyles = require("../../input-control/styles/input-control-styles");
/**
 * External dependencies
 */

/**
 * Internal dependencies
 */

const disabledStyles = ({
  disabled
}) => {
  if (!disabled) return '';
  return /*#__PURE__*/(0, _react.css)({
    color: _utils.COLORS.ui.textDisabled
  }, process.env.NODE_ENV === "production" ? "" : ";label:disabledStyles;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE0QlEiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcbmltcG9ydCB7IGZvbnRTaXplU3R5bGVzIH0gZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9zdHlsZXMvaW5wdXQtY29udHJvbC1zdHlsZXMnO1xuXG5pbnRlcmZhY2UgU2VsZWN0UHJvcHNcblx0ZXh0ZW5kcyBQaWNrPFxuXHRcdFNlbGVjdENvbnRyb2xQcm9wcyxcblx0XHQnX19uZXh0NDBweERlZmF1bHRTaXplJyB8ICdkaXNhYmxlZCcgfCAnbXVsdGlwbGUnXG5cdD4ge1xuXHQvLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXG5cdC8vIGBzaXplYCBIVE1MIGF0dHJpYnV0ZSBvZiB0aGUgYHNlbGVjdGAgZWxlbWVudC5cblx0c2VsZWN0U2l6ZT86IFNlbGVjdENvbnRyb2xQcm9wc1sgJ3NpemUnIF07XG59XG5cbmNvbnN0IGRpc2FibGVkU3R5bGVzID0gKCB7IGRpc2FibGVkIH06IFNlbGVjdFByb3BzICkgPT4ge1xuXHRpZiAoICEgZGlzYWJsZWQgKSByZXR1cm4gJyc7XG5cblx0cmV0dXJuIGNzcygge1xuXHRcdGNvbG9yOiBDT0xPUlMudWkudGV4dERpc2FibGVkLFxuXHR9ICk7XG59O1xuXG5jb25zdCBzaXplU3R5bGVzID0gKCB7XG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCBtdWx0aXBsZSApIHtcblx0XHQvLyBXaGVuIGBtdWx0aXBsZWAsIGp1c3QgdXNlIHRoZSBuYXRpdmUgYnJvd3NlciBzdHlsZXNcblx0XHQvLyB3aXRob3V0IHNldHRpbmcgZXhwbGljaXQgaGVpZ2h0LlxuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IHNpemVzID0ge1xuXHRcdGRlZmF1bHQ6IHtcblx0XHRcdGhlaWdodDogNDAsXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHRzbWFsbDoge1xuXHRcdFx0aGVpZ2h0OiAyNCxcblx0XHRcdG1pbkhlaWdodDogMjQsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHRcdGNvbXBhY3Q6IHtcblx0XHRcdGhlaWdodDogMzIsXG5cdFx0XHRtaW5IZWlnaHQ6IDMyLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IHtcblx0XHRcdGhlaWdodDogNDAsXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0fTtcblxuXHRpZiAoICEgX19uZXh0NDBweERlZmF1bHRTaXplICkge1xuXHRcdHNpemVzLmRlZmF1bHQgPSBzaXplcy5jb21wYWN0O1xuXHR9XG5cblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XG5cblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcblxuY29uc3Qgc2l6ZVBhZGRpbmdzID0gKCB7XG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3QgcGFkZGluZyA9IHtcblx0XHRkZWZhdWx0OiAxNixcblx0XHRzbWFsbDogOCxcblx0XHRjb21wYWN0OiA4LFxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzogMTYsXG5cdH07XG5cblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcblx0XHRwYWRkaW5nLmRlZmF1bHQgPSBwYWRkaW5nLmNvbXBhY3Q7XG5cdH1cblxuXHRjb25zdCBzZWxlY3RlZFBhZGRpbmcgPSBwYWRkaW5nWyBzZWxlY3RTaXplIF0gfHwgcGFkZGluZy5kZWZhdWx0O1xuXG5cdHJldHVybiBydGwoIHtcblx0XHRwYWRkaW5nTGVmdDogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdHBhZGRpbmdSaWdodDogc2VsZWN0ZWRQYWRkaW5nICsgY2hldnJvbkljb25TaXplLFxuXHRcdC4uLiggbXVsdGlwbGVcblx0XHRcdD8ge1xuXHRcdFx0XHRcdHBhZGRpbmdUb3A6IHNlbGVjdGVkUGFkZGluZyxcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0XHQgIH1cblx0XHRcdDoge30gKSxcblx0fSApO1xufTtcblxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdHJldHVybiB7XG5cdFx0b3ZlcmZsb3c6IG11bHRpcGxlID8gJ2F1dG8nIDogJ2hpZGRlbicsXG5cdH07XG59O1xuXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXG5cbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxuXHQmJiYge1xuXHRcdGFwcGVhcmFuY2U6IG5vbmU7XG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0XHRib3JkZXI6IG5vbmU7XG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuXHRcdGNvbG9yOiAkeyBDT0xPUlMuZ3JheVsgOTAwIF0gfTtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRmb250LWZhbWlseTogaW5oZXJpdDtcblx0XHRtYXJnaW46IDA7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0bWF4LXdpZHRoOiBub25lO1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXHRcdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXG5cdFx0JHsgZGlzYWJsZWRTdHlsZXMgfTtcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xuXHRcdCR7IHNpemVTdHlsZXMgfTtcblx0XHQkeyBzaXplUGFkZGluZ3MgfTtcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBEb3duQXJyb3dXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cblx0bGluZS1oZWlnaHQ6IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlcldpdGhDbGlja1Rocm91Z2ggPSBzdHlsZWQoXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcbilgXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cblx0JHsgcnRsKCB7IHJpZ2h0OiAwIH0gKSB9XG5gO1xuIl19 */");
};
const sizeStyles = ({
  __next40pxDefaultSize,
  multiple,
  selectSize = 'default'
}) => {
  if (multiple) {
    // When `multiple`, just use the native browser styles
    // without setting explicit height.
    return;
  }
  const sizes = {
    default: {
      height: 40,
      minHeight: 40,
      paddingTop: 0,
      paddingBottom: 0
    },
    small: {
      height: 24,
      minHeight: 24,
      paddingTop: 0,
      paddingBottom: 0
    },
    compact: {
      height: 32,
      minHeight: 32,
      paddingTop: 0,
      paddingBottom: 0
    },
    '__unstable-large': {
      height: 40,
      minHeight: 40,
      paddingTop: 0,
      paddingBottom: 0
    }
  };
  if (!__next40pxDefaultSize) {
    sizes.default = sizes.compact;
  }
  const style = sizes[selectSize] || sizes.default;
  return /*#__PURE__*/(0, _react.css)(style, process.env.NODE_ENV === "production" ? "" : ";label:sizeStyles;", process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUE2RVEiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcbmltcG9ydCB7IGZvbnRTaXplU3R5bGVzIH0gZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9zdHlsZXMvaW5wdXQtY29udHJvbC1zdHlsZXMnO1xuXG5pbnRlcmZhY2UgU2VsZWN0UHJvcHNcblx0ZXh0ZW5kcyBQaWNrPFxuXHRcdFNlbGVjdENvbnRyb2xQcm9wcyxcblx0XHQnX19uZXh0NDBweERlZmF1bHRTaXplJyB8ICdkaXNhYmxlZCcgfCAnbXVsdGlwbGUnXG5cdD4ge1xuXHQvLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXG5cdC8vIGBzaXplYCBIVE1MIGF0dHJpYnV0ZSBvZiB0aGUgYHNlbGVjdGAgZWxlbWVudC5cblx0c2VsZWN0U2l6ZT86IFNlbGVjdENvbnRyb2xQcm9wc1sgJ3NpemUnIF07XG59XG5cbmNvbnN0IGRpc2FibGVkU3R5bGVzID0gKCB7IGRpc2FibGVkIH06IFNlbGVjdFByb3BzICkgPT4ge1xuXHRpZiAoICEgZGlzYWJsZWQgKSByZXR1cm4gJyc7XG5cblx0cmV0dXJuIGNzcygge1xuXHRcdGNvbG9yOiBDT0xPUlMudWkudGV4dERpc2FibGVkLFxuXHR9ICk7XG59O1xuXG5jb25zdCBzaXplU3R5bGVzID0gKCB7XG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCBtdWx0aXBsZSApIHtcblx0XHQvLyBXaGVuIGBtdWx0aXBsZWAsIGp1c3QgdXNlIHRoZSBuYXRpdmUgYnJvd3NlciBzdHlsZXNcblx0XHQvLyB3aXRob3V0IHNldHRpbmcgZXhwbGljaXQgaGVpZ2h0LlxuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IHNpemVzID0ge1xuXHRcdGRlZmF1bHQ6IHtcblx0XHRcdGhlaWdodDogNDAsXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHRzbWFsbDoge1xuXHRcdFx0aGVpZ2h0OiAyNCxcblx0XHRcdG1pbkhlaWdodDogMjQsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHRcdGNvbXBhY3Q6IHtcblx0XHRcdGhlaWdodDogMzIsXG5cdFx0XHRtaW5IZWlnaHQ6IDMyLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IHtcblx0XHRcdGhlaWdodDogNDAsXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0fTtcblxuXHRpZiAoICEgX19uZXh0NDBweERlZmF1bHRTaXplICkge1xuXHRcdHNpemVzLmRlZmF1bHQgPSBzaXplcy5jb21wYWN0O1xuXHR9XG5cblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XG5cblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcblxuY29uc3Qgc2l6ZVBhZGRpbmdzID0gKCB7XG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3QgcGFkZGluZyA9IHtcblx0XHRkZWZhdWx0OiAxNixcblx0XHRzbWFsbDogOCxcblx0XHRjb21wYWN0OiA4LFxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzogMTYsXG5cdH07XG5cblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcblx0XHRwYWRkaW5nLmRlZmF1bHQgPSBwYWRkaW5nLmNvbXBhY3Q7XG5cdH1cblxuXHRjb25zdCBzZWxlY3RlZFBhZGRpbmcgPSBwYWRkaW5nWyBzZWxlY3RTaXplIF0gfHwgcGFkZGluZy5kZWZhdWx0O1xuXG5cdHJldHVybiBydGwoIHtcblx0XHRwYWRkaW5nTGVmdDogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdHBhZGRpbmdSaWdodDogc2VsZWN0ZWRQYWRkaW5nICsgY2hldnJvbkljb25TaXplLFxuXHRcdC4uLiggbXVsdGlwbGVcblx0XHRcdD8ge1xuXHRcdFx0XHRcdHBhZGRpbmdUb3A6IHNlbGVjdGVkUGFkZGluZyxcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0XHQgIH1cblx0XHRcdDoge30gKSxcblx0fSApO1xufTtcblxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdHJldHVybiB7XG5cdFx0b3ZlcmZsb3c6IG11bHRpcGxlID8gJ2F1dG8nIDogJ2hpZGRlbicsXG5cdH07XG59O1xuXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXG5cbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxuXHQmJiYge1xuXHRcdGFwcGVhcmFuY2U6IG5vbmU7XG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0XHRib3JkZXI6IG5vbmU7XG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuXHRcdGNvbG9yOiAkeyBDT0xPUlMuZ3JheVsgOTAwIF0gfTtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRmb250LWZhbWlseTogaW5oZXJpdDtcblx0XHRtYXJnaW46IDA7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0bWF4LXdpZHRoOiBub25lO1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXHRcdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXG5cdFx0JHsgZGlzYWJsZWRTdHlsZXMgfTtcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xuXHRcdCR7IHNpemVTdHlsZXMgfTtcblx0XHQkeyBzaXplUGFkZGluZ3MgfTtcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBEb3duQXJyb3dXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cblx0bGluZS1oZWlnaHQ6IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlcldpdGhDbGlja1Rocm91Z2ggPSBzdHlsZWQoXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcbilgXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cblx0JHsgcnRsKCB7IHJpZ2h0OiAwIH0gKSB9XG5gO1xuIl19 */");
};
const chevronIconSize = exports.chevronIconSize = 18;
const sizePaddings = ({
  __next40pxDefaultSize,
  multiple,
  selectSize = 'default'
}) => {
  const padding = {
    default: 16,
    small: 8,
    compact: 8,
    '__unstable-large': 16
  };
  if (!__next40pxDefaultSize) {
    padding.default = padding.compact;
  }
  const selectedPadding = padding[selectSize] || padding.default;
  return (0, _utils.rtl)({
    paddingLeft: selectedPadding,
    paddingRight: selectedPadding + chevronIconSize,
    ...(multiple ? {
      paddingTop: selectedPadding,
      paddingBottom: selectedPadding
    } : {})
  });
};
const overflowStyles = ({
  multiple
}) => {
  return {
    overflow: multiple ? 'auto' : 'hidden'
  };
};

// TODO: Resolve need to use &&& to increase specificity
// https://github.com/WordPress/gutenberg/issues/18483

const Select = exports.Select = (0, _base.default)("select", process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx2"
} : {
  target: "e1mv6sxx2",
  label: "Select"
})("&&&{appearance:none;background:transparent;box-sizing:border-box;border:none;box-shadow:none!important;color:", _utils.COLORS.gray[900], ";display:block;font-family:inherit;margin:0;width:100%;max-width:none;cursor:pointer;white-space:nowrap;text-overflow:ellipsis;", disabledStyles, ";", _inputControlStyles.fontSizeStyles, ";", sizeStyles, ";", sizePaddings, ";", overflowStyles, ";}" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5SGtEIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBydGwgfSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB0eXBlIHsgU2VsZWN0Q29udHJvbFByb3BzIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXIgZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9pbnB1dC1zdWZmaXgtd3JhcHBlcic7XG5pbXBvcnQgeyBmb250U2l6ZVN0eWxlcyB9IGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcblxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXG5cdGV4dGVuZHMgUGljazxcblx0XHRTZWxlY3RDb250cm9sUHJvcHMsXG5cdFx0J19fbmV4dDQwcHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJ1xuXHQ+IHtcblx0Ly8gVXNpbmcgYHNlbGVjdFNpemVgIGluc3RlYWQgb2YgYHNpemVgIHRvIGF2b2lkIGEgdHlwZSBjb25mbGljdCB3aXRoIHRoZVxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXG5cdHNlbGVjdFNpemU/OiBTZWxlY3RDb250cm9sUHJvcHNbICdzaXplJyBdO1xufVxuXG5jb25zdCBkaXNhYmxlZFN0eWxlcyA9ICggeyBkaXNhYmxlZCB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCAhIGRpc2FibGVkICkgcmV0dXJuICcnO1xuXG5cdHJldHVybiBjc3MoIHtcblx0XHRjb2xvcjogQ09MT1JTLnVpLnRleHREaXNhYmxlZCxcblx0fSApO1xufTtcblxuY29uc3Qgc2l6ZVN0eWxlcyA9ICgge1xuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXG5cdG11bHRpcGxlLFxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxufTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGlmICggbXVsdGlwbGUgKSB7XG5cdFx0Ly8gV2hlbiBgbXVsdGlwbGVgLCBqdXN0IHVzZSB0aGUgbmF0aXZlIGJyb3dzZXIgc3R5bGVzXG5cdFx0Ly8gd2l0aG91dCBzZXR0aW5nIGV4cGxpY2l0IGhlaWdodC5cblx0XHRyZXR1cm47XG5cdH1cblxuXHRjb25zdCBzaXplcyA9IHtcblx0XHRkZWZhdWx0OiB7XG5cdFx0XHRoZWlnaHQ6IDQwLFxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdFx0c21hbGw6IHtcblx0XHRcdGhlaWdodDogMjQsXG5cdFx0XHRtaW5IZWlnaHQ6IDI0LFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHRjb21wYWN0OiB7XG5cdFx0XHRoZWlnaHQ6IDMyLFxuXHRcdFx0bWluSGVpZ2h0OiAzMixcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiB7XG5cdFx0XHRoZWlnaHQ6IDQwLFxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdH07XG5cblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcblx0XHRzaXplcy5kZWZhdWx0ID0gc2l6ZXMuY29tcGFjdDtcblx0fVxuXG5cdGNvbnN0IHN0eWxlID0gc2l6ZXNbIHNlbGVjdFNpemUgXSB8fCBzaXplcy5kZWZhdWx0O1xuXG5cdHJldHVybiBjc3MoIHN0eWxlICk7XG59O1xuXG5leHBvcnQgY29uc3QgY2hldnJvbkljb25TaXplID0gMTg7XG5cbmNvbnN0IHNpemVQYWRkaW5ncyA9ICgge1xuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXG5cdG11bHRpcGxlLFxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxufTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGNvbnN0IHBhZGRpbmcgPSB7XG5cdFx0ZGVmYXVsdDogMTYsXG5cdFx0c21hbGw6IDgsXG5cdFx0Y29tcGFjdDogOCxcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IDE2LFxuXHR9O1xuXG5cdGlmICggISBfX25leHQ0MHB4RGVmYXVsdFNpemUgKSB7XG5cdFx0cGFkZGluZy5kZWZhdWx0ID0gcGFkZGluZy5jb21wYWN0O1xuXHR9XG5cblx0Y29uc3Qgc2VsZWN0ZWRQYWRkaW5nID0gcGFkZGluZ1sgc2VsZWN0U2l6ZSBdIHx8IHBhZGRpbmcuZGVmYXVsdDtcblxuXHRyZXR1cm4gcnRsKCB7XG5cdFx0cGFkZGluZ0xlZnQ6IHNlbGVjdGVkUGFkZGluZyxcblx0XHRwYWRkaW5nUmlnaHQ6IHNlbGVjdGVkUGFkZGluZyArIGNoZXZyb25JY29uU2l6ZSxcblx0XHQuLi4oIG11bHRpcGxlXG5cdFx0XHQ/IHtcblx0XHRcdFx0XHRwYWRkaW5nVG9wOiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0XHRcdFx0cGFkZGluZ0JvdHRvbTogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdFx0ICB9XG5cdFx0XHQ6IHt9ICksXG5cdH0gKTtcbn07XG5cbmNvbnN0IG92ZXJmbG93U3R5bGVzID0gKCB7IG11bHRpcGxlIH06IFNlbGVjdFByb3BzICkgPT4ge1xuXHRyZXR1cm4ge1xuXHRcdG92ZXJmbG93OiBtdWx0aXBsZSA/ICdhdXRvJyA6ICdoaWRkZW4nLFxuXHR9O1xufTtcblxuLy8gVE9ETzogUmVzb2x2ZSBuZWVkIHRvIHVzZSAmJiYgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHlcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Xb3JkUHJlc3MvZ3V0ZW5iZXJnL2lzc3Vlcy8xODQ4M1xuXG5leHBvcnQgY29uc3QgU2VsZWN0ID0gc3R5bGVkLnNlbGVjdDwgU2VsZWN0UHJvcHMgPmBcblx0JiYmIHtcblx0XHRhcHBlYXJhbmNlOiBub25lO1xuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuXHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcblx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDkwMCBdIH07XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cdFx0bWFyZ2luOiAwO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdG1heC13aWR0aDogbm9uZTtcblx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcblx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcblxuXHRcdCR7IGRpc2FibGVkU3R5bGVzIH07XG5cdFx0JHsgZm9udFNpemVTdHlsZXMgfTtcblx0XHQkeyBzaXplU3R5bGVzIH07XG5cdFx0JHsgc2l6ZVBhZGRpbmdzIH07XG5cdFx0JHsgb3ZlcmZsb3dTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgRG93bkFycm93V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdG1hcmdpbi1pbmxpbmUtZW5kOiAkeyBzcGFjZSggLTEgKSB9OyAvLyBvcHRpY2FsbHkgYWRqdXN0IHRoZSBpY29uXG5cdGxpbmUtaGVpZ2h0OiAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJXaXRoQ2xpY2tUaHJvdWdoID0gc3R5bGVkKFxuXHRJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyXG4pYFxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXG5cdCR7IHJ0bCggeyByaWdodDogMCB9ICkgfVxuYDtcbiJdfQ== */"));
const DownArrowWrapper = exports.DownArrowWrapper = (0, _base.default)("div", process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx1"
} : {
  target: "e1mv6sxx1",
  label: "DownArrowWrapper"
})("margin-inline-end:", (0, _space.space)(-1), ";line-height:0;" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFrSjBDIiwiZmlsZSI6IkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyIsInNvdXJjZXNDb250ZW50IjpbIi8qKlxuICogRXh0ZXJuYWwgZGVwZW5kZW5jaWVzXG4gKi9cbmltcG9ydCB7IGNzcyB9IGZyb20gJ0BlbW90aW9uL3JlYWN0JztcbmltcG9ydCBzdHlsZWQgZnJvbSAnQGVtb3Rpb24vc3R5bGVkJztcblxuLyoqXG4gKiBJbnRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgQ09MT1JTLCBydGwgfSBmcm9tICcuLi8uLi91dGlscyc7XG5pbXBvcnQgeyBzcGFjZSB9IGZyb20gJy4uLy4uL3V0aWxzL3NwYWNlJztcbmltcG9ydCB0eXBlIHsgU2VsZWN0Q29udHJvbFByb3BzIH0gZnJvbSAnLi4vdHlwZXMnO1xuaW1wb3J0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXIgZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9pbnB1dC1zdWZmaXgtd3JhcHBlcic7XG5pbXBvcnQgeyBmb250U2l6ZVN0eWxlcyB9IGZyb20gJy4uLy4uL2lucHV0LWNvbnRyb2wvc3R5bGVzL2lucHV0LWNvbnRyb2wtc3R5bGVzJztcblxuaW50ZXJmYWNlIFNlbGVjdFByb3BzXG5cdGV4dGVuZHMgUGljazxcblx0XHRTZWxlY3RDb250cm9sUHJvcHMsXG5cdFx0J19fbmV4dDQwcHhEZWZhdWx0U2l6ZScgfCAnZGlzYWJsZWQnIHwgJ211bHRpcGxlJ1xuXHQ+IHtcblx0Ly8gVXNpbmcgYHNlbGVjdFNpemVgIGluc3RlYWQgb2YgYHNpemVgIHRvIGF2b2lkIGEgdHlwZSBjb25mbGljdCB3aXRoIHRoZVxuXHQvLyBgc2l6ZWAgSFRNTCBhdHRyaWJ1dGUgb2YgdGhlIGBzZWxlY3RgIGVsZW1lbnQuXG5cdHNlbGVjdFNpemU/OiBTZWxlY3RDb250cm9sUHJvcHNbICdzaXplJyBdO1xufVxuXG5jb25zdCBkaXNhYmxlZFN0eWxlcyA9ICggeyBkaXNhYmxlZCB9OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCAhIGRpc2FibGVkICkgcmV0dXJuICcnO1xuXG5cdHJldHVybiBjc3MoIHtcblx0XHRjb2xvcjogQ09MT1JTLnVpLnRleHREaXNhYmxlZCxcblx0fSApO1xufTtcblxuY29uc3Qgc2l6ZVN0eWxlcyA9ICgge1xuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXG5cdG11bHRpcGxlLFxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxufTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGlmICggbXVsdGlwbGUgKSB7XG5cdFx0Ly8gV2hlbiBgbXVsdGlwbGVgLCBqdXN0IHVzZSB0aGUgbmF0aXZlIGJyb3dzZXIgc3R5bGVzXG5cdFx0Ly8gd2l0aG91dCBzZXR0aW5nIGV4cGxpY2l0IGhlaWdodC5cblx0XHRyZXR1cm47XG5cdH1cblxuXHRjb25zdCBzaXplcyA9IHtcblx0XHRkZWZhdWx0OiB7XG5cdFx0XHRoZWlnaHQ6IDQwLFxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdFx0c21hbGw6IHtcblx0XHRcdGhlaWdodDogMjQsXG5cdFx0XHRtaW5IZWlnaHQ6IDI0LFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHRjb21wYWN0OiB7XG5cdFx0XHRoZWlnaHQ6IDMyLFxuXHRcdFx0bWluSGVpZ2h0OiAzMixcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdFx0J19fdW5zdGFibGUtbGFyZ2UnOiB7XG5cdFx0XHRoZWlnaHQ6IDQwLFxuXHRcdFx0bWluSGVpZ2h0OiA0MCxcblx0XHRcdHBhZGRpbmdUb3A6IDAsXG5cdFx0XHRwYWRkaW5nQm90dG9tOiAwLFxuXHRcdH0sXG5cdH07XG5cblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcblx0XHRzaXplcy5kZWZhdWx0ID0gc2l6ZXMuY29tcGFjdDtcblx0fVxuXG5cdGNvbnN0IHN0eWxlID0gc2l6ZXNbIHNlbGVjdFNpemUgXSB8fCBzaXplcy5kZWZhdWx0O1xuXG5cdHJldHVybiBjc3MoIHN0eWxlICk7XG59O1xuXG5leHBvcnQgY29uc3QgY2hldnJvbkljb25TaXplID0gMTg7XG5cbmNvbnN0IHNpemVQYWRkaW5ncyA9ICgge1xuXHRfX25leHQ0MHB4RGVmYXVsdFNpemUsXG5cdG11bHRpcGxlLFxuXHRzZWxlY3RTaXplID0gJ2RlZmF1bHQnLFxufTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdGNvbnN0IHBhZGRpbmcgPSB7XG5cdFx0ZGVmYXVsdDogMTYsXG5cdFx0c21hbGw6IDgsXG5cdFx0Y29tcGFjdDogOCxcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IDE2LFxuXHR9O1xuXG5cdGlmICggISBfX25leHQ0MHB4RGVmYXVsdFNpemUgKSB7XG5cdFx0cGFkZGluZy5kZWZhdWx0ID0gcGFkZGluZy5jb21wYWN0O1xuXHR9XG5cblx0Y29uc3Qgc2VsZWN0ZWRQYWRkaW5nID0gcGFkZGluZ1sgc2VsZWN0U2l6ZSBdIHx8IHBhZGRpbmcuZGVmYXVsdDtcblxuXHRyZXR1cm4gcnRsKCB7XG5cdFx0cGFkZGluZ0xlZnQ6IHNlbGVjdGVkUGFkZGluZyxcblx0XHRwYWRkaW5nUmlnaHQ6IHNlbGVjdGVkUGFkZGluZyArIGNoZXZyb25JY29uU2l6ZSxcblx0XHQuLi4oIG11bHRpcGxlXG5cdFx0XHQ/IHtcblx0XHRcdFx0XHRwYWRkaW5nVG9wOiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0XHRcdFx0cGFkZGluZ0JvdHRvbTogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdFx0ICB9XG5cdFx0XHQ6IHt9ICksXG5cdH0gKTtcbn07XG5cbmNvbnN0IG92ZXJmbG93U3R5bGVzID0gKCB7IG11bHRpcGxlIH06IFNlbGVjdFByb3BzICkgPT4ge1xuXHRyZXR1cm4ge1xuXHRcdG92ZXJmbG93OiBtdWx0aXBsZSA/ICdhdXRvJyA6ICdoaWRkZW4nLFxuXHR9O1xufTtcblxuLy8gVE9ETzogUmVzb2x2ZSBuZWVkIHRvIHVzZSAmJiYgdG8gaW5jcmVhc2Ugc3BlY2lmaWNpdHlcbi8vIGh0dHBzOi8vZ2l0aHViLmNvbS9Xb3JkUHJlc3MvZ3V0ZW5iZXJnL2lzc3Vlcy8xODQ4M1xuXG5leHBvcnQgY29uc3QgU2VsZWN0ID0gc3R5bGVkLnNlbGVjdDwgU2VsZWN0UHJvcHMgPmBcblx0JiYmIHtcblx0XHRhcHBlYXJhbmNlOiBub25lO1xuXHRcdGJhY2tncm91bmQ6IHRyYW5zcGFyZW50O1xuXHRcdGJveC1zaXppbmc6IGJvcmRlci1ib3g7XG5cdFx0Ym9yZGVyOiBub25lO1xuXHRcdGJveC1zaGFkb3c6IG5vbmUgIWltcG9ydGFudDtcblx0XHRjb2xvcjogJHsgQ09MT1JTLmdyYXlbIDkwMCBdIH07XG5cdFx0ZGlzcGxheTogYmxvY2s7XG5cdFx0Zm9udC1mYW1pbHk6IGluaGVyaXQ7XG5cdFx0bWFyZ2luOiAwO1xuXHRcdHdpZHRoOiAxMDAlO1xuXHRcdG1heC13aWR0aDogbm9uZTtcblx0XHRjdXJzb3I6IHBvaW50ZXI7XG5cdFx0d2hpdGUtc3BhY2U6IG5vd3JhcDtcblx0XHR0ZXh0LW92ZXJmbG93OiBlbGxpcHNpcztcblxuXHRcdCR7IGRpc2FibGVkU3R5bGVzIH07XG5cdFx0JHsgZm9udFNpemVTdHlsZXMgfTtcblx0XHQkeyBzaXplU3R5bGVzIH07XG5cdFx0JHsgc2l6ZVBhZGRpbmdzIH07XG5cdFx0JHsgb3ZlcmZsb3dTdHlsZXMgfVxuXHR9XG5gO1xuXG5leHBvcnQgY29uc3QgRG93bkFycm93V3JhcHBlciA9IHN0eWxlZC5kaXZgXG5cdG1hcmdpbi1pbmxpbmUtZW5kOiAkeyBzcGFjZSggLTEgKSB9OyAvLyBvcHRpY2FsbHkgYWRqdXN0IHRoZSBpY29uXG5cdGxpbmUtaGVpZ2h0OiAwO1xuYDtcblxuZXhwb3J0IGNvbnN0IElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJXaXRoQ2xpY2tUaHJvdWdoID0gc3R5bGVkKFxuXHRJbnB1dENvbnRyb2xTdWZmaXhXcmFwcGVyXG4pYFxuXHRwb3NpdGlvbjogYWJzb2x1dGU7XG5cdHBvaW50ZXItZXZlbnRzOiBub25lO1xuXG5cdCR7IHJ0bCggeyByaWdodDogMCB9ICkgfVxuYDtcbiJdfQ== */"));
const InputControlSuffixWrapperWithClickThrough = exports.InputControlSuffixWrapperWithClickThrough = ( /*#__PURE__*/0, _base.default)(_inputSuffixWrapper.default, process.env.NODE_ENV === "production" ? {
  target: "e1mv6sxx0"
} : {
  target: "e1mv6sxx0",
  label: "InputControlSuffixWrapperWithClickThrough"
})("position:absolute;pointer-events:none;", (0, _utils.rtl)({
  right: 0
}), ";" + (process.env.NODE_ENV === "production" ? "" : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIkB3b3JkcHJlc3MvY29tcG9uZW50cy9zcmMvc2VsZWN0LWNvbnRyb2wvc3R5bGVzL3NlbGVjdC1jb250cm9sLXN0eWxlcy50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUF5SkMiLCJmaWxlIjoiQHdvcmRwcmVzcy9jb21wb25lbnRzL3NyYy9zZWxlY3QtY29udHJvbC9zdHlsZXMvc2VsZWN0LWNvbnRyb2wtc3R5bGVzLnRzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBFeHRlcm5hbCBkZXBlbmRlbmNpZXNcbiAqL1xuaW1wb3J0IHsgY3NzIH0gZnJvbSAnQGVtb3Rpb24vcmVhY3QnO1xuaW1wb3J0IHN0eWxlZCBmcm9tICdAZW1vdGlvbi9zdHlsZWQnO1xuXG4vKipcbiAqIEludGVybmFsIGRlcGVuZGVuY2llc1xuICovXG5pbXBvcnQgeyBDT0xPUlMsIHJ0bCB9IGZyb20gJy4uLy4uL3V0aWxzJztcbmltcG9ydCB7IHNwYWNlIH0gZnJvbSAnLi4vLi4vdXRpbHMvc3BhY2UnO1xuaW1wb3J0IHR5cGUgeyBTZWxlY3RDb250cm9sUHJvcHMgfSBmcm9tICcuLi90eXBlcyc7XG5pbXBvcnQgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlciBmcm9tICcuLi8uLi9pbnB1dC1jb250cm9sL2lucHV0LXN1ZmZpeC13cmFwcGVyJztcbmltcG9ydCB7IGZvbnRTaXplU3R5bGVzIH0gZnJvbSAnLi4vLi4vaW5wdXQtY29udHJvbC9zdHlsZXMvaW5wdXQtY29udHJvbC1zdHlsZXMnO1xuXG5pbnRlcmZhY2UgU2VsZWN0UHJvcHNcblx0ZXh0ZW5kcyBQaWNrPFxuXHRcdFNlbGVjdENvbnRyb2xQcm9wcyxcblx0XHQnX19uZXh0NDBweERlZmF1bHRTaXplJyB8ICdkaXNhYmxlZCcgfCAnbXVsdGlwbGUnXG5cdD4ge1xuXHQvLyBVc2luZyBgc2VsZWN0U2l6ZWAgaW5zdGVhZCBvZiBgc2l6ZWAgdG8gYXZvaWQgYSB0eXBlIGNvbmZsaWN0IHdpdGggdGhlXG5cdC8vIGBzaXplYCBIVE1MIGF0dHJpYnV0ZSBvZiB0aGUgYHNlbGVjdGAgZWxlbWVudC5cblx0c2VsZWN0U2l6ZT86IFNlbGVjdENvbnRyb2xQcm9wc1sgJ3NpemUnIF07XG59XG5cbmNvbnN0IGRpc2FibGVkU3R5bGVzID0gKCB7IGRpc2FibGVkIH06IFNlbGVjdFByb3BzICkgPT4ge1xuXHRpZiAoICEgZGlzYWJsZWQgKSByZXR1cm4gJyc7XG5cblx0cmV0dXJuIGNzcygge1xuXHRcdGNvbG9yOiBDT0xPUlMudWkudGV4dERpc2FibGVkLFxuXHR9ICk7XG59O1xuXG5jb25zdCBzaXplU3R5bGVzID0gKCB7XG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0aWYgKCBtdWx0aXBsZSApIHtcblx0XHQvLyBXaGVuIGBtdWx0aXBsZWAsIGp1c3QgdXNlIHRoZSBuYXRpdmUgYnJvd3NlciBzdHlsZXNcblx0XHQvLyB3aXRob3V0IHNldHRpbmcgZXhwbGljaXQgaGVpZ2h0LlxuXHRcdHJldHVybjtcblx0fVxuXG5cdGNvbnN0IHNpemVzID0ge1xuXHRcdGRlZmF1bHQ6IHtcblx0XHRcdGhlaWdodDogNDAsXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHRzbWFsbDoge1xuXHRcdFx0aGVpZ2h0OiAyNCxcblx0XHRcdG1pbkhlaWdodDogMjQsXG5cdFx0XHRwYWRkaW5nVG9wOiAwLFxuXHRcdFx0cGFkZGluZ0JvdHRvbTogMCxcblx0XHR9LFxuXHRcdGNvbXBhY3Q6IHtcblx0XHRcdGhlaWdodDogMzIsXG5cdFx0XHRtaW5IZWlnaHQ6IDMyLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0XHQnX191bnN0YWJsZS1sYXJnZSc6IHtcblx0XHRcdGhlaWdodDogNDAsXG5cdFx0XHRtaW5IZWlnaHQ6IDQwLFxuXHRcdFx0cGFkZGluZ1RvcDogMCxcblx0XHRcdHBhZGRpbmdCb3R0b206IDAsXG5cdFx0fSxcblx0fTtcblxuXHRpZiAoICEgX19uZXh0NDBweERlZmF1bHRTaXplICkge1xuXHRcdHNpemVzLmRlZmF1bHQgPSBzaXplcy5jb21wYWN0O1xuXHR9XG5cblx0Y29uc3Qgc3R5bGUgPSBzaXplc1sgc2VsZWN0U2l6ZSBdIHx8IHNpemVzLmRlZmF1bHQ7XG5cblx0cmV0dXJuIGNzcyggc3R5bGUgKTtcbn07XG5cbmV4cG9ydCBjb25zdCBjaGV2cm9uSWNvblNpemUgPSAxODtcblxuY29uc3Qgc2l6ZVBhZGRpbmdzID0gKCB7XG5cdF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSxcblx0bXVsdGlwbGUsXG5cdHNlbGVjdFNpemUgPSAnZGVmYXVsdCcsXG59OiBTZWxlY3RQcm9wcyApID0+IHtcblx0Y29uc3QgcGFkZGluZyA9IHtcblx0XHRkZWZhdWx0OiAxNixcblx0XHRzbWFsbDogOCxcblx0XHRjb21wYWN0OiA4LFxuXHRcdCdfX3Vuc3RhYmxlLWxhcmdlJzogMTYsXG5cdH07XG5cblx0aWYgKCAhIF9fbmV4dDQwcHhEZWZhdWx0U2l6ZSApIHtcblx0XHRwYWRkaW5nLmRlZmF1bHQgPSBwYWRkaW5nLmNvbXBhY3Q7XG5cdH1cblxuXHRjb25zdCBzZWxlY3RlZFBhZGRpbmcgPSBwYWRkaW5nWyBzZWxlY3RTaXplIF0gfHwgcGFkZGluZy5kZWZhdWx0O1xuXG5cdHJldHVybiBydGwoIHtcblx0XHRwYWRkaW5nTGVmdDogc2VsZWN0ZWRQYWRkaW5nLFxuXHRcdHBhZGRpbmdSaWdodDogc2VsZWN0ZWRQYWRkaW5nICsgY2hldnJvbkljb25TaXplLFxuXHRcdC4uLiggbXVsdGlwbGVcblx0XHRcdD8ge1xuXHRcdFx0XHRcdHBhZGRpbmdUb3A6IHNlbGVjdGVkUGFkZGluZyxcblx0XHRcdFx0XHRwYWRkaW5nQm90dG9tOiBzZWxlY3RlZFBhZGRpbmcsXG5cdFx0XHQgIH1cblx0XHRcdDoge30gKSxcblx0fSApO1xufTtcblxuY29uc3Qgb3ZlcmZsb3dTdHlsZXMgPSAoIHsgbXVsdGlwbGUgfTogU2VsZWN0UHJvcHMgKSA9PiB7XG5cdHJldHVybiB7XG5cdFx0b3ZlcmZsb3c6IG11bHRpcGxlID8gJ2F1dG8nIDogJ2hpZGRlbicsXG5cdH07XG59O1xuXG4vLyBUT0RPOiBSZXNvbHZlIG5lZWQgdG8gdXNlICYmJiB0byBpbmNyZWFzZSBzcGVjaWZpY2l0eVxuLy8gaHR0cHM6Ly9naXRodWIuY29tL1dvcmRQcmVzcy9ndXRlbmJlcmcvaXNzdWVzLzE4NDgzXG5cbmV4cG9ydCBjb25zdCBTZWxlY3QgPSBzdHlsZWQuc2VsZWN0PCBTZWxlY3RQcm9wcyA+YFxuXHQmJiYge1xuXHRcdGFwcGVhcmFuY2U6IG5vbmU7XG5cdFx0YmFja2dyb3VuZDogdHJhbnNwYXJlbnQ7XG5cdFx0Ym94LXNpemluZzogYm9yZGVyLWJveDtcblx0XHRib3JkZXI6IG5vbmU7XG5cdFx0Ym94LXNoYWRvdzogbm9uZSAhaW1wb3J0YW50O1xuXHRcdGNvbG9yOiAkeyBDT0xPUlMuZ3JheVsgOTAwIF0gfTtcblx0XHRkaXNwbGF5OiBibG9jaztcblx0XHRmb250LWZhbWlseTogaW5oZXJpdDtcblx0XHRtYXJnaW46IDA7XG5cdFx0d2lkdGg6IDEwMCU7XG5cdFx0bWF4LXdpZHRoOiBub25lO1xuXHRcdGN1cnNvcjogcG9pbnRlcjtcblx0XHR3aGl0ZS1zcGFjZTogbm93cmFwO1xuXHRcdHRleHQtb3ZlcmZsb3c6IGVsbGlwc2lzO1xuXG5cdFx0JHsgZGlzYWJsZWRTdHlsZXMgfTtcblx0XHQkeyBmb250U2l6ZVN0eWxlcyB9O1xuXHRcdCR7IHNpemVTdHlsZXMgfTtcblx0XHQkeyBzaXplUGFkZGluZ3MgfTtcblx0XHQkeyBvdmVyZmxvd1N0eWxlcyB9XG5cdH1cbmA7XG5cbmV4cG9ydCBjb25zdCBEb3duQXJyb3dXcmFwcGVyID0gc3R5bGVkLmRpdmBcblx0bWFyZ2luLWlubGluZS1lbmQ6ICR7IHNwYWNlKCAtMSApIH07IC8vIG9wdGljYWxseSBhZGp1c3QgdGhlIGljb25cblx0bGluZS1oZWlnaHQ6IDA7XG5gO1xuXG5leHBvcnQgY29uc3QgSW5wdXRDb250cm9sU3VmZml4V3JhcHBlcldpdGhDbGlja1Rocm91Z2ggPSBzdHlsZWQoXG5cdElucHV0Q29udHJvbFN1ZmZpeFdyYXBwZXJcbilgXG5cdHBvc2l0aW9uOiBhYnNvbHV0ZTtcblx0cG9pbnRlci1ldmVudHM6IG5vbmU7XG5cblx0JHsgcnRsKCB7IHJpZ2h0OiAwIH0gKSB9XG5gO1xuIl19 */"));
//# sourceMappingURL=select-control-styles.js.map