"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = WritingModeControl;
var _react = require("react");
var _classnames = _interopRequireDefault(require("classnames"));
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
var _icons = require("@wordpress/icons");
/**
 * External dependencies
 */

/**
 * WordPress dependencies
 */

const WRITING_MODES = [{
  name: (0, _i18n.__)('Horizontal'),
  value: 'horizontal-tb',
  icon: _icons.textHorizontal
}, {
  name: (0, _i18n.__)('Vertical'),
  value: (0, _i18n.isRTL)() ? 'vertical-lr' : 'vertical-rl',
  icon: _icons.textVertical
}];

/**
 * Control to facilitate writing mode selections.
 *
 * @param {Object}   props           Component props.
 * @param {string}   props.className Class name to add to the control.
 * @param {string}   props.value     Currently selected writing mode.
 * @param {Function} props.onChange  Handles change in the writing mode selection.
 *
 * @return {Element} Writing Mode control.
 */
function WritingModeControl({
  className,
  value,
  onChange
}) {
  return (0, _react.createElement)("fieldset", {
    className: (0, _classnames.default)('block-editor-writing-mode-control', className)
  }, (0, _react.createElement)(_components.BaseControl.VisualLabel, {
    as: "legend"
  }, (0, _i18n.__)('Orientation')), (0, _react.createElement)("div", {
    className: "block-editor-writing-mode-control__buttons"
  }, WRITING_MODES.map(writingMode => {
    return (0, _react.createElement)(_components.Button, {
      key: writingMode.value,
      icon: writingMode.icon,
      label: writingMode.name,
      isPressed: writingMode.value === value,
      onClick: () => {
        onChange(writingMode.value === value ? undefined : writingMode.value);
      }
    });
  })));
}
//# sourceMappingURL=index.js.map