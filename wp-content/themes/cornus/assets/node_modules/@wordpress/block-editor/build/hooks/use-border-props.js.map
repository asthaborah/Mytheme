{"version":3,"names":["_style","require","_border","_useMultipleOriginColorsAndGradients","_interopRequireDefault","getBorderClassesAndStyles","attributes","border","style","className","getBorderClasses","undefined","getInlineStyles","useBorderProps","colors","useMultipleOriginColorsAndGradients","borderProps","borderColor","borderColorObject","getMultiOriginColor","namedColor","color"],"sources":["@wordpress/block-editor/src/hooks/use-border-props.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { getInlineStyles } from './style';\nimport { getBorderClasses, getMultiOriginColor } from './border';\nimport useMultipleOriginColorsAndGradients from '../components/colors-gradients/use-multiple-origin-colors-and-gradients';\n\n// This utility is intended to assist where the serialization of the border\n// block support is being skipped for a block but the border related CSS classes\n// & styles still need to be generated so they can be applied to inner elements.\n\n/**\n * Provides the CSS class names and inline styles for a block's border support\n * attributes.\n *\n * @param {Object} attributes Block attributes.\n * @return {Object} Border block support derived CSS classes & styles.\n */\nexport function getBorderClassesAndStyles( attributes ) {\n\tconst border = attributes.style?.border || {};\n\tconst className = getBorderClasses( attributes );\n\n\treturn {\n\t\tclassName: className || undefined,\n\t\tstyle: getInlineStyles( { border } ),\n\t};\n}\n\n/**\n * Derives the border related props for a block from its border block support\n * attributes.\n *\n * Inline styles are forced for named colors to ensure these selections are\n * reflected when themes do not load their color stylesheets in the editor.\n *\n * @param {Object} attributes Block attributes.\n *\n * @return {Object} ClassName & style props from border block support.\n */\nexport function useBorderProps( attributes ) {\n\tconst { colors } = useMultipleOriginColorsAndGradients();\n\tconst borderProps = getBorderClassesAndStyles( attributes );\n\tconst { borderColor } = attributes;\n\n\t// Force inline styles to apply named border colors when themes do not load\n\t// their color stylesheets in the editor.\n\tif ( borderColor ) {\n\t\tconst borderColorObject = getMultiOriginColor( {\n\t\t\tcolors,\n\t\t\tnamedColor: borderColor,\n\t\t} );\n\n\t\tborderProps.style.borderColor = borderColorObject.color;\n\t}\n\n\treturn borderProps;\n}\n"],"mappings":";;;;;;;;AAGA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,oCAAA,GAAAC,sBAAA,CAAAH,OAAA;AALA;AACA;AACA;;AAKA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASI,yBAAyBA,CAAEC,UAAU,EAAG;EACvD,MAAMC,MAAM,GAAGD,UAAU,CAACE,KAAK,EAAED,MAAM,IAAI,CAAC,CAAC;EAC7C,MAAME,SAAS,GAAG,IAAAC,wBAAgB,EAAEJ,UAAW,CAAC;EAEhD,OAAO;IACNG,SAAS,EAAEA,SAAS,IAAIE,SAAS;IACjCH,KAAK,EAAE,IAAAI,sBAAe,EAAE;MAAEL;IAAO,CAAE;EACpC,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASM,cAAcA,CAAEP,UAAU,EAAG;EAC5C,MAAM;IAAEQ;EAAO,CAAC,GAAG,IAAAC,4CAAmC,EAAC,CAAC;EACxD,MAAMC,WAAW,GAAGX,yBAAyB,CAAEC,UAAW,CAAC;EAC3D,MAAM;IAAEW;EAAY,CAAC,GAAGX,UAAU;;EAElC;EACA;EACA,IAAKW,WAAW,EAAG;IAClB,MAAMC,iBAAiB,GAAG,IAAAC,2BAAmB,EAAE;MAC9CL,MAAM;MACNM,UAAU,EAAEH;IACb,CAAE,CAAC;IAEHD,WAAW,CAACR,KAAK,CAACS,WAAW,GAAGC,iBAAiB,CAACG,KAAK;EACxD;EAEA,OAAOL,WAAW;AACnB"}