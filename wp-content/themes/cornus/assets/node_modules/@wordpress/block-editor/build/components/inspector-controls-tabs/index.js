"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = InspectorControlsTabs;
var _react = require("react");
var _components = require("@wordpress/components");
var _utils = require("./utils");
var _settingsTab = _interopRequireDefault(require("./settings-tab"));
var _stylesTab = _interopRequireDefault(require("./styles-tab"));
var _inspectorControls = _interopRequireDefault(require("../inspector-controls"));
var _useIsListViewTabDisabled = _interopRequireDefault(require("./use-is-list-view-tab-disabled"));
var _lockUnlock = require("../../lock-unlock");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const {
  Tabs
} = (0, _lockUnlock.unlock)(_components.privateApis);
function InspectorControlsTabs({
  blockName,
  clientId,
  hasBlockStyles,
  tabs
}) {
  // The tabs panel will mount before fills are rendered to the list view
  // slot. This means the list view tab isn't initially included in the
  // available tabs so the panel defaults selection to the settings tab
  // which at the time is the first tab. This check allows blocks known to
  // include the list view tab to set it as the tab selected by default.
  const initialTabName = !(0, _useIsListViewTabDisabled.default)(blockName) ? _utils.TAB_LIST_VIEW.name : undefined;
  return (0, _react.createElement)("div", {
    className: "block-editor-block-inspector__tabs"
  }, (0, _react.createElement)(Tabs, {
    defaultTabId: initialTabName,
    key: clientId
  }, (0, _react.createElement)(Tabs.TabList, null, tabs.map(tab => (0, _react.createElement)(Tabs.Tab, {
    key: tab.name,
    tabId: tab.name,
    render: (0, _react.createElement)(_components.Button, {
      icon: tab.icon,
      label: tab.title,
      className: tab.className
    })
  }))), (0, _react.createElement)(Tabs.TabPanel, {
    tabId: _utils.TAB_SETTINGS.name,
    focusable: false
  }, (0, _react.createElement)(_settingsTab.default, {
    showAdvancedControls: !!blockName
  })), (0, _react.createElement)(Tabs.TabPanel, {
    tabId: _utils.TAB_STYLES.name,
    focusable: false
  }, (0, _react.createElement)(_stylesTab.default, {
    blockName: blockName,
    clientId: clientId,
    hasBlockStyles: hasBlockStyles
  })), (0, _react.createElement)(Tabs.TabPanel, {
    tabId: _utils.TAB_LIST_VIEW.name,
    focusable: false
  }, (0, _react.createElement)(_inspectorControls.default.Slot, {
    group: "list"
  }))));
}
//# sourceMappingURL=index.js.map