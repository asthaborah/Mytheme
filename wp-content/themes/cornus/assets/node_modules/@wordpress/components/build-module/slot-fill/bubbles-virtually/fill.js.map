{"version":3,"names":["useRef","useState","useEffect","createPortal","useSlot","StyleProvider","useForceUpdate","setState","mounted","current","Fill","props","_slot$fillProps","name","children","registerFill","unregisterFill","slot","rerender","ref","wrappedChildren","createElement","document","ownerDocument","fillProps"],"sources":["@wordpress/components/src/slot-fill/bubbles-virtually/fill.tsx"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRef, useState, useEffect, createPortal } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport useSlot from './use-slot';\nimport StyleProvider from '../../style-provider';\nimport type { FillComponentProps } from '../types';\n\nfunction useForceUpdate() {\n\tconst [ , setState ] = useState( {} );\n\tconst mounted = useRef( true );\n\n\tuseEffect( () => {\n\t\tmounted.current = true;\n\t\treturn () => {\n\t\t\tmounted.current = false;\n\t\t};\n\t}, [] );\n\n\treturn () => {\n\t\tif ( mounted.current ) {\n\t\t\tsetState( {} );\n\t\t}\n\t};\n}\n\nexport default function Fill( props: FillComponentProps ) {\n\tconst { name, children } = props;\n\tconst { registerFill, unregisterFill, ...slot } = useSlot( name );\n\tconst rerender = useForceUpdate();\n\tconst ref = useRef( { rerender } );\n\n\tuseEffect( () => {\n\t\t// We register fills so we can keep track of their existence.\n\t\t// Some Slot implementations need to know if there're already fills\n\t\t// registered so they can choose to render themselves or not.\n\t\tregisterFill( ref );\n\t\treturn () => {\n\t\t\tunregisterFill( ref );\n\t\t};\n\t}, [ registerFill, unregisterFill ] );\n\n\tif ( ! slot.ref || ! slot.ref.current ) {\n\t\treturn null;\n\t}\n\n\t// When using a `Fill`, the `children` will be rendered in the document of the\n\t// `Slot`. This means that we need to wrap the `children` in a `StyleProvider`\n\t// to make sure we're referencing the right document/iframe (instead of the\n\t// context of the `Fill`'s parent).\n\tconst wrappedChildren = (\n\t\t<StyleProvider document={ slot.ref.current.ownerDocument }>\n\t\t\t{ typeof children === 'function'\n\t\t\t\t? children( slot.fillProps ?? {} )\n\t\t\t\t: children }\n\t\t</StyleProvider>\n\t);\n\n\treturn createPortal( wrappedChildren, slot.ref.current );\n}\n"],"mappings":";AAAA;AACA;AACA;AACA,SAASA,MAAM,EAAEC,QAAQ,EAAEC,SAAS,EAAEC,YAAY,QAAQ,oBAAoB;;AAE9E;AACA;AACA;AACA,OAAOC,OAAO,MAAM,YAAY;AAChC,OAAOC,aAAa,MAAM,sBAAsB;AAGhD,SAASC,cAAcA,CAAA,EAAG;EACzB,MAAM,GAAIC,QAAQ,CAAE,GAAGN,QAAQ,CAAE,CAAC,CAAE,CAAC;EACrC,MAAMO,OAAO,GAAGR,MAAM,CAAE,IAAK,CAAC;EAE9BE,SAAS,CAAE,MAAM;IAChBM,OAAO,CAACC,OAAO,GAAG,IAAI;IACtB,OAAO,MAAM;MACZD,OAAO,CAACC,OAAO,GAAG,KAAK;IACxB,CAAC;EACF,CAAC,EAAE,EAAG,CAAC;EAEP,OAAO,MAAM;IACZ,IAAKD,OAAO,CAACC,OAAO,EAAG;MACtBF,QAAQ,CAAE,CAAC,CAAE,CAAC;IACf;EACD,CAAC;AACF;AAEA,eAAe,SAASG,IAAIA,CAAEC,KAAyB,EAAG;EAAA,IAAAC,eAAA;EACzD,MAAM;IAAEC,IAAI;IAAEC;EAAS,CAAC,GAAGH,KAAK;EAChC,MAAM;IAAEI,YAAY;IAAEC,cAAc;IAAE,GAAGC;EAAK,CAAC,GAAGb,OAAO,CAAES,IAAK,CAAC;EACjE,MAAMK,QAAQ,GAAGZ,cAAc,CAAC,CAAC;EACjC,MAAMa,GAAG,GAAGnB,MAAM,CAAE;IAAEkB;EAAS,CAAE,CAAC;EAElChB,SAAS,CAAE,MAAM;IAChB;IACA;IACA;IACAa,YAAY,CAAEI,GAAI,CAAC;IACnB,OAAO,MAAM;MACZH,cAAc,CAAEG,GAAI,CAAC;IACtB,CAAC;EACF,CAAC,EAAE,CAAEJ,YAAY,EAAEC,cAAc,CAAG,CAAC;EAErC,IAAK,CAAEC,IAAI,CAACE,GAAG,IAAI,CAAEF,IAAI,CAACE,GAAG,CAACV,OAAO,EAAG;IACvC,OAAO,IAAI;EACZ;;EAEA;EACA;EACA;EACA;EACA,MAAMW,eAAe,GACpBC,aAAA,CAAChB,aAAa;IAACiB,QAAQ,EAAGL,IAAI,CAACE,GAAG,CAACV,OAAO,CAACc;EAAe,GACvD,OAAOT,QAAQ,KAAK,UAAU,GAC7BA,QAAQ,EAAAF,eAAA,GAAEK,IAAI,CAACO,SAAS,cAAAZ,eAAA,cAAAA,eAAA,GAAI,CAAC,CAAE,CAAC,GAChCE,QACW,CACf;EAED,OAAOX,YAAY,CAAEiB,eAAe,EAAEH,IAAI,CAACE,GAAG,CAACV,OAAQ,CAAC;AACzD"}