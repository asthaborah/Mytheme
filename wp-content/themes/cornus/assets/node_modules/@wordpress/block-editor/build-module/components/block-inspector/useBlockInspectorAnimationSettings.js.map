{"version":3,"names":["useSelect","store","blockEditorStore","useBlockInspectorAnimationSettings","blockType","selectedBlockClientId","select","globalBlockInspectorAnimationSettings","getSettings","blockInspectorAnimation","animationParent","getSelectedBlockClientId","getBlockParentsByBlockName","_selectedBlockClientId","animationParentBlockClientId","name"],"sources":["@wordpress/block-editor/src/components/block-inspector/useBlockInspectorAnimationSettings.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\nexport default function useBlockInspectorAnimationSettings(\n\tblockType,\n\tselectedBlockClientId\n) {\n\treturn useSelect(\n\t\t( select ) => {\n\t\t\tif ( blockType ) {\n\t\t\t\tconst globalBlockInspectorAnimationSettings =\n\t\t\t\t\tselect( blockEditorStore ).getSettings()\n\t\t\t\t\t\t.blockInspectorAnimation;\n\n\t\t\t\t// Get the name of the block that will allow it's children to be animated.\n\t\t\t\tconst animationParent =\n\t\t\t\t\tglobalBlockInspectorAnimationSettings?.animationParent;\n\n\t\t\t\t// Determine whether the animationParent block is a parent of the selected block.\n\t\t\t\tconst { getSelectedBlockClientId, getBlockParentsByBlockName } =\n\t\t\t\t\tselect( blockEditorStore );\n\t\t\t\tconst _selectedBlockClientId = getSelectedBlockClientId();\n\t\t\t\tconst animationParentBlockClientId = getBlockParentsByBlockName(\n\t\t\t\t\t_selectedBlockClientId,\n\t\t\t\t\tanimationParent,\n\t\t\t\t\ttrue\n\t\t\t\t)[ 0 ];\n\n\t\t\t\t// If the selected block is not a child of the animationParent block,\n\t\t\t\t// and not an animationParent block itself, don't animate.\n\t\t\t\tif (\n\t\t\t\t\t! animationParentBlockClientId &&\n\t\t\t\t\tblockType.name !== animationParent\n\t\t\t\t) {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\treturn globalBlockInspectorAnimationSettings?.[\n\t\t\t\t\tblockType.name\n\t\t\t\t];\n\t\t\t}\n\t\t\treturn null;\n\t\t},\n\t\t[ selectedBlockClientId, blockType ]\n\t);\n}\n"],"mappings":"AAAA;AACA;AACA;AACA,SAASA,SAAS,QAAQ,iBAAiB;;AAE3C;AACA;AACA;AACA,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,aAAa;AAEvD,eAAe,SAASC,kCAAkCA,CACzDC,SAAS,EACTC,qBAAqB,EACpB;EACD,OAAOL,SAAS,CACbM,MAAM,IAAM;IACb,IAAKF,SAAS,EAAG;MAChB,MAAMG,qCAAqC,GAC1CD,MAAM,CAAEJ,gBAAiB,CAAC,CAACM,WAAW,CAAC,CAAC,CACtCC,uBAAuB;;MAE1B;MACA,MAAMC,eAAe,GACpBH,qCAAqC,EAAEG,eAAe;;MAEvD;MACA,MAAM;QAAEC,wBAAwB;QAAEC;MAA2B,CAAC,GAC7DN,MAAM,CAAEJ,gBAAiB,CAAC;MAC3B,MAAMW,sBAAsB,GAAGF,wBAAwB,CAAC,CAAC;MACzD,MAAMG,4BAA4B,GAAGF,0BAA0B,CAC9DC,sBAAsB,EACtBH,eAAe,EACf,IACD,CAAC,CAAE,CAAC,CAAE;;MAEN;MACA;MACA,IACC,CAAEI,4BAA4B,IAC9BV,SAAS,CAACW,IAAI,KAAKL,eAAe,EACjC;QACD,OAAO,IAAI;MACZ;MAEA,OAAOH,qCAAqC,GAC3CH,SAAS,CAACW,IAAI,CACd;IACF;IACA,OAAO,IAAI;EACZ,CAAC,EACD,CAAEV,qBAAqB,EAAED,SAAS,CACnC,CAAC;AACF"}