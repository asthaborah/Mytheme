"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _FROYTN4Bcjs = require('../__chunks/FROYTN4B.cjs');


var _5UTRYT6Ecjs = require('../__chunks/5UTRYT6E.cjs');
require('../__chunks/DAJUUBUI.cjs');


var _R5A2WTWBcjs = require('../__chunks/R5A2WTWB.cjs');
require('../__chunks/BZTDJIVT.cjs');
require('../__chunks/Z3GCTNW4.cjs');
require('../__chunks/75KXQZJX.cjs');




var _RNZNGEL4cjs = require('../__chunks/RNZNGEL4.cjs');


var _EO6LS72Hcjs = require('../__chunks/EO6LS72H.cjs');
require('../__chunks/CJDHQUBR.cjs');




var _AV6KTKLEcjs = require('../__chunks/AV6KTKLE.cjs');

// src/form/form-push.ts
var _react = require('react');
var _misc = require('@ariakit/core/utils/misc');
function getFirstFieldsByName(items, name) {
  if (!items)
    return [];
  const fields = [];
  for (const item of items) {
    if (item.type !== "field")
      continue;
    if (!item.name.startsWith(name))
      continue;
    const nameWithIndex = item.name.replace(/(\.\d+)\..+$/, "$1");
    const regex = new RegExp(`^${nameWithIndex}`);
    if (!fields.some((i) => regex.test(i.name))) {
      fields.push(item);
    }
  }
  return fields;
}
var useFormPush = _RNZNGEL4cjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, {
      store,
      value,
      name: nameProp,
      getItem: getItemProp,
      autoFocusOnClick = true
    } = _b, props = _AV6KTKLEcjs.__objRest.call(void 0, _b, [
      "store",
      "value",
      "name",
      "getItem",
      "autoFocusOnClick"
    ]);
    const context = _FROYTN4Bcjs.useFormContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "FormPush must be wrapped in a Form component."
    );
    const name = `${nameProp}`;
    const [shouldFocus, setShouldFocus] = _react.useState.call(void 0, false);
    _react.useEffect.call(void 0, () => {
      var _a2;
      if (!shouldFocus)
        return;
      const items = getFirstFieldsByName(store == null ? void 0 : store.getState().items, name);
      const element = (_a2 = items == null ? void 0 : items[items.length - 1]) == null ? void 0 : _a2.element;
      if (!element)
        return;
      element.focus();
      setShouldFocus(false);
    }, [store, shouldFocus, name]);
    const getItem = _react.useCallback.call(void 0, 
      (item) => {
        const nextItem = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, item), { type: "button", name });
        if (getItemProp) {
          return getItemProp(nextItem);
        }
        return nextItem;
      },
      [name, getItemProp]
    );
    const onClickProp = props.onClick;
    const onClick = _EO6LS72Hcjs.useEvent.call(void 0, (event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented)
        return;
      store == null ? void 0 : store.pushValue(name, value);
      if (!autoFocusOnClick)
        return;
      setShouldFocus(true);
    });
    props = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props), {
      onClick
    });
    props = _5UTRYT6Ecjs.useButton.call(void 0, props);
    props = _R5A2WTWBcjs.useCollectionItem.call(void 0, _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, { store }, props), { getItem }));
    return props;
  }
);
var FormPush = _RNZNGEL4cjs.createComponent.call(void 0, (props) => {
  const htmlProps = useFormPush(props);
  return _RNZNGEL4cjs.createElement.call(void 0, "button", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  FormPush.displayName = "FormPush";
}



exports.FormPush = FormPush; exports.useFormPush = useFormPush;
