import { createElement } from "react";
/**
 * WordPress dependencies
 */
import { isReusableBlock, createBlock, getBlockFromExample } from '@wordpress/blocks';
import { useMemo } from '@wordpress/element';
import { __ } from '@wordpress/i18n';

/**
 * Internal dependencies
 */
import BlockCard from '../block-card';
import BlockPreview from '../block-preview';
function InserterPreviewPanel({
  item
}) {
  var _example$viewportWidt;
  const {
    name,
    title,
    icon,
    description,
    initialAttributes,
    example
  } = item;
  const isReusable = isReusableBlock(item);
  const blocks = useMemo(() => {
    if (!example) {
      return createBlock(name, initialAttributes);
    }
    return getBlockFromExample(name, {
      attributes: {
        ...example.attributes,
        ...initialAttributes
      },
      innerBlocks: example.innerBlocks
    });
  }, [name, example, initialAttributes]);
  return createElement("div", {
    className: "block-editor-inserter__preview-container"
  }, createElement("div", {
    className: "block-editor-inserter__preview"
  }, isReusable || example ? createElement("div", {
    className: "block-editor-inserter__preview-content"
  }, createElement(BlockPreview, {
    blocks: blocks,
    viewportWidth: (_example$viewportWidt = example?.viewportWidth) !== null && _example$viewportWidt !== void 0 ? _example$viewportWidt : 500,
    additionalStyles: [{
      css: 'body { padding: 24px; }'
    }]
  })) : createElement("div", {
    className: "block-editor-inserter__preview-content-missing"
  }, __('No preview available.'))), !isReusable && createElement(BlockCard, {
    title: title,
    icon: icon,
    description: description
  }));
}
export default InserterPreviewPanel;
//# sourceMappingURL=preview-panel.js.map