{"version":3,"names":["_i18n","require","_components","_element","_blocks","_data","_warning","_interopRequireDefault","_blockCompare","_store","blockToBlocks","block","rawHandler","HTML","originalContent","BlockInvalidWarning","clientId","canInsertHTMLBlock","canInsertClassicBlock","useSelect","select","canInsertBlockType","getBlock","getBlockRootClientId","blockEditorStore","rootClientId","replaceBlock","useDispatch","compare","setCompare","useState","onCompareClose","useCallback","convert","useMemo","toClassic","classicBlock","createBlock","content","toHTML","htmlBlock","toBlocks","newBlocks","toRecoveredBlock","recoveredBlock","name","attributes","innerBlocks","secondaryActions","title","_x","onClick","__","filter","Boolean","_react","createElement","Fragment","default","actions","Button","key","variant","Modal","onRequestClose","className","onKeep","onConvert","convertor","convertButtonText"],"sources":["@wordpress/block-editor/src/components/block-list/block-invalid-warning.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __, _x } from '@wordpress/i18n';\nimport { Button, Modal } from '@wordpress/components';\nimport { useState, useCallback, useMemo } from '@wordpress/element';\nimport { createBlock, rawHandler } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Warning from '../warning';\nimport BlockCompare from '../block-compare';\nimport { store as blockEditorStore } from '../../store';\n\nconst blockToBlocks = ( block ) =>\n\trawHandler( {\n\t\tHTML: block.originalContent,\n\t} );\n\nexport default function BlockInvalidWarning( { clientId } ) {\n\tconst { block, canInsertHTMLBlock, canInsertClassicBlock } = useSelect(\n\t\t( select ) => {\n\t\t\tconst { canInsertBlockType, getBlock, getBlockRootClientId } =\n\t\t\t\tselect( blockEditorStore );\n\n\t\t\tconst rootClientId = getBlockRootClientId( clientId );\n\n\t\t\treturn {\n\t\t\t\tblock: getBlock( clientId ),\n\t\t\t\tcanInsertHTMLBlock: canInsertBlockType(\n\t\t\t\t\t'core/html',\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t\tcanInsertClassicBlock: canInsertBlockType(\n\t\t\t\t\t'core/freeform',\n\t\t\t\t\trootClientId\n\t\t\t\t),\n\t\t\t};\n\t\t},\n\t\t[ clientId ]\n\t);\n\tconst { replaceBlock } = useDispatch( blockEditorStore );\n\n\tconst [ compare, setCompare ] = useState( false );\n\tconst onCompareClose = useCallback( () => setCompare( false ), [] );\n\n\tconst convert = useMemo(\n\t\t() => ( {\n\t\t\ttoClassic() {\n\t\t\t\tconst classicBlock = createBlock( 'core/freeform', {\n\t\t\t\t\tcontent: block.originalContent,\n\t\t\t\t} );\n\t\t\t\treturn replaceBlock( block.clientId, classicBlock );\n\t\t\t},\n\t\t\ttoHTML() {\n\t\t\t\tconst htmlBlock = createBlock( 'core/html', {\n\t\t\t\t\tcontent: block.originalContent,\n\t\t\t\t} );\n\t\t\t\treturn replaceBlock( block.clientId, htmlBlock );\n\t\t\t},\n\t\t\ttoBlocks() {\n\t\t\t\tconst newBlocks = blockToBlocks( block );\n\t\t\t\treturn replaceBlock( block.clientId, newBlocks );\n\t\t\t},\n\t\t\ttoRecoveredBlock() {\n\t\t\t\tconst recoveredBlock = createBlock(\n\t\t\t\t\tblock.name,\n\t\t\t\t\tblock.attributes,\n\t\t\t\t\tblock.innerBlocks\n\t\t\t\t);\n\t\t\t\treturn replaceBlock( block.clientId, recoveredBlock );\n\t\t\t},\n\t\t} ),\n\t\t[ block, replaceBlock ]\n\t);\n\n\tconst secondaryActions = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\t{\n\t\t\t\t\t// translators: Button to fix block content\n\t\t\t\t\ttitle: _x( 'Resolve', 'imperative verb' ),\n\t\t\t\t\tonClick: () => setCompare( true ),\n\t\t\t\t},\n\t\t\t\tcanInsertHTMLBlock && {\n\t\t\t\t\ttitle: __( 'Convert to HTML' ),\n\t\t\t\t\tonClick: convert.toHTML,\n\t\t\t\t},\n\t\t\t\tcanInsertClassicBlock && {\n\t\t\t\t\ttitle: __( 'Convert to Classic Block' ),\n\t\t\t\t\tonClick: convert.toClassic,\n\t\t\t\t},\n\t\t\t].filter( Boolean ),\n\t\t[ canInsertHTMLBlock, canInsertClassicBlock, convert ]\n\t);\n\n\treturn (\n\t\t<>\n\t\t\t<Warning\n\t\t\t\tactions={ [\n\t\t\t\t\t<Button\n\t\t\t\t\t\tkey=\"recover\"\n\t\t\t\t\t\tonClick={ convert.toRecoveredBlock }\n\t\t\t\t\t\tvariant=\"primary\"\n\t\t\t\t\t>\n\t\t\t\t\t\t{ __( 'Attempt Block Recovery' ) }\n\t\t\t\t\t</Button>,\n\t\t\t\t] }\n\t\t\t\tsecondaryActions={ secondaryActions }\n\t\t\t>\n\t\t\t\t{ __( 'This block contains unexpected or invalid content.' ) }\n\t\t\t</Warning>\n\t\t\t{ compare && (\n\t\t\t\t<Modal\n\t\t\t\t\ttitle={\n\t\t\t\t\t\t// translators: Dialog title to fix block content\n\t\t\t\t\t\t__( 'Resolve Block' )\n\t\t\t\t\t}\n\t\t\t\t\tonRequestClose={ onCompareClose }\n\t\t\t\t\tclassName=\"block-editor-block-compare\"\n\t\t\t\t>\n\t\t\t\t\t<BlockCompare\n\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\tonKeep={ convert.toHTML }\n\t\t\t\t\t\tonConvert={ convert.toBlocks }\n\t\t\t\t\t\tconvertor={ blockToBlocks }\n\t\t\t\t\t\tconvertButtonText={ __( 'Convert to Blocks' ) }\n\t\t\t\t\t/>\n\t\t\t\t</Modal>\n\t\t\t) }\n\t\t</>\n\t);\n}\n"],"mappings":"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"}