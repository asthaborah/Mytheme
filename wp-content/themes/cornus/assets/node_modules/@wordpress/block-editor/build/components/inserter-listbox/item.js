"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _components = require("@wordpress/components");
var _element = require("@wordpress/element");
var _lockUnlock = require("../../lock-unlock");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const {
  CompositeItemV2: CompositeItem
} = (0, _lockUnlock.unlock)(_components.privateApis);
function InserterListboxItem({
  isFirst,
  as: Component,
  children,
  ...props
}, ref) {
  return (0, _react.createElement)(CompositeItem, {
    ref: ref,
    role: "option"
    // Use the CompositeItem `accessibleWhenDisabled` prop
    // over Button's `isFocusable`. The latter was shown to
    // cause an issue with tab order in the inserter list.
    ,
    accessibleWhenDisabled: true,
    ...props,
    render: htmlProps => {
      const propsWithTabIndex = {
        ...htmlProps,
        tabIndex: isFirst ? 0 : htmlProps.tabIndex
      };
      if (Component) {
        return (0, _react.createElement)(Component, {
          ...propsWithTabIndex
        }, children);
      }
      if (typeof children === 'function') {
        return children(propsWithTabIndex);
      }
      return (0, _react.createElement)(_components.Button, {
        ...propsWithTabIndex
      }, children);
    }
  });
}
var _default = exports.default = (0, _element.forwardRef)(InserterListboxItem);
//# sourceMappingURL=item.js.map