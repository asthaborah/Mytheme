import type { MouseEvent } from "react";
import type { BooleanOrCallback } from "@ariakit/core/utils/types";
import type { ButtonOptions } from "../button/button.js";
import type { As, Props } from "../utils/types.js";
import type { DisclosureStore } from "./disclosure-store.js";
/**
 * Returns props to create a `Disclosure` component.
 * @see https://ariakit.org/components/disclosure
 * @example
 * ```jsx
 * const store = useDisclosureStore();
 * const props = useDisclosure({ store });
 * <Role {...props}>Disclosure</Role>
 * <DisclosureContent store={store}>Content</DisclosureContent>
 * ```
 */
export declare const useDisclosure: import("../utils/types.js").Hook<DisclosureOptions<"button">>;
/**
 * Renders an element that controls the visibility of a
 * [`DisclosureContent`](https://ariakit.org/reference/disclosure-content)
 * element.
 * @see https://ariakit.org/components/disclosure
 * @example
 * ```jsx {2}
 * <DisclosureProvider>
 *   <Disclosure>Disclosure</Disclosure>
 *   <DisclosureContent>Content</DisclosureContent>
 * </DisclosureProvider>
 * ```
 */
export declare const Disclosure: import("../utils/types.js").Component<DisclosureOptions<"button">>;
export interface DisclosureOptions<T extends As = "button"> extends ButtonOptions<T> {
    /**
     * Object returned by the
     * [`useDisclosureStore`](https://ariakit.org/reference/use-disclosure-store)
     * hook. If not provided, the closest
     * [`DisclosureProvider`](https://ariakit.org/reference/disclosure-provider)
     * component's context will be used.
     */
    store?: DisclosureStore;
    /**
     * Determines whether
     * [`toggle`](https://ariakit.org/reference/use-disclosure-store#toggle) will
     * be called on click. This is useful if you want to handle the toggle logic
     * yourself.
     *
     * Live examples:
     * - [Navigation Menubar](https://ariakit.org/examples/menubar-navigation)
     * @default true
     */
    toggleOnClick?: BooleanOrCallback<MouseEvent<HTMLElement>>;
}
export type DisclosureProps<T extends As = "button"> = Props<DisclosureOptions<T>>;
