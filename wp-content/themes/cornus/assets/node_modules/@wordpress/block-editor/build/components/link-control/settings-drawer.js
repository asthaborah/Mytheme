"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _components = require("@wordpress/components");
var _icons = require("@wordpress/icons");
var _compose = require("@wordpress/compose");
var _i18n = require("@wordpress/i18n");
var _element = require("@wordpress/element");
/**
 * WordPress dependencies
 */

function LinkSettingsDrawer({
  children,
  settingsOpen,
  setSettingsOpen
}) {
  const prefersReducedMotion = (0, _compose.useReducedMotion)();
  const MaybeAnimatePresence = prefersReducedMotion ? _element.Fragment : _components.__unstableAnimatePresence;
  const MaybeMotionDiv = prefersReducedMotion ? 'div' : _components.__unstableMotion.div;
  const id = (0, _compose.useInstanceId)(LinkSettingsDrawer);
  const settingsDrawerId = `link-control-settings-drawer-${id}`;
  return (0, _react.createElement)(_element.Fragment, null, (0, _react.createElement)(_components.Button, {
    className: "block-editor-link-control__drawer-toggle",
    "aria-expanded": settingsOpen,
    onClick: () => setSettingsOpen(!settingsOpen),
    icon: (0, _i18n.isRTL)() ? _icons.chevronLeftSmall : _icons.chevronRightSmall,
    "aria-controls": settingsDrawerId
  }, (0, _i18n._x)('Advanced', 'Additional link settings')), (0, _react.createElement)(MaybeAnimatePresence, null, settingsOpen && (0, _react.createElement)(MaybeMotionDiv, {
    className: "block-editor-link-control__drawer",
    hidden: !settingsOpen,
    id: settingsDrawerId,
    initial: "collapsed",
    animate: "open",
    exit: "collapsed",
    variants: {
      open: {
        opacity: 1,
        height: 'auto'
      },
      collapsed: {
        opacity: 0,
        height: 0
      }
    },
    transition: {
      duration: 0.1
    }
  }, (0, _react.createElement)("div", {
    className: "block-editor-link-control__drawer-inner"
  }, children))));
}
var _default = exports.default = LinkSettingsDrawer;
//# sourceMappingURL=settings-drawer.js.map