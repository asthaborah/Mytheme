{
    "version": 3,
    "file": "js/blocks.js",
    "mappings": ";;;;;;;;;;;;;;;AAAqC;AACiB;AAEtDC,oEAAiB,CAAC,uBAAuB,EAAG;EACxCC,KAAK,EAAEF,mDAAE,CAAC,mBAAmB,EAAG,QAAQ,CAAC;EACzCG,IAAI,EAAE,kBAAkB;EACxB;EACAC,QAAQ,EAAE,QAAQ;EAClBC,IAAI,WAAAA,KAAA,EAAE;IACF,oBAAOC,KAAA,CAAAC,aAAA,cAAK,sCAAyC,CAAC;EAC1D,CAAC;EAEDC,IAAI,WAAAA,KAAA,EAAE;IACF,oBAAOF,KAAA,CAAAC,aAAA,cAAK,wCAA2C,CAAC;EAC5D;AACJ,CAAC,CAAC;;;;;;;;;;;ACfF;;;;;;;;;;;ACAA;;;;;;;;;;ACAA;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA,eAAe,4BAA4B;WAC3C,eAAe;WACf,iCAAiC,WAAW;WAC5C;WACA;;;;;WCPA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA,8CAA8C;;;;;WCA9C;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNA;AAC6B;;AAE7B",
    "sources": [
        "webpack://cornus/./src/js/gutenberg/blocks/heading-with-icon/index.js",
        "webpack://cornus/./src/sass/blocks.scss",
        "webpack://cornus/external window [\"wp\",\"blocks\"]",
        "webpack://cornus/external window [\"wp\",\"i18n\"]",
        "webpack://cornus/webpack/bootstrap",
        "webpack://cornus/webpack/runtime/compat get default export",
        "webpack://cornus/webpack/runtime/define property getters",
        "webpack://cornus/webpack/runtime/hasOwnProperty shorthand",
        "webpack://cornus/webpack/runtime/make namespace object",
        "webpack://cornus/./src/js/blocks.js"
    ],
    "sourcesContent": [
        "import { __ } from '@wordpress/i18n';\r\nimport { registerBlockType } from '@wordpress/blocks';\r\n\r\nregisterBlockType('Cornus-blocks/heading' , {\r\n    title: __('Heading with Icon' , 'Cornus'),\r\n    icon: 'admin-customizer',\r\n    // description: __('Add heading and select icon' , 'Cornus'),\r\n    category: 'Cornus',\r\n    edit(){\r\n        return <div>Hello World, step 1(from the editor)</div>\r\n    },\r\n\r\n    save(){\r\n        return <div>Hello World, step 1(from the frontend)</div>\r\n    },\r\n});",
        "// extracted by mini-css-extract-plugin\nexport {};",
        "module.exports = window[\"wp\"][\"blocks\"];",
        "module.exports = window[\"wp\"][\"i18n\"];",
        "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n",
        "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = function(module) {\n\tvar getter = module && module.__esModule ?\n\t\tfunction() { return module['default']; } :\n\t\tfunction() { return module; };\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};",
        "// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};",
        "__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }",
        "// define __esModule on exports\n__webpack_require__.r = function(exports) {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};",
        "// importing blocks\r\nimport '../sass/blocks.scss';\r\n\r\n//Blocks\r\nimport './gutenberg/blocks/heading-with-icon';\r\n"
    ],
    "names": [
        "__",
        "registerBlockType",
        "title",
        "icon",
        "category",
        "edit",
        "React",
        "createElement",
        "save"
    ],
    "sourceRoot": ""
}