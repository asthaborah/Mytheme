"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.privateApis = void 0;
var globalStyles = _interopRequireWildcard(require("./components/global-styles"));
var _provider = require("./components/provider");
var _lockUnlock = require("./lock-unlock");
var _getRichTextValues = require("./components/rich-text/get-rich-text-values");
var _resizableBoxPopover = _interopRequireDefault(require("./components/resizable-box-popover"));
var _inserter = require("./components/inserter");
var _quickInserter = _interopRequireDefault(require("./components/inserter/quick-inserter"));
var _listView = require("./components/list-view");
var _blockInfoSlotFill = _interopRequireDefault(require("./components/block-info-slot-fill"));
var _useShowBlockTools = require("./components/block-tools/use-show-block-tools");
var _utils = require("./hooks/utils");
var _blockQuickNavigation = _interopRequireDefault(require("./components/block-quick-navigation"));
var _layout = require("./components/block-list/layout");
var _blockRemovalWarningModal = require("./components/block-removal-warning-modal");
var _hooks = require("./hooks");
var _dimensionsTool = _interopRequireDefault(require("./components/dimensions-tool"));
var _resolutionTool = _interopRequireDefault(require("./components/resolution-tool"));
var _reusableBlockRenameHint = _interopRequireWildcard(require("./components/inserter/reusable-block-rename-hint"));
var _formatEdit = require("./components/rich-text/format-edit");
var _blockCanvas = require("./components/block-canvas");
var _utils2 = require("./components/duotone/utils");
var _useFlashEditableBlocks = require("./components/use-flash-editable-blocks");
var _privateKeys = require("./store/private-keys");
var _utils3 = require("./components/writing-flow/utils");
var _richText = require("./components/rich-text/");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * Internal dependencies
 */

/**
 * Private @wordpress/block-editor APIs.
 */
const privateApis = exports.privateApis = {};
(0, _lockUnlock.lock)(privateApis, {
  ...globalStyles,
  ExperimentalBlockCanvas: _blockCanvas.ExperimentalBlockCanvas,
  ExperimentalBlockEditorProvider: _provider.ExperimentalBlockEditorProvider,
  getDuotoneFilter: _utils2.getDuotoneFilter,
  getRichTextValues: _getRichTextValues.getRichTextValues,
  PrivateInserter: _inserter.ComposedPrivateInserter,
  PrivateQuickInserter: _quickInserter.default,
  PrivateListView: _listView.PrivateListView,
  ResizableBoxPopover: _resizableBoxPopover.default,
  BlockInfo: _blockInfoSlotFill.default,
  useShowBlockTools: _useShowBlockTools.useShowBlockTools,
  cleanEmptyObject: _utils.cleanEmptyObject,
  useStyleOverride: _utils.useStyleOverride,
  BlockQuickNavigation: _blockQuickNavigation.default,
  LayoutStyle: _layout.LayoutStyle,
  BlockRemovalWarningModal: _blockRemovalWarningModal.BlockRemovalWarningModal,
  useLayoutClasses: _hooks.useLayoutClasses,
  useLayoutStyles: _hooks.useLayoutStyles,
  DimensionsTool: _dimensionsTool.default,
  ResolutionTool: _resolutionTool.default,
  ReusableBlocksRenameHint: _reusableBlockRenameHint.default,
  useReusableBlocksRenameHint: _reusableBlockRenameHint.useReusableBlocksRenameHint,
  usesContextKey: _formatEdit.usesContextKey,
  useFlashEditableBlocks: _useFlashEditableBlocks.useFlashEditableBlocks,
  selectBlockPatternsKey: _privateKeys.selectBlockPatternsKey,
  requiresWrapperOnCopy: _utils3.requiresWrapperOnCopy,
  PrivateRichText: _richText.PrivateRichText
});
//# sourceMappingURL=private-apis.js.map