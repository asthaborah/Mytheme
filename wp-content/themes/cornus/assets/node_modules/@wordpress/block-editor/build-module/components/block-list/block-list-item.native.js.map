{"version":3,"names":["View","useSelect","Block","Grid","BlockInsertionPoint","store","blockEditorStore","useEditorWrapperStyles","BlockListItemContent","blockWidth","clientId","contentResizeMode","contentStyle","index","isStackedHorizontally","marginHorizontal","marginVertical","onAddBlock","onDeleteBlock","parentWidth","rootClientId","shouldShowInnerBlockAppender","blockAlignment","blockName","hasParents","parentBlockAlignment","parentBlockName","shouldShowInsertionPointAfter","shouldShowInsertionPointBefore","select","getBlockAttributes","getBlockInsertionPoint","getBlockName","getBlockOrder","isBlockInsertionPointVisible","blockClientIds","insertionPoint","insertionPointVisibleInCurrentRoot","isListEmpty","length","isInsertionPointBeforeBlock","isInsertionPointAtEnd","isBlockLastInList","showInsertionPointBefore","showInsertionPointAfter","blockHasParents","name","parentName","align","textAlign","parentBlockAlign","wrapperStyles","margin","shouldShowBlockInsertionPointAfter","createElement","style","testID","BlockListItem","props","isGridItem","numOfColumns","tileCount","tileIndex","restProps","maxWidth"],"sources":["@wordpress/block-editor/src/components/block-list/block-list-item.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { View } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\n\n/**\n * Internal dependencies\n */\nimport Block from './block';\nimport Grid from './grid-item';\nimport BlockInsertionPoint from './insertion-point';\nimport { store as blockEditorStore } from '../../store';\nimport { useEditorWrapperStyles } from '../../hooks/use-editor-wrapper-styles';\n\n/**\n * BlockListItemContent component. Renders a block with an optional insertion point.\n *\n * @param {Object}   props                              Component properties.\n * @param {number}   props.blockWidth                   The width of the block.\n * @param {string}   props.clientId                     The block client ID.\n * @param {string}   props.contentResizeMode            The content resize mode, e.g \"stretch\".\n * @param {Object}   props.contentStyle                 Styles for the block content\n * @param {Object}   props.index                        Block item index\n * @param {boolean}  props.isStackedHorizontally        Whether the block is stacked horizontally.\n * @param {number}   props.marginHorizontal             The horizontal margin.\n * @param {number}   props.marginVertical               The vertical margin.\n * @param {Function} props.onAddBlock                   On add block callback.\n * @param {Function} props.onDeleteBlock                On delete block callback.\n * @param {number}   props.parentWidth                  The width of the parent block.\n * @param {string}   props.rootClientId                 The root client ID.\n * @param {Function} props.shouldShowInnerBlockAppender Whether to show the inner block appender.\n *\n * @return {Component} The rendered block list item content.\n */\nfunction BlockListItemContent( {\n\tblockWidth,\n\tclientId,\n\tcontentResizeMode,\n\tcontentStyle,\n\tindex,\n\tisStackedHorizontally,\n\tmarginHorizontal,\n\tmarginVertical,\n\tonAddBlock,\n\tonDeleteBlock,\n\tparentWidth,\n\trootClientId,\n\tshouldShowInnerBlockAppender,\n} ) {\n\tconst {\n\t\tblockAlignment,\n\t\tblockName,\n\t\thasParents,\n\t\tparentBlockAlignment,\n\t\tparentBlockName,\n\t\tshouldShowInsertionPointAfter,\n\t\tshouldShowInsertionPointBefore,\n\t} = useSelect(\n\t\t( select ) => {\n\t\t\tconst {\n\t\t\t\tgetBlockAttributes,\n\t\t\t\tgetBlockInsertionPoint,\n\t\t\t\tgetBlockName,\n\t\t\t\tgetBlockOrder,\n\t\t\t\tisBlockInsertionPointVisible,\n\t\t\t} = select( blockEditorStore );\n\t\t\tconst blockClientIds = getBlockOrder( rootClientId );\n\t\t\tconst insertionPoint = getBlockInsertionPoint();\n\n\t\t\tconst insertionPointVisibleInCurrentRoot =\n\t\t\t\t! isStackedHorizontally &&\n\t\t\t\tisBlockInsertionPointVisible() &&\n\t\t\t\tinsertionPoint.rootClientId === rootClientId;\n\n\t\t\tconst isListEmpty = blockClientIds.length === 0;\n\t\t\tconst isInsertionPointBeforeBlock =\n\t\t\t\tblockClientIds[ insertionPoint.index ] === clientId;\n\t\t\tconst isInsertionPointAtEnd =\n\t\t\t\tblockClientIds.length === insertionPoint.index;\n\t\t\tconst isBlockLastInList =\n\t\t\t\tblockClientIds[ insertionPoint.index - 1 ] === clientId;\n\n\t\t\tconst showInsertionPointBefore =\n\t\t\t\tinsertionPointVisibleInCurrentRoot &&\n\t\t\t\t( isListEmpty || isInsertionPointBeforeBlock );\n\n\t\t\tconst showInsertionPointAfter =\n\t\t\t\tinsertionPointVisibleInCurrentRoot &&\n\t\t\t\tisInsertionPointAtEnd &&\n\t\t\t\tisBlockLastInList;\n\n\t\t\tconst blockHasParents = !! rootClientId;\n\t\t\tconst name = getBlockName( clientId );\n\t\t\tconst parentName = getBlockName( rootClientId );\n\t\t\tconst { align } = getBlockAttributes( clientId ) || {};\n\t\t\tconst { textAlign: parentBlockAlign } =\n\t\t\t\tgetBlockAttributes( rootClientId ) || {};\n\n\t\t\treturn {\n\t\t\t\tblockAlignment: align,\n\t\t\t\tblockName: name,\n\t\t\t\thasParents: blockHasParents,\n\t\t\t\tparentBlockAlignment: parentBlockAlign,\n\t\t\t\tparentBlockName: parentName,\n\t\t\t\tshouldShowInsertionPointAfter: showInsertionPointAfter,\n\t\t\t\tshouldShowInsertionPointBefore: showInsertionPointBefore,\n\t\t\t};\n\t\t},\n\t\t[ isStackedHorizontally, rootClientId, clientId ]\n\t);\n\n\tconst [ wrapperStyles, margin ] = useEditorWrapperStyles( {\n\t\talign: blockAlignment,\n\t\tblockName,\n\t\tblockWidth,\n\t\tcontentResizeMode,\n\t\thasParents,\n\t\tmarginHorizontal,\n\t\tparentBlockAlignment,\n\t\tparentBlockName,\n\t\tparentWidth,\n\t} );\n\n\tconst shouldShowBlockInsertionPointAfter =\n\t\t! shouldShowInnerBlockAppender() && shouldShowInsertionPointAfter;\n\n\treturn (\n\t\t<View style={ wrapperStyles }>\n\t\t\t{ shouldShowInsertionPointBefore && (\n\t\t\t\t<BlockInsertionPoint\n\t\t\t\t\ttestID={ `block-insertion-point-before-row-${ index + 1 }` }\n\t\t\t\t/>\n\t\t\t) }\n\t\t\t<Block\n\t\t\t\tblockWidth={ blockWidth }\n\t\t\t\tclientId={ clientId }\n\t\t\t\tcontentStyle={ contentStyle }\n\t\t\t\tisStackedHorizontally={ isStackedHorizontally }\n\t\t\t\tmarginHorizontal={ margin }\n\t\t\t\tmarginVertical={ marginVertical }\n\t\t\t\tonAddBlock={ onAddBlock }\n\t\t\t\tparentBlockAlignment={ parentBlockAlignment }\n\t\t\t\tonDeleteBlock={ onDeleteBlock }\n\t\t\t\tparentWidth={ parentWidth }\n\t\t\t\trootClientId={ rootClientId }\n\t\t\t/>\n\t\t\t{ shouldShowBlockInsertionPointAfter && (\n\t\t\t\t<BlockInsertionPoint\n\t\t\t\t\ttestID={ `block-insertion-point-after-row-${ index + 1 }` }\n\t\t\t\t/>\n\t\t\t) }\n\t\t</View>\n\t);\n}\n\n/**\n * BlockListItem component. Renders a block list item either as a grid item or as a standalone item.\n *\n * @param {Object}   props                              Component properties.\n * @param {boolean}  props.isGridItem                   Whether the block is a grid item.\n * @param {number}   props.numOfColumns                 The number of columns for grid layout.\n * @param {number}   props.parentWidth                  The width of the parent block.\n * @param {number}   props.tileCount                    The total number of tiles in the grid.\n * @param {number}   props.tileIndex                    The index of the current tile in the grid.\n * @param {number}   props.blockWidth                   The width of the block.\n * @param {string}   props.clientId                     The block client ID.\n * @param {string}   props.contentResizeMode            The content resize mode, e.g \"stretch\".\n * @param {Object}   props.contentStyle                 Styles for the block content\n * @param {Object}   props.index                        Block item index\n * @param {boolean}  props.isStackedHorizontally        Whether the block is stacked horizontally.\n * @param {number}   props.marginHorizontal             The horizontal margin.\n * @param {number}   props.marginVertical               The vertical margin.\n * @param {Function} props.onAddBlock                   On add block callback.\n * @param {Function} props.onDeleteBlock                On delete block callback.\n * @param {string}   props.rootClientId                 The root client ID.\n * @param {Function} props.shouldShowInnerBlockAppender Whether to show the inner block appender.\n *\n * @return {Component|null} The rendered block list item or null if the block width is not provided.\n */\nfunction BlockListItem( props ) {\n\tconst { isGridItem, numOfColumns, tileCount, tileIndex, ...restProps } =\n\t\tprops;\n\n\tif ( ! props?.blockWidth ) {\n\t\treturn null;\n\t}\n\n\tif ( isGridItem ) {\n\t\treturn (\n\t\t\t<Grid\n\t\t\t\tmaxWidth={ props?.parentWidth }\n\t\t\t\tnumOfColumns={ numOfColumns }\n\t\t\t\ttileCount={ tileCount }\n\t\t\t\tindex={ tileIndex }\n\t\t\t>\n\t\t\t\t<BlockListItemContent { ...restProps } />\n\t\t\t</Grid>\n\t\t);\n\t}\n\n\treturn <BlockListItemContent { ...restProps } />;\n}\n\nexport default BlockListItem;\n"],"mappings":"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"}