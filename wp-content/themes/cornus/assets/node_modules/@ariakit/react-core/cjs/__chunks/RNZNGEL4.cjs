"use strict";Object.defineProperty(exports, "__esModule", {value: true}); function _interopRequireWildcard(obj) { if (obj && obj.__esModule) { return obj; } else { var newObj = {}; if (obj != null) { for (var key in obj) { if (Object.prototype.hasOwnProperty.call(obj, key)) { newObj[key] = obj[key]; } } } newObj.default = obj; return newObj; } }"use client";


var _EO6LS72Hcjs = require('./EO6LS72H.cjs');



var _CJDHQUBRcjs = require('./CJDHQUBR.cjs');




var _AV6KTKLEcjs = require('./AV6KTKLE.cjs');

// src/utils/system.tsx
var _react = require('react'); var React = _interopRequireWildcard(_react);
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
function isRenderProp(children) {
  return typeof children === "function";
}
function forwardRef2(render) {
  const Role = React.forwardRef((props, ref) => render(_AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props), { ref })));
  Role.displayName = render.displayName || render.name;
  return Role;
}
function memo2(Component, propsAreEqual) {
  const Role = React.memo(Component, propsAreEqual);
  Role.displayName = Component.displayName || Component.name;
  return Role;
}
function createComponent(render) {
  const Role = (props, ref) => render(_AV6KTKLEcjs.__spreadValues.call(void 0, { ref }, props));
  return React.forwardRef(Role);
}
function createMemoComponent(render) {
  const Role = createComponent(render);
  return React.memo(Role);
}
function createElement(Type, props) {
  const _a = props, { as: As, wrapElement, render } = _a, rest = _AV6KTKLEcjs.__objRest.call(void 0, _a, ["as", "wrapElement", "render"]);
  let element;
  const mergedRef = _EO6LS72Hcjs.useMergeRefs.call(void 0, props.ref, _CJDHQUBRcjs.getRefProperty.call(void 0, render));
  if (process.env.NODE_ENV !== "production") {
    React.useEffect(() => {
      if (!As)
        return;
      console.warn(
        "The `as` prop is deprecated. Use the `render` prop instead.",
        "See https://ariakit.org/guide/composition"
      );
    }, [As]);
  }
  if (As && typeof As !== "string") {
    element = /* @__PURE__ */ _jsxruntime.jsx.call(void 0, As, _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, rest), { render }));
  } else if (React.isValidElement(render)) {
    const renderProps = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, render.props), { ref: mergedRef });
    element = React.cloneElement(render, _CJDHQUBRcjs.mergeProps.call(void 0, rest, renderProps));
  } else if (render) {
    element = render(rest);
  } else if (isRenderProp(props.children)) {
    if (process.env.NODE_ENV !== "production") {
      React.useEffect(() => {
        console.warn(
          "The `children` prop as a function is deprecated. Use the `render` prop instead.",
          "See https://ariakit.org/guide/composition"
        );
      }, []);
    }
    const _b = rest, { children } = _b, otherProps = _AV6KTKLEcjs.__objRest.call(void 0, _b, ["children"]);
    element = props.children(otherProps);
  } else if (As) {
    element = /* @__PURE__ */ _jsxruntime.jsx.call(void 0, As, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, rest));
  } else {
    element = /* @__PURE__ */ _jsxruntime.jsx.call(void 0, Type, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, rest));
  }
  if (wrapElement) {
    return wrapElement(element);
  }
  return element;
}
function createHook(useProps) {
  const useRole = (props = {}) => {
    const htmlProps = useProps(props);
    const copy = {};
    for (const prop in htmlProps) {
      if (_misc.hasOwnProperty.call(void 0, htmlProps, prop) && htmlProps[prop] !== void 0) {
        copy[prop] = htmlProps[prop];
      }
    }
    return copy;
  };
  return useRole;
}
function createStoreContext(providers = [], scopedProviders = []) {
  const context = React.createContext(void 0);
  const scopedContext = React.createContext(void 0);
  const useContext2 = () => React.useContext(context);
  const useScopedContext = (onlyScoped = false) => {
    const scoped = React.useContext(scopedContext);
    const store = useContext2();
    if (onlyScoped)
      return scoped;
    return scoped || store;
  };
  const useProviderContext = () => {
    const scoped = React.useContext(scopedContext);
    const store = useContext2();
    if (scoped && scoped === store)
      return;
    return store;
  };
  const ContextProvider = (props) => {
    return providers.reduceRight(
      (children, Provider) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, Provider, _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props), { children })),
      /* @__PURE__ */ _jsxruntime.jsx.call(void 0, context.Provider, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props))
    );
  };
  const ScopedContextProvider = (props) => {
    return /* @__PURE__ */ _jsxruntime.jsx.call(void 0, ContextProvider, _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props), { children: scopedProviders.reduceRight(
      (children, Provider) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, Provider, _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props), { children })),
      /* @__PURE__ */ _jsxruntime.jsx.call(void 0, scopedContext.Provider, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props))
    ) }));
  };
  return {
    context,
    scopedContext,
    useContext: useContext2,
    useScopedContext,
    useProviderContext,
    ContextProvider,
    ScopedContextProvider
  };
}









exports.forwardRef = forwardRef2; exports.memo = memo2; exports.createComponent = createComponent; exports.createMemoComponent = createMemoComponent; exports.createElement = createElement; exports.createHook = createHook; exports.createStoreContext = createStoreContext;
