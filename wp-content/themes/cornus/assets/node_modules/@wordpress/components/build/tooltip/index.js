"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.Tooltip = exports.TOOLTIP_DELAY = void 0;
var _react = require("react");
var Ariakit = _interopRequireWildcard(require("@ariakit/react"));
var _compose = require("@wordpress/compose");
var _element = require("@wordpress/element");
var _deprecated = _interopRequireDefault(require("@wordpress/deprecated"));
var _shortcut = _interopRequireDefault(require("../shortcut"));
var _utils = require("../popover/utils");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * External dependencies
 */
// eslint-disable-next-line no-restricted-imports

/**
 * WordPress dependencies
 */

const TooltipInternalContext = (0, _element.createContext)({
  isNestedInTooltip: false
});

/**
 * Time over anchor to wait before showing tooltip
 */
const TOOLTIP_DELAY = exports.TOOLTIP_DELAY = 700;
const CONTEXT_VALUE = {
  isNestedInTooltip: true
};
function UnforwardedTooltip(props, ref) {
  const {
    children,
    delay = TOOLTIP_DELAY,
    hideOnClick = true,
    placement,
    position,
    shortcut,
    text,
    ...restProps
  } = props;
  const {
    isNestedInTooltip
  } = (0, _element.useContext)(TooltipInternalContext);
  const baseId = (0, _compose.useInstanceId)(Tooltip, 'tooltip');
  const describedById = text || shortcut ? baseId : undefined;
  const isOnlyChild = _element.Children.count(children) === 1;
  // console error if more than one child element is added
  if (!isOnlyChild) {
    if ('development' === process.env.NODE_ENV) {
      // eslint-disable-next-line no-console
      console.error('wp-components.Tooltip should be called with only a single child element.');
    }
  }

  // Compute tooltip's placement:
  // - give priority to `placement` prop, if defined
  // - otherwise, compute it from the legacy `position` prop (if defined)
  // - finally, fallback to the default placement: 'bottom'
  let computedPlacement;
  if (placement !== undefined) {
    computedPlacement = placement;
  } else if (position !== undefined) {
    computedPlacement = (0, _utils.positionToPlacement)(position);
    (0, _deprecated.default)('`position` prop in wp.components.tooltip', {
      since: '6.4',
      alternative: '`placement` prop'
    });
  }
  computedPlacement = computedPlacement || 'bottom';

  // Removing the `Ariakit` namespace from the hook name allows ESLint to
  // properly identify the hook, and apply the correct linting rules.
  const useAriakitTooltipStore = Ariakit.useTooltipStore;
  const tooltipStore = useAriakitTooltipStore({
    placement: computedPlacement,
    showTimeout: delay
  });
  if (isNestedInTooltip) {
    return isOnlyChild ? (0, _react.createElement)(Ariakit.Role, {
      ...restProps,
      render: children
    }) : children;
  }
  return (0, _react.createElement)(TooltipInternalContext.Provider, {
    value: CONTEXT_VALUE
  }, (0, _react.createElement)(Ariakit.TooltipAnchor, {
    onClick: hideOnClick ? tooltipStore.hide : undefined,
    store: tooltipStore,
    render: isOnlyChild ? children : undefined,
    ref: ref
  }, isOnlyChild ? undefined : children), isOnlyChild && (text || shortcut) && (0, _react.createElement)(Ariakit.Tooltip, {
    ...restProps,
    className: "components-tooltip",
    unmountOnHide: true,
    gutter: 4,
    id: describedById,
    overflowPadding: 0.5,
    store: tooltipStore
  }, text, shortcut && (0, _react.createElement)(_shortcut.default, {
    className: text ? 'components-tooltip__shortcut' : '',
    shortcut: shortcut
  })));
}
const Tooltip = exports.Tooltip = (0, _element.forwardRef)(UnforwardedTooltip);
var _default = exports.default = Tooltip;
//# sourceMappingURL=index.js.map