"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = void 0;
var _react = require("react");
var _i18n = require("@wordpress/i18n");
var _element = require("@wordpress/element");
var _compose = require("@wordpress/compose");
var _icons = require("@wordpress/icons");
var _components = require("@wordpress/components");
var _blockPreview = _interopRequireDefault(require("../block-preview"));
var _useTransformedPatterns = _interopRequireDefault(require("./use-transformed-patterns"));
var _lockUnlock = require("../../lock-unlock");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const {
  CompositeV2: Composite,
  CompositeItemV2: CompositeItem,
  useCompositeStoreV2: useCompositeStore
} = (0, _lockUnlock.unlock)(_components.privateApis);
function PatternTransformationsMenu({
  blocks,
  patterns: statePatterns,
  onSelect
}) {
  const [showTransforms, setShowTransforms] = (0, _element.useState)(false);
  const patterns = (0, _useTransformedPatterns.default)(statePatterns, blocks);
  if (!patterns.length) return null;
  return (0, _react.createElement)(_components.MenuGroup, {
    className: "block-editor-block-switcher__pattern__transforms__menugroup"
  }, showTransforms && (0, _react.createElement)(PreviewPatternsPopover, {
    patterns: patterns,
    onSelect: onSelect
  }), (0, _react.createElement)(_components.MenuItem, {
    onClick: event => {
      event.preventDefault();
      setShowTransforms(!showTransforms);
    },
    icon: _icons.chevronRight
  }, (0, _i18n.__)('Patterns')));
}
function PreviewPatternsPopover({
  patterns,
  onSelect
}) {
  return (0, _react.createElement)("div", {
    className: "block-editor-block-switcher__popover__preview__parent"
  }, (0, _react.createElement)("div", {
    className: "block-editor-block-switcher__popover__preview__container"
  }, (0, _react.createElement)(_components.Popover, {
    className: "block-editor-block-switcher__preview__popover",
    position: "bottom right"
  }, (0, _react.createElement)("div", {
    className: "block-editor-block-switcher__preview is-pattern-list-preview"
  }, (0, _react.createElement)(BlockPatternsList, {
    patterns: patterns,
    onSelect: onSelect
  })))));
}
function BlockPatternsList({
  patterns,
  onSelect
}) {
  const composite = useCompositeStore();
  return (0, _react.createElement)(Composite, {
    store: composite,
    role: "listbox",
    className: "block-editor-block-switcher__preview-patterns-container",
    "aria-label": (0, _i18n.__)('Patterns list')
  }, patterns.map(pattern => (0, _react.createElement)(BlockPattern, {
    key: pattern.name,
    pattern: pattern,
    onSelect: onSelect
  })));
}
function BlockPattern({
  pattern,
  onSelect
}) {
  // TODO check pattern/preview width...
  const baseClassName = 'block-editor-block-switcher__preview-patterns-container';
  const descriptionId = (0, _compose.useInstanceId)(BlockPattern, `${baseClassName}-list__item-description`);
  return (0, _react.createElement)("div", {
    className: `${baseClassName}-list__list-item`
  }, (0, _react.createElement)(CompositeItem, {
    render: (0, _react.createElement)("div", {
      role: "option",
      "aria-label": pattern.title,
      "aria-describedby": pattern.description ? descriptionId : undefined,
      className: `${baseClassName}-list__item`
    }),
    onClick: () => onSelect(pattern.transformedBlocks)
  }, (0, _react.createElement)(_blockPreview.default, {
    blocks: pattern.transformedBlocks,
    viewportWidth: pattern.viewportWidth || 500
  }), (0, _react.createElement)("div", {
    className: `${baseClassName}-list__item-title`
  }, pattern.title)), !!pattern.description && (0, _react.createElement)(_components.VisuallyHidden, {
    id: descriptionId
  }, pattern.description));
}
var _default = exports.default = PatternTransformationsMenu;
//# sourceMappingURL=pattern-transformations-menu.js.map