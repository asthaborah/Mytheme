{"version":3,"names":["Dimensions","FlatList","SectionList","StyleSheet","Text","TouchableWithoutFeedback","View","useState","useEffect","BottomSheet","Gradient","usePreferredColorScheme","usePreferredColorSchemeStyle","styles","InserterButton","MIN_COL_NUM","BlockTypesList","name","sections","onSelect","label","listProps","initialNumToRender","numberOfColumns","setNumberOfColumns","itemWidth","setItemWidth","maxWidth","setMaxWidth","dimensionsChangeSubscription","addEventListener","onLayout","remove","calculateItemWidth","paddingLeft","itemPaddingLeft","paddingRight","itemPaddingRight","Styles","modalItem","width","modalIconWrapper","columnStyle","sumLeftRightPadding","bottomSheetWidth","getWidth","containerTotalWidth","itemTotalWidth","columnsFitToWidth","Math","floor","numColumns","max","updatedItemWidth","contentContainerStyle","flatten","renderSection","item","createElement","accessible","data","list","key","ItemSeparatorComponent","style","scrollEnabled","renderItem","renderListItem","colorScheme","sectionHeaderGradientValue","sectionHeaderTitleStyles","renderSectionHeader","section","metadata","icon","title","gradientValue","testID","accessibilityLabel","keyboardShouldPersistTaps","paddingBottom","safeAreaBottomInset"],"sources":["@wordpress/block-editor/src/components/block-types-list/index.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport {\n\tDimensions,\n\tFlatList,\n\tSectionList,\n\tStyleSheet,\n\tText,\n\tTouchableWithoutFeedback,\n\tView,\n} from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { useState, useEffect } from '@wordpress/element';\nimport { BottomSheet, Gradient } from '@wordpress/components';\nimport {\n\tusePreferredColorScheme,\n\tusePreferredColorSchemeStyle,\n} from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport styles from './style.scss';\nimport InserterButton from '../inserter-button';\n\nconst MIN_COL_NUM = 3;\n\nexport default function BlockTypesList( {\n\tname,\n\tsections,\n\tonSelect,\n\tlabel,\n\tlistProps,\n\tinitialNumToRender = 3,\n} ) {\n\tconst [ numberOfColumns, setNumberOfColumns ] = useState( MIN_COL_NUM );\n\tconst [ itemWidth, setItemWidth ] = useState();\n\tconst [ maxWidth, setMaxWidth ] = useState();\n\n\tuseEffect( () => {\n\t\tconst dimensionsChangeSubscription = Dimensions.addEventListener(\n\t\t\t'change',\n\t\t\tonLayout\n\t\t);\n\t\tonLayout();\n\t\treturn () => {\n\t\t\tdimensionsChangeSubscription.remove();\n\t\t};\n\t}, [] );\n\n\tfunction calculateItemWidth() {\n\t\tconst { paddingLeft: itemPaddingLeft, paddingRight: itemPaddingRight } =\n\t\t\tInserterButton.Styles.modalItem;\n\t\tconst { width } = InserterButton.Styles.modalIconWrapper;\n\t\treturn width + itemPaddingLeft + itemPaddingRight;\n\t}\n\n\tfunction onLayout() {\n\t\tconst columnStyle = styles[ 'block-types-list__column' ];\n\t\tconst sumLeftRightPadding =\n\t\t\tcolumnStyle.paddingLeft + columnStyle.paddingRight;\n\n\t\tconst bottomSheetWidth = BottomSheet.getWidth();\n\t\tconst containerTotalWidth = bottomSheetWidth - sumLeftRightPadding;\n\t\tconst itemTotalWidth = calculateItemWidth();\n\n\t\tconst columnsFitToWidth = Math.floor(\n\t\t\tcontainerTotalWidth / itemTotalWidth\n\t\t);\n\n\t\tconst numColumns = Math.max( MIN_COL_NUM, columnsFitToWidth );\n\n\t\tsetNumberOfColumns( numColumns );\n\t\tsetMaxWidth( containerTotalWidth / numColumns );\n\n\t\tif ( columnsFitToWidth < MIN_COL_NUM ) {\n\t\t\tconst updatedItemWidth =\n\t\t\t\t( bottomSheetWidth - 2 * sumLeftRightPadding ) / MIN_COL_NUM;\n\t\t\tsetItemWidth( updatedItemWidth );\n\t\t}\n\t}\n\n\tconst contentContainerStyle = StyleSheet.flatten(\n\t\tlistProps.contentContainerStyle\n\t);\n\n\tconst renderSection = ( { item } ) => {\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback accessible={ false }>\n\t\t\t\t<FlatList\n\t\t\t\t\tdata={ item.list }\n\t\t\t\t\tkey={ `InserterUI-${ name }-${ numberOfColumns }` } // Re-render when numberOfColumns changes.\n\t\t\t\t\tnumColumns={ numberOfColumns }\n\t\t\t\t\tItemSeparatorComponent={ () => (\n\t\t\t\t\t\t<TouchableWithoutFeedback accessible={ false }>\n\t\t\t\t\t\t\t<View\n\t\t\t\t\t\t\t\tstyle={\n\t\t\t\t\t\t\t\t\tstyles[ 'block-types-list__row-separator' ]\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</TouchableWithoutFeedback>\n\t\t\t\t\t) }\n\t\t\t\t\tscrollEnabled={ false }\n\t\t\t\t\trenderItem={ renderListItem }\n\t\t\t\t/>\n\t\t\t</TouchableWithoutFeedback>\n\t\t);\n\t};\n\n\tconst renderListItem = ( { item } ) => {\n\t\treturn (\n\t\t\t<InserterButton\n\t\t\t\titem={ item }\n\t\t\t\titemWidth={ itemWidth }\n\t\t\t\tmaxWidth={ maxWidth }\n\t\t\t\tonSelect={ onSelect }\n\t\t\t/>\n\t\t);\n\t};\n\n\tconst colorScheme = usePreferredColorScheme();\n\tconst sectionHeaderGradientValue =\n\t\tcolorScheme === 'light'\n\t\t\t? 'linear-gradient(#fff 70%, rgba(255, 255, 255, 0))'\n\t\t\t: 'linear-gradient(#2e2e2e 70%, rgba(46, 46, 46, 0))';\n\tconst sectionHeaderTitleStyles = usePreferredColorSchemeStyle(\n\t\tstyles[ 'block-types-list__section-header-title' ],\n\t\tstyles[ 'block-types-list__section-header-title--dark' ]\n\t);\n\n\tconst renderSectionHeader = ( { section: { metadata } } ) => {\n\t\tif ( ! metadata?.icon || ! metadata?.title ) {\n\t\t\treturn null;\n\t\t}\n\n\t\treturn (\n\t\t\t<TouchableWithoutFeedback accessible={ false }>\n\t\t\t\t<Gradient\n\t\t\t\t\tgradientValue={ sectionHeaderGradientValue }\n\t\t\t\t\tstyle={ styles[ 'block-types-list__section-header' ] }\n\t\t\t\t>\n\t\t\t\t\t{ metadata?.icon }\n\t\t\t\t\t<Text style={ sectionHeaderTitleStyles }>\n\t\t\t\t\t\t{ metadata?.title }\n\t\t\t\t\t</Text>\n\t\t\t\t</Gradient>\n\t\t\t</TouchableWithoutFeedback>\n\t\t);\n\t};\n\n\treturn (\n\t\t<SectionList\n\t\t\tonLayout={ onLayout }\n\t\t\ttestID={ `InserterUI-${ name }` }\n\t\t\taccessibilityLabel={ label }\n\t\t\tkeyboardShouldPersistTaps=\"always\"\n\t\t\tsections={ sections }\n\t\t\tinitialNumToRender={ initialNumToRender }\n\t\t\trenderItem={ renderSection }\n\t\t\trenderSectionHeader={ renderSectionHeader }\n\t\t\t{ ...listProps }\n\t\t\tcontentContainerStyle={ {\n\t\t\t\t...contentContainerStyle,\n\t\t\t\tpaddingBottom: Math.max(\n\t\t\t\t\tlistProps.safeAreaBottomInset,\n\t\t\t\t\tcontentContainerStyle.paddingBottom\n\t\t\t\t),\n\t\t\t} }\n\t\t/>\n\t);\n}\n"],"mappings":"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"}