{"version":3,"names":["_classnames","_interopRequireDefault","require","_element","_i18n","_icons","_compose","_deprecated","_numberControlStyles","inputControlActionTypes","_interopRequireWildcard","_math","_values","_hStack","_spacer","_utils","_useDeprecatedProps","_getRequireWildcardCache","e","WeakMap","r","t","__esModule","default","has","get","n","__proto__","a","Object","defineProperty","getOwnPropertyDescriptor","u","prototype","hasOwnProperty","call","i","set","noop","UnforwardedNumberControl","props","forwardedRef","__unstableStateReducer","stateReducerProp","className","dragDirection","hideHTMLArrows","spinControls","isDragEnabled","isShiftStepEnabled","label","max","Infinity","min","required","shiftStep","step","spinFactor","type","typeProp","value","valueProp","size","suffix","onChange","restProps","useDeprecated36pxDefaultSizeProp","deprecated","alternative","since","version","inputRef","useRef","mergedRef","useMergeRefs","isStepAny","baseStep","ensureNumber","baseSpin","baseValue","roundClamp","constrainValue","stepOverride","Math","autoComplete","undefined","classes","classNames","cx","useCx","spinButtonClasses","styles","smallSpinButtons","spinValue","direction","event","preventDefault","shift","shiftKey","delta","nextValue","isValueEmpty","add","subtract","numberControlStateReducer","state","action","nextState","payload","currentValue","PRESS_UP","PRESS_DOWN","DRAG","x","y","enableShift","modifier","directionModifier","isRTL","ceil","abs","sign","distance","PRESS_ENTER","COMMIT","applyEmptyValue","buildSpinButtonClickHandler","String","target","current","_react","createElement","Input","inputMode","ref","_stateReducerProp","baseState","Fragment","Spacer","marginBottom","marginRight","HStack","spacing","SpinButton","icon","plusIcon","__","onClick","resetIcon","NumberControl","exports","forwardRef","_default"],"sources":["@wordpress/components/src/number-control/index.tsx"],"sourcesContent":["/**\n * External dependencies\n */\nimport classNames from 'classnames';\nimport type { ForwardedRef, KeyboardEvent, MouseEvent } from 'react';\n\n/**\n * WordPress dependencies\n */\nimport { useRef, forwardRef } from '@wordpress/element';\nimport { isRTL, __ } from '@wordpress/i18n';\nimport { plus as plusIcon, reset as resetIcon } from '@wordpress/icons';\nimport { useMergeRefs } from '@wordpress/compose';\nimport deprecated from '@wordpress/deprecated';\n\n/**\n * Internal dependencies\n */\nimport { Input, SpinButton, styles } from './styles/number-control-styles';\nimport * as inputControlActionTypes from '../input-control/reducer/actions';\nimport { add, subtract, roundClamp } from '../utils/math';\nimport { ensureNumber, isValueEmpty } from '../utils/values';\nimport type { WordPressComponentProps } from '../context/wordpress-component';\nimport type { NumberControlProps } from './types';\nimport { HStack } from '../h-stack';\nimport { Spacer } from '../spacer';\nimport { useCx } from '../utils';\nimport { useDeprecated36pxDefaultSizeProp } from '../utils/use-deprecated-props';\n\nconst noop = () => {};\n\nfunction UnforwardedNumberControl(\n\tprops: WordPressComponentProps< NumberControlProps, 'input', false >,\n\tforwardedRef: ForwardedRef< any >\n) {\n\tconst {\n\t\t__unstableStateReducer: stateReducerProp,\n\t\tclassName,\n\t\tdragDirection = 'n',\n\t\thideHTMLArrows = false,\n\t\tspinControls = hideHTMLArrows ? 'none' : 'native',\n\t\tisDragEnabled = true,\n\t\tisShiftStepEnabled = true,\n\t\tlabel,\n\t\tmax = Infinity,\n\t\tmin = -Infinity,\n\t\trequired = false,\n\t\tshiftStep = 10,\n\t\tstep = 1,\n\t\tspinFactor = 1,\n\t\ttype: typeProp = 'number',\n\t\tvalue: valueProp,\n\t\tsize = 'default',\n\t\tsuffix,\n\t\tonChange = noop,\n\t\t...restProps\n\t} = useDeprecated36pxDefaultSizeProp< NumberControlProps >( props );\n\n\tif ( hideHTMLArrows ) {\n\t\tdeprecated( 'wp.components.NumberControl hideHTMLArrows prop ', {\n\t\t\talternative: 'spinControls=\"none\"',\n\t\t\tsince: '6.2',\n\t\t\tversion: '6.3',\n\t\t} );\n\t}\n\tconst inputRef = useRef< HTMLInputElement >();\n\tconst mergedRef = useMergeRefs( [ inputRef, forwardedRef ] );\n\n\tconst isStepAny = step === 'any';\n\tconst baseStep = isStepAny ? 1 : ensureNumber( step );\n\tconst baseSpin = ensureNumber( spinFactor ) * baseStep;\n\tconst baseValue = roundClamp( 0, min, max, baseStep );\n\tconst constrainValue = (\n\t\tvalue: number | string,\n\t\tstepOverride?: number\n\t) => {\n\t\t// When step is \"any\" clamp the value, otherwise round and clamp it.\n\t\t// Use '' + to convert to string for use in input value attribute.\n\t\treturn isStepAny\n\t\t\t? '' + Math.min( max, Math.max( min, ensureNumber( value ) ) )\n\t\t\t: '' + roundClamp( value, min, max, stepOverride ?? baseStep );\n\t};\n\n\tconst autoComplete = typeProp === 'number' ? 'off' : undefined;\n\tconst classes = classNames( 'components-number-control', className );\n\tconst cx = useCx();\n\tconst spinButtonClasses = cx( size === 'small' && styles.smallSpinButtons );\n\n\tconst spinValue = (\n\t\tvalue: string | number | undefined,\n\t\tdirection: 'up' | 'down',\n\t\tevent: KeyboardEvent | MouseEvent | undefined\n\t) => {\n\t\tevent?.preventDefault();\n\t\tconst shift = event?.shiftKey && isShiftStepEnabled;\n\t\tconst delta = shift ? ensureNumber( shiftStep ) * baseSpin : baseSpin;\n\t\tlet nextValue = isValueEmpty( value ) ? baseValue : value;\n\t\tif ( direction === 'up' ) {\n\t\t\tnextValue = add( nextValue, delta );\n\t\t} else if ( direction === 'down' ) {\n\t\t\tnextValue = subtract( nextValue, delta );\n\t\t}\n\t\treturn constrainValue( nextValue, shift ? delta : undefined );\n\t};\n\n\t/**\n\t * \"Middleware\" function that intercepts updates from InputControl.\n\t * This allows us to tap into actions to transform the (next) state for\n\t * InputControl.\n\t *\n\t * @return The updated state to apply to InputControl\n\t */\n\tconst numberControlStateReducer: NumberControlProps[ '__unstableStateReducer' ] =\n\t\t( state, action ) => {\n\t\t\tconst nextState = { ...state };\n\n\t\t\tconst { type, payload } = action;\n\t\t\tconst event = payload.event;\n\t\t\tconst currentValue = nextState.value;\n\n\t\t\t/**\n\t\t\t * Handles custom UP and DOWN Keyboard events\n\t\t\t */\n\t\t\tif (\n\t\t\t\ttype === inputControlActionTypes.PRESS_UP ||\n\t\t\t\ttype === inputControlActionTypes.PRESS_DOWN\n\t\t\t) {\n\t\t\t\tnextState.value = spinValue(\n\t\t\t\t\tcurrentValue,\n\t\t\t\t\ttype === inputControlActionTypes.PRESS_UP ? 'up' : 'down',\n\t\t\t\t\tevent as KeyboardEvent | undefined\n\t\t\t\t);\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles drag to update events\n\t\t\t */\n\t\t\tif ( type === inputControlActionTypes.DRAG && isDragEnabled ) {\n\t\t\t\tconst [ x, y ] = payload.delta;\n\t\t\t\tconst enableShift = payload.shiftKey && isShiftStepEnabled;\n\t\t\t\tconst modifier = enableShift\n\t\t\t\t\t? ensureNumber( shiftStep ) * baseSpin\n\t\t\t\t\t: baseSpin;\n\n\t\t\t\tlet directionModifier;\n\t\t\t\tlet delta;\n\n\t\t\t\tswitch ( dragDirection ) {\n\t\t\t\t\tcase 'n':\n\t\t\t\t\t\tdelta = y;\n\t\t\t\t\t\tdirectionModifier = -1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'e':\n\t\t\t\t\t\tdelta = x;\n\t\t\t\t\t\tdirectionModifier = isRTL() ? -1 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 's':\n\t\t\t\t\t\tdelta = y;\n\t\t\t\t\t\tdirectionModifier = 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'w':\n\t\t\t\t\t\tdelta = x;\n\t\t\t\t\t\tdirectionModifier = isRTL() ? 1 : -1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif ( delta !== 0 ) {\n\t\t\t\t\tdelta = Math.ceil( Math.abs( delta ) ) * Math.sign( delta );\n\t\t\t\t\tconst distance = delta * modifier * directionModifier;\n\n\t\t\t\t\tnextState.value = constrainValue(\n\t\t\t\t\t\t// @ts-expect-error TODO: Investigate if it's ok for currentValue to be undefined\n\t\t\t\t\t\tadd( currentValue, distance ),\n\t\t\t\t\t\tenableShift ? modifier : undefined\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles commit (ENTER key press or blur)\n\t\t\t */\n\t\t\tif (\n\t\t\t\ttype === inputControlActionTypes.PRESS_ENTER ||\n\t\t\t\ttype === inputControlActionTypes.COMMIT\n\t\t\t) {\n\t\t\t\tconst applyEmptyValue =\n\t\t\t\t\trequired === false && currentValue === '';\n\n\t\t\t\tnextState.value = applyEmptyValue\n\t\t\t\t\t? currentValue\n\t\t\t\t\t: // @ts-expect-error TODO: Investigate if it's ok for currentValue to be undefined\n\t\t\t\t\t  constrainValue( currentValue );\n\t\t\t}\n\n\t\t\treturn nextState;\n\t\t};\n\n\tconst buildSpinButtonClickHandler =\n\t\t( direction: 'up' | 'down' ) =>\n\t\t( event: MouseEvent< HTMLButtonElement > ) =>\n\t\t\tonChange( String( spinValue( valueProp, direction, event ) ), {\n\t\t\t\t// Set event.target to the <input> so that consumers can use\n\t\t\t\t// e.g. event.target.validity.\n\t\t\t\tevent: {\n\t\t\t\t\t...event,\n\t\t\t\t\ttarget: inputRef.current!,\n\t\t\t\t},\n\t\t\t} );\n\n\treturn (\n\t\t<Input\n\t\t\tautoComplete={ autoComplete }\n\t\t\tinputMode=\"numeric\"\n\t\t\t{ ...restProps }\n\t\t\tclassName={ classes }\n\t\t\tdragDirection={ dragDirection }\n\t\t\thideHTMLArrows={ spinControls !== 'native' }\n\t\t\tisDragEnabled={ isDragEnabled }\n\t\t\tlabel={ label }\n\t\t\tmax={ max }\n\t\t\tmin={ min }\n\t\t\tref={ mergedRef }\n\t\t\trequired={ required }\n\t\t\tstep={ step }\n\t\t\ttype={ typeProp }\n\t\t\t// @ts-expect-error TODO: Resolve discrepancy between `value` types in InputControl based components\n\t\t\tvalue={ valueProp }\n\t\t\t__unstableStateReducer={ ( state, action ) => {\n\t\t\t\tconst baseState = numberControlStateReducer( state, action );\n\t\t\t\treturn stateReducerProp?.( baseState, action ) ?? baseState;\n\t\t\t} }\n\t\t\tsize={ size }\n\t\t\tsuffix={\n\t\t\t\tspinControls === 'custom' ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t{ suffix }\n\t\t\t\t\t\t<Spacer marginBottom={ 0 } marginRight={ 2 }>\n\t\t\t\t\t\t\t<HStack spacing={ 1 }>\n\t\t\t\t\t\t\t\t<SpinButton\n\t\t\t\t\t\t\t\t\tclassName={ spinButtonClasses }\n\t\t\t\t\t\t\t\t\ticon={ plusIcon }\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Increment' ) }\n\t\t\t\t\t\t\t\t\tonClick={ buildSpinButtonClickHandler(\n\t\t\t\t\t\t\t\t\t\t'up'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<SpinButton\n\t\t\t\t\t\t\t\t\tclassName={ spinButtonClasses }\n\t\t\t\t\t\t\t\t\ticon={ resetIcon }\n\t\t\t\t\t\t\t\t\tsize=\"small\"\n\t\t\t\t\t\t\t\t\tlabel={ __( 'Decrement' ) }\n\t\t\t\t\t\t\t\t\tonClick={ buildSpinButtonClickHandler(\n\t\t\t\t\t\t\t\t\t\t'down'\n\t\t\t\t\t\t\t\t\t) }\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t</HStack>\n\t\t\t\t\t\t</Spacer>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\tsuffix\n\t\t\t\t)\n\t\t\t}\n\t\t\tonChange={ onChange }\n\t\t/>\n\t);\n}\n\nexport const NumberControl = forwardRef( UnforwardedNumberControl );\n\nexport default NumberControl;\n"],"mappings":"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"}