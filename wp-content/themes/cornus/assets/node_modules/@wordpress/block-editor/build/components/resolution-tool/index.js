"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = ResolutionTool;
var _react = require("react");
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
/**
 * WordPress dependencies
 */

const DEFAULT_SIZE_OPTIONS = [{
  label: (0, _i18n._x)('Thumbnail', 'Image size option for resolution control'),
  value: 'thumbnail'
}, {
  label: (0, _i18n._x)('Medium', 'Image size option for resolution control'),
  value: 'medium'
}, {
  label: (0, _i18n._x)('Large', 'Image size option for resolution control'),
  value: 'large'
}, {
  label: (0, _i18n._x)('Full Size', 'Image size option for resolution control'),
  value: 'full'
}];
function ResolutionTool({
  panelId,
  value,
  onChange,
  options = DEFAULT_SIZE_OPTIONS,
  defaultValue = DEFAULT_SIZE_OPTIONS[0].value,
  isShownByDefault = true
}) {
  const displayValue = value !== null && value !== void 0 ? value : defaultValue;
  return (0, _react.createElement)(_components.__experimentalToolsPanelItem, {
    hasValue: () => displayValue !== defaultValue,
    label: (0, _i18n.__)('Resolution'),
    onDeselect: () => onChange(defaultValue),
    isShownByDefault: isShownByDefault,
    panelId: panelId
  }, (0, _react.createElement)(_components.SelectControl, {
    label: (0, _i18n.__)('Resolution'),
    value: displayValue,
    options: options,
    onChange: onChange,
    help: (0, _i18n.__)('Select the size of the source image.'),
    size: '__unstable-large'
  }));
}
//# sourceMappingURL=index.js.map