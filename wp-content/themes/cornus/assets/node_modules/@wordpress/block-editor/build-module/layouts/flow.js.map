{"version":3,"names":["__","getBlockGapCSS","getAlignmentsInfo","getGapCSSValue","shouldSkipSerialization","LAYOUT_DEFINITIONS","name","label","inspectorControls","DefaultLayoutInspectorControls","toolBarControls","DefaultLayoutToolbarControls","getLayoutStyle","selector","style","blockName","hasBlockGapSupport","layoutDefinitions","blockGapStyleValue","spacing","blockGap","blockGapValue","top","output","getOrientation","getAlignments","layout","isBlockBasedTheme","alignmentInfo","alignments","undefined","includes","unshift","map","alignment","info","contentSize","wideSize","wide","none"],"sources":["@wordpress/block-editor/src/layouts/flow.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { __ } from '@wordpress/i18n';\n\n/**\n * Internal dependencies\n */\nimport { getBlockGapCSS, getAlignmentsInfo } from './utils';\nimport { getGapCSSValue } from '../hooks/gap';\nimport { shouldSkipSerialization } from '../hooks/utils';\nimport { LAYOUT_DEFINITIONS } from './definitions';\n\nexport default {\n\tname: 'default',\n\tlabel: __( 'Flow' ),\n\tinspectorControls: function DefaultLayoutInspectorControls() {\n\t\treturn null;\n\t},\n\ttoolBarControls: function DefaultLayoutToolbarControls() {\n\t\treturn null;\n\t},\n\tgetLayoutStyle: function getLayoutStyle( {\n\t\tselector,\n\t\tstyle,\n\t\tblockName,\n\t\thasBlockGapSupport,\n\t\tlayoutDefinitions = LAYOUT_DEFINITIONS,\n\t} ) {\n\t\tconst blockGapStyleValue = getGapCSSValue( style?.spacing?.blockGap );\n\n\t\t// If a block's block.json skips serialization for spacing or\n\t\t// spacing.blockGap, don't apply the user-defined value to the styles.\n\t\tlet blockGapValue = '';\n\t\tif ( ! shouldSkipSerialization( blockName, 'spacing', 'blockGap' ) ) {\n\t\t\t// If an object is provided only use the 'top' value for this kind of gap.\n\t\t\tif ( blockGapStyleValue?.top ) {\n\t\t\t\tblockGapValue = getGapCSSValue( blockGapStyleValue?.top );\n\t\t\t} else if ( typeof blockGapStyleValue === 'string' ) {\n\t\t\t\tblockGapValue = getGapCSSValue( blockGapStyleValue );\n\t\t\t}\n\t\t}\n\n\t\tlet output = '';\n\n\t\t// Output blockGap styles based on rules contained in layout definitions in theme.json.\n\t\tif ( hasBlockGapSupport && blockGapValue ) {\n\t\t\toutput += getBlockGapCSS(\n\t\t\t\tselector,\n\t\t\t\tlayoutDefinitions,\n\t\t\t\t'default',\n\t\t\t\tblockGapValue\n\t\t\t);\n\t\t}\n\t\treturn output;\n\t},\n\tgetOrientation() {\n\t\treturn 'vertical';\n\t},\n\tgetAlignments( layout, isBlockBasedTheme ) {\n\t\tconst alignmentInfo = getAlignmentsInfo( layout );\n\t\tif ( layout.alignments !== undefined ) {\n\t\t\tif ( ! layout.alignments.includes( 'none' ) ) {\n\t\t\t\tlayout.alignments.unshift( 'none' );\n\t\t\t}\n\t\t\treturn layout.alignments.map( ( alignment ) => ( {\n\t\t\t\tname: alignment,\n\t\t\t\tinfo: alignmentInfo[ alignment ],\n\t\t\t} ) );\n\t\t}\n\n\t\tconst alignments = [\n\t\t\t{ name: 'left' },\n\t\t\t{ name: 'center' },\n\t\t\t{ name: 'right' },\n\t\t];\n\n\t\t// This is for backwards compatibility with hybrid themes.\n\t\tif ( ! isBlockBasedTheme ) {\n\t\t\tconst { contentSize, wideSize } = layout;\n\t\t\tif ( contentSize ) {\n\t\t\t\talignments.unshift( { name: 'full' } );\n\t\t\t}\n\n\t\t\tif ( wideSize ) {\n\t\t\t\talignments.unshift( {\n\t\t\t\t\tname: 'wide',\n\t\t\t\t\tinfo: alignmentInfo.wide,\n\t\t\t\t} );\n\t\t\t}\n\t\t}\n\n\t\talignments.unshift( { name: 'none', info: alignmentInfo.none } );\n\n\t\treturn alignments;\n\t},\n};\n"],"mappings":"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"}