{"version":3,"names":["classnames","useSelect","forwardRef","ListViewBlockSelectButton","BlockDraggable","store","blockEditorStore","useListViewContext","ListViewBlockContents","onClick","onToggleExpanded","block","isSelected","position","siblingBlockCount","level","isExpanded","selectedClientIds","props","ref","clientId","blockMovingClientId","selectedBlockInBlockEditor","select","hasBlockMovingClientId","getSelectedBlockClientId","AdditionalBlockContent","insertedBlock","setInsertedBlock","isBlockMoveTarget","className","draggableClientIds","includes","createElement","Fragment","appendToOwnerDocument","clientIds","cloneClassname","draggable","onDragStart","onDragEnd"],"sources":["@wordpress/block-editor/src/components/list-view/block-contents.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport classnames from 'classnames';\n\n/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { forwardRef } from '@wordpress/element';\n\n/**\n * Internal dependencies\n */\nimport ListViewBlockSelectButton from './block-select-button';\nimport BlockDraggable from '../block-draggable';\nimport { store as blockEditorStore } from '../../store';\nimport { useListViewContext } from './context';\n\nconst ListViewBlockContents = forwardRef(\n\t(\n\t\t{\n\t\t\tonClick,\n\t\t\tonToggleExpanded,\n\t\t\tblock,\n\t\t\tisSelected,\n\t\t\tposition,\n\t\t\tsiblingBlockCount,\n\t\t\tlevel,\n\t\t\tisExpanded,\n\t\t\tselectedClientIds,\n\t\t\t...props\n\t\t},\n\t\tref\n\t) => {\n\t\tconst { clientId } = block;\n\n\t\tconst { blockMovingClientId, selectedBlockInBlockEditor } = useSelect(\n\t\t\t( select ) => {\n\t\t\t\tconst { hasBlockMovingClientId, getSelectedBlockClientId } =\n\t\t\t\t\tselect( blockEditorStore );\n\t\t\t\treturn {\n\t\t\t\t\tblockMovingClientId: hasBlockMovingClientId(),\n\t\t\t\t\tselectedBlockInBlockEditor: getSelectedBlockClientId(),\n\t\t\t\t};\n\t\t\t},\n\t\t\t[]\n\t\t);\n\n\t\tconst { AdditionalBlockContent, insertedBlock, setInsertedBlock } =\n\t\t\tuseListViewContext();\n\n\t\tconst isBlockMoveTarget =\n\t\t\tblockMovingClientId && selectedBlockInBlockEditor === clientId;\n\n\t\tconst className = classnames( 'block-editor-list-view-block-contents', {\n\t\t\t'is-dropping-before': isBlockMoveTarget,\n\t\t} );\n\n\t\t// Only include all selected blocks if the currently clicked on block\n\t\t// is one of the selected blocks. This ensures that if a user attempts\n\t\t// to drag a block that isn't part of the selection, they're still able\n\t\t// to drag it and rearrange its position.\n\t\tconst draggableClientIds = selectedClientIds.includes( clientId )\n\t\t\t? selectedClientIds\n\t\t\t: [ clientId ];\n\n\t\treturn (\n\t\t\t<>\n\t\t\t\t{ AdditionalBlockContent && (\n\t\t\t\t\t<AdditionalBlockContent\n\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\tinsertedBlock={ insertedBlock }\n\t\t\t\t\t\tsetInsertedBlock={ setInsertedBlock }\n\t\t\t\t\t/>\n\t\t\t\t) }\n\t\t\t\t<BlockDraggable\n\t\t\t\t\tappendToOwnerDocument\n\t\t\t\t\tclientIds={ draggableClientIds }\n\t\t\t\t\tcloneClassname={ 'block-editor-list-view-draggable-chip' }\n\t\t\t\t>\n\t\t\t\t\t{ ( { draggable, onDragStart, onDragEnd } ) => (\n\t\t\t\t\t\t<ListViewBlockSelectButton\n\t\t\t\t\t\t\tref={ ref }\n\t\t\t\t\t\t\tclassName={ className }\n\t\t\t\t\t\t\tblock={ block }\n\t\t\t\t\t\t\tonClick={ onClick }\n\t\t\t\t\t\t\tonToggleExpanded={ onToggleExpanded }\n\t\t\t\t\t\t\tisSelected={ isSelected }\n\t\t\t\t\t\t\tposition={ position }\n\t\t\t\t\t\t\tsiblingBlockCount={ siblingBlockCount }\n\t\t\t\t\t\t\tlevel={ level }\n\t\t\t\t\t\t\tdraggable={ draggable }\n\t\t\t\t\t\t\tonDragStart={ onDragStart }\n\t\t\t\t\t\t\tonDragEnd={ onDragEnd }\n\t\t\t\t\t\t\tisExpanded={ isExpanded }\n\t\t\t\t\t\t\t{ ...props }\n\t\t\t\t\t\t/>\n\t\t\t\t\t) }\n\t\t\t\t</BlockDraggable>\n\t\t\t</>\n\t\t);\n\t}\n);\n\nexport default ListViewBlockContents;\n"],"mappings":";AAAA;AACA;AACA;AACA,OAAOA,UAAU,MAAM,YAAY;;AAEnC;AACA;AACA;AACA,SAASC,SAAS,QAAQ,iBAAiB;AAC3C,SAASC,UAAU,QAAQ,oBAAoB;;AAE/C;AACA;AACA;AACA,OAAOC,yBAAyB,MAAM,uBAAuB;AAC7D,OAAOC,cAAc,MAAM,oBAAoB;AAC/C,SAASC,KAAK,IAAIC,gBAAgB,QAAQ,aAAa;AACvD,SAASC,kBAAkB,QAAQ,WAAW;AAE9C,MAAMC,qBAAqB,GAAGN,UAAU,CACvC,CACC;EACCO,OAAO;EACPC,gBAAgB;EAChBC,KAAK;EACLC,UAAU;EACVC,QAAQ;EACRC,iBAAiB;EACjBC,KAAK;EACLC,UAAU;EACVC,iBAAiB;EACjB,GAAGC;AACJ,CAAC,EACDC,GAAG,KACC;EACJ,MAAM;IAAEC;EAAS,CAAC,GAAGT,KAAK;EAE1B,MAAM;IAAEU,mBAAmB;IAAEC;EAA2B,CAAC,GAAGrB,SAAS,CAClEsB,MAAM,IAAM;IACb,MAAM;MAAEC,sBAAsB;MAAEC;IAAyB,CAAC,GACzDF,MAAM,CAAEjB,gBAAiB,CAAC;IAC3B,OAAO;MACNe,mBAAmB,EAAEG,sBAAsB,CAAC,CAAC;MAC7CF,0BAA0B,EAAEG,wBAAwB,CAAC;IACtD,CAAC;EACF,CAAC,EACD,EACD,CAAC;EAED,MAAM;IAAEC,sBAAsB;IAAEC,aAAa;IAAEC;EAAiB,CAAC,GAChErB,kBAAkB,CAAC,CAAC;EAErB,MAAMsB,iBAAiB,GACtBR,mBAAmB,IAAIC,0BAA0B,KAAKF,QAAQ;EAE/D,MAAMU,SAAS,GAAG9B,UAAU,CAAE,uCAAuC,EAAE;IACtE,oBAAoB,EAAE6B;EACvB,CAAE,CAAC;;EAEH;EACA;EACA;EACA;EACA,MAAME,kBAAkB,GAAGd,iBAAiB,CAACe,QAAQ,CAAEZ,QAAS,CAAC,GAC9DH,iBAAiB,GACjB,CAAEG,QAAQ,CAAE;EAEf,OACCa,aAAA,CAAAC,QAAA,QACGR,sBAAsB,IACvBO,aAAA,CAACP,sBAAsB;IACtBf,KAAK,EAAGA,KAAO;IACfgB,aAAa,EAAGA,aAAe;IAC/BC,gBAAgB,EAAGA;EAAkB,CACrC,CACD,EACDK,aAAA,CAAC7B,cAAc;IACd+B,qBAAqB;IACrBC,SAAS,EAAGL,kBAAoB;IAChCM,cAAc,EAAG;EAAyC,GAExD,CAAE;IAAEC,SAAS;IAAEC,WAAW;IAAEC;EAAU,CAAC,KACxCP,aAAA,CAAC9B,yBAAyB;IACzBgB,GAAG,EAAGA,GAAK;IACXW,SAAS,EAAGA,SAAW;IACvBnB,KAAK,EAAGA,KAAO;IACfF,OAAO,EAAGA,OAAS;IACnBC,gBAAgB,EAAGA,gBAAkB;IACrCE,UAAU,EAAGA,UAAY;IACzBC,QAAQ,EAAGA,QAAU;IACrBC,iBAAiB,EAAGA,iBAAmB;IACvCC,KAAK,EAAGA,KAAO;IACfuB,SAAS,EAAGA,SAAW;IACvBC,WAAW,EAAGA,WAAa;IAC3BC,SAAS,EAAGA,SAAW;IACvBxB,UAAU,EAAGA,UAAY;IAAA,GACpBE;EAAK,CACV,CAEa,CACf,CAAC;AAEL,CACD,CAAC;AAED,eAAeV,qBAAqB"}