{"version":3,"names":["useWindowDimensions","useMemo","ALIGNMENT_BREAKPOINTS","WIDE_ALIGNMENTS","alignmentHelpers","styles","ALIGNMENT_MAX_WIDTH","full","wide","wideMedium","wideLandscape","BLOCK_DEFAULT_MARGIN","getWideWidthStyles","align","isLandscape","width","alignments","large","maxWidth","small","medium","getFullWidthStyles","blockName","hasParents","parentBlockName","isContainerRelated","isFullWidth","fullWidthStyles","paddingHorizontal","getBlockMargin","blockWidth","marginHorizontal","parentBlockAlignment","parentWidth","isWider","isWideWidth","isScreenWidthEqual","useEditorWrapperStyles","contentResizeMode","reversed","height","blockMargin","wrapperStyles","canvasStyles","flex","alignmentStyles"],"sources":["@wordpress/block-editor/src/hooks/use-editor-wrapper-styles.native.js"],"sourcesContent":["/**\n * External dependencies\n */\nimport { useWindowDimensions } from 'react-native';\n\n/**\n * WordPress dependencies\n */\nimport { useMemo } from '@wordpress/element';\nimport {\n\tALIGNMENT_BREAKPOINTS,\n\tWIDE_ALIGNMENTS,\n\talignmentHelpers,\n} from '@wordpress/components';\n\n/**\n * Internal dependencies\n */\nimport styles from './use-editor-wrapper-styles.scss';\n\nconst ALIGNMENT_MAX_WIDTH = {\n\tfull: '100%',\n\twide: 1054,\n\twideMedium: 770,\n\twideLandscape: 662,\n};\n\nconst BLOCK_DEFAULT_MARGIN = 16;\n\n/**\n * Get the styles for the wide width alignment.\n *\n * @param {Object}  [options]           The options for the helper.\n * @param {string}  options.align       The alignment value.\n * @param {boolean} options.isLandscape Whether the screen is in landscape mode.\n * @param {number}  options.width       The width of the screen.\n * @return {Object} An object containing the styles for the wide width alignment.\n */\nfunction getWideWidthStyles( { align, isLandscape, width } = {} ) {\n\tif ( align !== WIDE_ALIGNMENTS.alignments.wide ) {\n\t\treturn {};\n\t}\n\n\tif ( isLandscape && width < ALIGNMENT_BREAKPOINTS.large ) {\n\t\treturn { maxWidth: ALIGNMENT_MAX_WIDTH.wideLandscape };\n\t}\n\n\tif ( width <= ALIGNMENT_BREAKPOINTS.small ) {\n\t\treturn { maxWidth: width };\n\t}\n\n\tif (\n\t\twidth >= ALIGNMENT_BREAKPOINTS.medium &&\n\t\twidth < ALIGNMENT_BREAKPOINTS.wide\n\t) {\n\t\treturn { maxWidth: ALIGNMENT_MAX_WIDTH.wideMedium };\n\t}\n\n\treturn { maxWidth: ALIGNMENT_MAX_WIDTH.wide };\n}\n\n/**\n * Get the styles for the full width alignment.\n *\n * @param {Object}  [options]               The options for the helper.\n * @param {string}  options.align           The alignment value.\n * @param {string}  options.blockName       The name of the block.\n * @param {boolean} options.hasParents      Whether the block has parents.\n * @param {string}  options.parentBlockName The name of the parent block.\n * @return {Object} An object containing the styles for the full width alignment.\n */\nfunction getFullWidthStyles( {\n\talign,\n\tblockName,\n\thasParents,\n\tparentBlockName,\n} = {} ) {\n\tconst { isContainerRelated, isFullWidth } = alignmentHelpers;\n\tconst fullWidthStyles = isFullWidth( align )\n\t\t? { maxWidth: ALIGNMENT_MAX_WIDTH.full }\n\t\t: {};\n\n\tif (\n\t\t! align &&\n\t\thasParents &&\n\t\t! isContainerRelated( parentBlockName ) &&\n\t\tisContainerRelated( blockName )\n\t) {\n\t\tfullWidthStyles.paddingHorizontal = BLOCK_DEFAULT_MARGIN;\n\t}\n\n\treturn fullWidthStyles;\n}\n\n/**\n * Get the block margin based on various conditions.\n *\n * @param {Object}  [options]                    The options for the helper.\n * @param {string}  options.align                The alignment value.\n * @param {string}  options.blockName            The name of the block.\n * @param {number}  options.blockWidth           The width of the block.\n * @param {boolean} options.hasParents           Whether the block has parents.\n * @param {number}  options.marginHorizontal     Default horizontal margin.\n * @param {string}  options.parentBlockAlignment The alignment of the parent block.\n * @param {string}  options.parentBlockName      The name of the parent block.\n * @param {number}  options.parentWidth          The width of the parent block.\n * @param {number}  options.width                The width of the screen.\n * @return {number} The calculated block margin.\n */\nfunction getBlockMargin( {\n\talign,\n\tblockName,\n\tblockWidth,\n\thasParents,\n\tmarginHorizontal,\n\tparentBlockAlignment,\n\tparentBlockName,\n\tparentWidth,\n\twidth,\n} = {} ) {\n\tconst { isContainerRelated, isWider, isWideWidth, isFullWidth } =\n\t\talignmentHelpers;\n\n\tif ( isFullWidth( align ) ) {\n\t\tif ( ! hasParents ) {\n\t\t\treturn 0;\n\t\t}\n\t\treturn marginHorizontal;\n\t}\n\n\tif ( isWideWidth( align ) ) {\n\t\treturn marginHorizontal;\n\t}\n\n\tif (\n\t\tisFullWidth( parentBlockAlignment ) &&\n\t\t! isWider( blockWidth, 'medium' )\n\t) {\n\t\tif ( isContainerRelated( blockName ) || isWider( width, 'mobile' ) ) {\n\t\t\treturn marginHorizontal;\n\t\t}\n\t\treturn marginHorizontal * 2;\n\t}\n\n\tif (\n\t\tisContainerRelated( parentBlockName ) &&\n\t\t! isContainerRelated( blockName )\n\t) {\n\t\tconst isScreenWidthEqual = parentWidth === width;\n\t\tif ( isScreenWidthEqual || isWider( width, 'mobile' ) ) {\n\t\t\treturn marginHorizontal;\n\t\t}\n\t}\n\n\treturn marginHorizontal;\n}\n\n/**\n * Custom hook to get the styles and margin for the editor wrapper.\n *\n * @param {Object}  [props]                    The props for the hook.\n * @param {string}  props.align                The alignment value.\n * @param {string}  props.blockName            The name of the block.\n * @param {number}  props.blockWidth           The width of the block.\n * @param {string}  props.contentResizeMode    The content resize mode.\n * @param {boolean} props.hasParents           Whether the block has parents.\n * @param {number}  props.marginHorizontal     Default horizontal margin.\n * @param {string}  props.parentBlockAlignment The alignment of the parent block.\n * @param {string}  props.parentBlockName      The name of the parent block.\n * @param {number}  props.parentWidth          The width of the parent block.\n * @param {boolean} [props.reversed=false]     Whether the flex direction should be reversed.\n * @return {[Array, number]} An array containing the wrapper styles and block margin.\n */\nexport function useEditorWrapperStyles( {\n\talign,\n\tblockName,\n\tblockWidth,\n\tcontentResizeMode,\n\thasParents,\n\tmarginHorizontal,\n\tparentBlockAlignment,\n\tparentBlockName,\n\tparentWidth,\n\treversed = false,\n} = {} ) {\n\tconst { width, height } = useWindowDimensions();\n\tconst isLandscape = width >= height;\n\n\tconst blockMargin = useMemo(\n\t\t() =>\n\t\t\tgetBlockMargin( {\n\t\t\t\talign,\n\t\t\t\tblockName,\n\t\t\t\tblockWidth,\n\t\t\t\thasParents,\n\t\t\t\tmarginHorizontal,\n\t\t\t\tparentBlockAlignment,\n\t\t\t\tparentBlockName,\n\t\t\t\tparentWidth,\n\t\t\t\twidth,\n\t\t\t} ),\n\t\t[\n\t\t\talign,\n\t\t\tblockName,\n\t\t\tblockWidth,\n\t\t\thasParents,\n\t\t\tmarginHorizontal,\n\t\t\tparentBlockAlignment,\n\t\t\tparentBlockName,\n\t\t\tparentWidth,\n\t\t\twidth,\n\t\t]\n\t);\n\n\tconst wrapperStyles = useMemo( () => {\n\t\tlet canvasStyles;\n\n\t\tif ( contentResizeMode === 'stretch' ) {\n\t\t\t// For these cases, no width constraints should be added.\n\t\t\tcanvasStyles = { flex: 1 };\n\t\t} else if ( reversed ) {\n\t\t\tcanvasStyles = styles[ 'use-editor-wrapper-styles--reversed' ];\n\t\t} else {\n\t\t\tcanvasStyles = styles[ 'use-editor-wrapper-styles' ];\n\t\t}\n\n\t\tconst alignmentStyles = {\n\t\t\t...getWideWidthStyles( { align, isLandscape, width } ),\n\t\t\t...getFullWidthStyles( {\n\t\t\t\talign,\n\t\t\t\tblockName,\n\t\t\t\thasParents,\n\t\t\t\tparentBlockName,\n\t\t\t} ),\n\t\t};\n\n\t\treturn [ canvasStyles, alignmentStyles ];\n\t}, [\n\t\talign,\n\t\tblockName,\n\t\thasParents,\n\t\tparentBlockName,\n\t\tisLandscape,\n\t\twidth,\n\t\tcontentResizeMode,\n\t\treversed,\n\t] );\n\n\treturn [ wrapperStyles, blockMargin ];\n}\n"],"mappings":"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"}