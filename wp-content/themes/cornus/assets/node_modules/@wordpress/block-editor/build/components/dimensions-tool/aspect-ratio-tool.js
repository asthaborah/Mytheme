"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.DEFAULT_ASPECT_RATIO_OPTIONS = void 0;
exports.default = AspectRatioTool;
var _react = require("react");
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
/**
 * WordPress dependencies
 */

/**
 * @typedef {import('@wordpress/components/build-types/select-control/types').SelectControlProps} SelectControlProps
 */

/**
 * @type {SelectControlProps[]}
 */
const DEFAULT_ASPECT_RATIO_OPTIONS = exports.DEFAULT_ASPECT_RATIO_OPTIONS = [{
  label: (0, _i18n._x)('Original', 'Aspect ratio option for dimensions control'),
  value: 'auto'
}, {
  label: (0, _i18n._x)('Square - 1:1', 'Aspect ratio option for dimensions control'),
  value: '1'
}, {
  label: (0, _i18n._x)('Standard - 4:3', 'Aspect ratio option for dimensions control'),
  value: '4/3'
}, {
  label: (0, _i18n._x)('Portrait - 3:4', 'Aspect ratio option for dimensions control'),
  value: '3/4'
}, {
  label: (0, _i18n._x)('Classic - 3:2', 'Aspect ratio option for dimensions control'),
  value: '3/2'
}, {
  label: (0, _i18n._x)('Classic Portrait - 2:3', 'Aspect ratio option for dimensions control'),
  value: '2/3'
}, {
  label: (0, _i18n._x)('Wide - 16:9', 'Aspect ratio option for dimensions control'),
  value: '16/9'
}, {
  label: (0, _i18n._x)('Tall - 9:16', 'Aspect ratio option for dimensions control'),
  value: '9/16'
}, {
  label: (0, _i18n._x)('Custom', 'Aspect ratio option for dimensions control'),
  value: 'custom',
  disabled: true,
  hidden: true
}];

/**
 * @callback AspectRatioToolPropsOnChange
 * @param {string} [value] New aspect ratio value.
 * @return {void} No return.
 */

/**
 * @typedef {Object} AspectRatioToolProps
 * @property {string}                       [panelId]          ID of the panel this tool is associated with.
 * @property {string}                       [value]            Current aspect ratio value.
 * @property {AspectRatioToolPropsOnChange} [onChange]         Callback to update the aspect ratio value.
 * @property {SelectControlProps[]}         [options]          Aspect ratio options.
 * @property {string}                       [defaultValue]     Default aspect ratio value.
 * @property {boolean}                      [isShownByDefault] Whether the tool is shown by default.
 */

function AspectRatioTool({
  panelId,
  value,
  onChange = () => {},
  options = DEFAULT_ASPECT_RATIO_OPTIONS,
  defaultValue = DEFAULT_ASPECT_RATIO_OPTIONS[0].value,
  hasValue,
  isShownByDefault = true
}) {
  // Match the CSS default so if the value is used directly in CSS it will look correct in the control.
  const displayValue = value !== null && value !== void 0 ? value : 'auto';
  return (0, _react.createElement)(_components.__experimentalToolsPanelItem, {
    hasValue: hasValue ? hasValue : () => displayValue !== defaultValue,
    label: (0, _i18n.__)('Aspect ratio'),
    onDeselect: () => onChange(undefined),
    isShownByDefault: isShownByDefault,
    panelId: panelId
  }, (0, _react.createElement)(_components.SelectControl, {
    label: (0, _i18n.__)('Aspect ratio'),
    value: displayValue,
    options: options,
    onChange: onChange,
    size: '__unstable-large',
    __nextHasNoMarginBottom: true
  }));
}
//# sourceMappingURL=aspect-ratio-tool.js.map