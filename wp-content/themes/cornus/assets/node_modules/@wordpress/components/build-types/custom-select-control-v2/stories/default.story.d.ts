/// <reference types="react" />
/**
 * External dependencies
 */
import type { Meta } from '@storybook/react';
/**
 * Internal dependencies
 */
import CustomSelect from '../default-component';
declare const meta: Meta<typeof CustomSelect>;
export default meta;
export declare const Default: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, import("../types")._CustomSelectProps & Omit<import("../types").CustomSelectButtonProps, "size"> & {
    size?: "default" | "compact" | undefined;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "key" | keyof import("react").ButtonHTMLAttributes<HTMLButtonElement>>, "onChange" | "size" | "value" | "as" | "defaultValue" | "renderSelectedValue" | keyof import("../types")._CustomSelectProps>>;
/**
 * Multiple selection can be enabled by using an array for the `value` and
 * `defaultValue` props. The argument type of the `onChange` function will also
 * change accordingly.
 */
export declare const MultipleSelection: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, import("../types")._CustomSelectProps & Omit<import("../types").CustomSelectButtonProps, "size"> & {
    size?: "default" | "compact" | undefined;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "key" | keyof import("react").ButtonHTMLAttributes<HTMLButtonElement>>, "onChange" | "size" | "value" | "as" | "defaultValue" | "renderSelectedValue" | keyof import("../types")._CustomSelectProps>>;
/**
 * The `renderSelectedValue` prop can be used to customize how the selected value
 * is rendered in the dropdown trigger.
 */
export declare const CustomSelectedValue: import("@storybook/types").AnnotatedStoryFn<import("@storybook/react/dist/types-0fc72a6d").R, import("../types")._CustomSelectProps & Omit<import("../types").CustomSelectButtonProps, "size"> & {
    size?: "default" | "compact" | undefined;
} & Omit<Pick<import("react").DetailedHTMLProps<import("react").ButtonHTMLAttributes<HTMLButtonElement>, HTMLButtonElement>, "key" | keyof import("react").ButtonHTMLAttributes<HTMLButtonElement>>, "onChange" | "size" | "value" | "as" | "defaultValue" | "renderSelectedValue" | keyof import("../types")._CustomSelectProps>>;
//# sourceMappingURL=default.story.d.ts.map