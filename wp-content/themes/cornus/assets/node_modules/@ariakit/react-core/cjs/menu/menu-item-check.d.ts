import type { CheckboxCheckOptions } from "../checkbox/checkbox-check.js";
import type { As, Props } from "../utils/types.js";
import type { MenuStore } from "./menu-store.js";
/**
 * Returns props to create a `MenuItemCheck` component.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx
 * const props = useMenuItemCheck({ checked: true });
 * <Role {...props} />
 * ```
 */
export declare const useMenuItemCheck: import("../utils/types.js").Hook<MenuItemCheckOptions<"span">>;
/**
 * Renders a checkmark icon when the
 * [`checked`](https://ariakit.org/reference/menu-item-check#checked) prop is
 * `true`. The icon can be overridden by providing a different one as children.
 *
 * When rendered inside
 * [`MenuItemCheckbox`](https://ariakit.org/reference/menu-item-checkbox) or
 * [`MenuItemRadio`](https://ariakit.org/reference/menu-item-radio) components,
 * the [`checked`](https://ariakit.org/reference/menu-item-check#checked) prop
 * is automatically derived from the context.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx {5,9}
 * <MenuProvider defaultValues={{ apple: true, orange: false }}>
 *   <MenuButton>Fruits</MenuButton>
 *   <Menu>
 *     <MenuItemCheckbox name="apple">
 *       <MenuItemCheck />
 *       Apple
 *     </MenuItemCheckbox>
 *     <MenuItemCheckbox name="orange">
 *       <MenuItemCheck />
 *       Orange
 *     </MenuItemCheckbox>
 *   </Menu>
 * </MenuProvider>
 * ```
 */
export declare const MenuItemCheck: import("../utils/types.js").Component<MenuItemCheckOptions<"span">>;
export interface MenuItemCheckOptions<T extends As = "span"> extends Omit<CheckboxCheckOptions<T>, "store"> {
    /**
     * Object returned by the
     * [`useMenuStore`](https://ariakit.org/reference/use-menu-store) hook.
     */
    store?: MenuStore;
}
export type MenuItemCheckProps<T extends As = "span"> = Props<MenuItemCheckOptions<T>>;
