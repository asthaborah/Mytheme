{"version":3,"names":["_data","require","_element","_i18n","_components","_blockEditor","_panelColorGradientSettings","_interopRequireDefault","_hooks","_utils","_object","_contrastChecker","_inspectorControls","_colorPanel","ColorPanel","value","inheritedValue","onChange","settings","colors","useColorsPerOrigin","gradients","useGradientsPerOrigin","globalStyles","useGlobalStyles","detectedBackgroundColor","setDetectedBackgroundColor","useState","detectedTextColor","setDetectedTextColor","baseGlobalStyles","useSelect","select","getSettings","blockEditorStore","__experimentalGlobalStylesBaseStyles","color","decodeValue","rawValue","getValueFromVariable","encodeColorValue","useCallback","colorValue","allColors","flatMap","originColors","colorObject","find","slug","encodeGradientValue","gradientValue","allGradients","originGradients","gradientObject","gradient","showTextPanel","useHasTextPanel","textColor","text","setTextColor","newColor","setImmutably","resetTextColor","undefined","showBackgroundPanel","useHasBackgroundPanel","backgroundColor","background","setBackgroundColor","newValue","setGradient","newGradient","resetBackground","currentGradients","withoutGradientsSupport","Array","isArray","length","items","useMemo","label","__","onColorChange","onColorCleared","onGradientChange","filter","Boolean","useEffect","currentDetectedTextColor","currentDetectedBackgroundColor","_react","createElement","default","title","initialOpen","_default","exports"],"sources":["@wordpress/block-editor/src/components/global-styles/color-panel.native.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useSelect } from '@wordpress/data';\nimport { useEffect, useState, useMemo, useCallback } from '@wordpress/element';\nimport { __ } from '@wordpress/i18n';\nimport { useGlobalStyles } from '@wordpress/components';\nimport { store as blockEditorStore } from '@wordpress/block-editor';\n\n/**\n * Internal dependencies\n */\nimport PanelColorGradientSettings from '../colors-gradients/panel-color-gradient-settings';\nimport { useColorsPerOrigin, useGradientsPerOrigin } from './hooks';\nimport { getValueFromVariable } from './utils';\nimport { setImmutably } from '../../utils/object';\nimport ContrastChecker from '../contrast-checker';\nimport InspectorControls from '../inspector-controls';\nimport {\n\tuseHasColorPanel,\n\tuseHasTextPanel,\n\tuseHasBackgroundPanel,\n} from './color-panel.js';\n\nconst ColorPanel = ( {\n\tvalue,\n\tinheritedValue = value,\n\tonChange,\n\tsettings,\n} ) => {\n\tconst colors = useColorsPerOrigin( settings );\n\tconst gradients = useGradientsPerOrigin( settings );\n\tconst globalStyles = useGlobalStyles();\n\n\tconst [ detectedBackgroundColor, setDetectedBackgroundColor ] = useState();\n\tconst [ detectedTextColor, setDetectedTextColor ] = useState();\n\n\tconst { baseGlobalStyles } = useSelect( ( select ) => {\n\t\tconst { getSettings } = select( blockEditorStore );\n\t\treturn {\n\t\t\tbaseGlobalStyles:\n\t\t\t\tgetSettings()?.__experimentalGlobalStylesBaseStyles?.color,\n\t\t};\n\t} );\n\n\tconst decodeValue = ( rawValue ) =>\n\t\tgetValueFromVariable( { settings }, '', rawValue );\n\tconst encodeColorValue = useCallback(\n\t\t( colorValue ) => {\n\t\t\tconst allColors = colors.flatMap(\n\t\t\t\t( { colors: originColors } ) => originColors\n\t\t\t);\n\t\t\tconst colorObject = allColors.find(\n\t\t\t\t( { color } ) => color === colorValue\n\t\t\t);\n\t\t\treturn colorObject\n\t\t\t\t? 'var:preset|color|' + colorObject.slug\n\t\t\t\t: colorValue;\n\t\t},\n\t\t[ colors ]\n\t);\n\tconst encodeGradientValue = useCallback(\n\t\t( gradientValue ) => {\n\t\t\tconst allGradients = gradients.flatMap(\n\t\t\t\t( { gradients: originGradients } ) => originGradients\n\t\t\t);\n\t\t\tconst gradientObject = allGradients.find(\n\t\t\t\t( { gradient } ) => gradient === gradientValue\n\t\t\t);\n\t\t\treturn gradientObject\n\t\t\t\t? 'var:preset|gradient|' + gradientObject.slug\n\t\t\t\t: gradientValue;\n\t\t},\n\t\t[ gradients ]\n\t);\n\n\t// Text Color\n\tconst showTextPanel = useHasTextPanel( settings );\n\tconst textColor = decodeValue( inheritedValue?.color?.text );\n\tconst setTextColor = useCallback(\n\t\t( newColor ) => {\n\t\t\tonChange(\n\t\t\t\tsetImmutably(\n\t\t\t\t\tvalue,\n\t\t\t\t\t[ 'color', 'text' ],\n\t\t\t\t\tencodeColorValue( newColor )\n\t\t\t\t)\n\t\t\t);\n\t\t},\n\t\t[ encodeColorValue, onChange, value ]\n\t);\n\tconst resetTextColor = useCallback(\n\t\t() => setTextColor( undefined ),\n\t\t[ setTextColor ]\n\t);\n\n\t// BackgroundColor\n\tconst showBackgroundPanel = useHasBackgroundPanel( settings );\n\tconst backgroundColor = decodeValue( inheritedValue?.color?.background );\n\tconst gradient = decodeValue( inheritedValue?.color?.gradient );\n\tconst setBackgroundColor = useCallback(\n\t\t( newColor ) => {\n\t\t\tconst newValue = setImmutably(\n\t\t\t\tvalue,\n\t\t\t\t[ 'color', 'background' ],\n\t\t\t\tencodeColorValue( newColor )\n\t\t\t);\n\t\t\tnewValue.color.gradient = undefined;\n\t\t\tonChange( newValue );\n\t\t},\n\t\t[ encodeColorValue, onChange, value ]\n\t);\n\tconst setGradient = useCallback(\n\t\t( newGradient ) => {\n\t\t\tconst newValue = setImmutably(\n\t\t\t\tvalue,\n\t\t\t\t[ 'color', 'gradient' ],\n\t\t\t\tencodeGradientValue( newGradient )\n\t\t\t);\n\t\t\tnewValue.color.background = undefined;\n\t\t\tonChange( newValue );\n\t\t},\n\t\t[ encodeGradientValue, onChange, value ]\n\t);\n\tconst resetBackground = useCallback( () => {\n\t\tconst newValue = setImmutably(\n\t\t\tvalue,\n\t\t\t[ 'color', 'background' ],\n\t\t\tundefined\n\t\t);\n\t\tnewValue.color.gradient = undefined;\n\t\tonChange( newValue );\n\t}, [ onChange, value ] );\n\tconst currentGradients = settings?.color?.gradients;\n\tconst withoutGradientsSupport =\n\t\tArray.isArray( currentGradients ) && currentGradients.length === 0;\n\n\tconst items = useMemo(\n\t\t() =>\n\t\t\t[\n\t\t\t\tshowTextPanel && {\n\t\t\t\t\tlabel: __( 'Text' ),\n\t\t\t\t\tcolorValue: textColor,\n\t\t\t\t\tonColorChange: setTextColor,\n\t\t\t\t\tonColorCleared: resetTextColor,\n\t\t\t\t},\n\t\t\t\tshowBackgroundPanel && {\n\t\t\t\t\tlabel: __( 'Background' ),\n\t\t\t\t\tcolorValue: backgroundColor,\n\t\t\t\t\tonColorChange: setBackgroundColor,\n\t\t\t\t\tonColorCleared: resetBackground,\n\t\t\t\t\tonGradientChange: ! withoutGradientsSupport\n\t\t\t\t\t\t? setGradient\n\t\t\t\t\t\t: undefined,\n\t\t\t\t\tgradientValue: gradient,\n\t\t\t\t},\n\t\t\t].filter( Boolean ),\n\t\t[\n\t\t\tbackgroundColor,\n\t\t\tgradient,\n\t\t\tresetBackground,\n\t\t\tresetTextColor,\n\t\t\tsetBackgroundColor,\n\t\t\tsetGradient,\n\t\t\tsetTextColor,\n\t\t\tshowBackgroundPanel,\n\t\t\tshowTextPanel,\n\t\t\ttextColor,\n\t\t\twithoutGradientsSupport,\n\t\t]\n\t);\n\n\tuseEffect( () => {\n\t\t// The following logic is used to determine current text/background colors:\n\t\t// 1. The globalStyles object is queried to determine whether a color has been\n\t\t// set via a block's settings.\n\t\t// 2. If a block-based theme is in use and no globalStyles exist, the theme's\n\t\t// default/base colors are used.\n\t\t// 3. If no globalStyles exist and a theme isn't block-based, there is no way\n\t\t// to determine the default text/background color and the checker won't run.\n\t\tconst currentDetectedTextColor =\n\t\t\tglobalStyles?.color || baseGlobalStyles?.text;\n\t\tconst currentDetectedBackgroundColor =\n\t\t\tglobalStyles?.backgroundColor || baseGlobalStyles?.background;\n\n\t\tsetDetectedTextColor( currentDetectedTextColor );\n\t\tsetDetectedBackgroundColor( currentDetectedBackgroundColor );\n\t}, [ globalStyles, baseGlobalStyles ] );\n\n\treturn (\n\t\t<InspectorControls>\n\t\t\t<PanelColorGradientSettings\n\t\t\t\ttitle={ __( 'Color' ) }\n\t\t\t\tinitialOpen={ false }\n\t\t\t\tsettings={ items }\n\t\t\t>\n\t\t\t\t<ContrastChecker\n\t\t\t\t\tbackgroundColor={ detectedBackgroundColor }\n\t\t\t\t\ttextColor={ detectedTextColor }\n\t\t\t\t/>\n\t\t\t</PanelColorGradientSettings>\n\t\t</InspectorControls>\n\t);\n};\n\nexport { useHasColorPanel };\nexport default ColorPanel;\n"],"mappings":"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"}