"use client";
import {
  useCompositeContainer
} from "../__chunks/IMEG7JN4.js";
import {
  useToolbarItem
} from "../__chunks/7NHUGSTF.js";
import "../__chunks/QZLXIDNP.js";
import "../__chunks/NWCBQ4CV.js";
import "../__chunks/UH3I23HL.js";
import "../__chunks/3IEDWLST.js";
import {
  useToolbarContext
} from "../__chunks/SOK7T35T.js";
import "../__chunks/IB7YUKH5.js";
import "../__chunks/4UUKJZ4V.js";
import "../__chunks/KK7H3W2B.js";
import "../__chunks/SHA3WOPI.js";
import {
  createElement,
  createHook,
  createMemoComponent
} from "../__chunks/3ORBWXWF.js";
import "../__chunks/EKQEJRUF.js";
import "../__chunks/6O5OEQGF.js";
import "../__chunks/XM66DUTO.js";
import {
  __objRest,
  __spreadValues
} from "../__chunks/4R3V3JGP.js";

// src/toolbar/toolbar-container.ts
var useToolbarContainer = createHook(
  (_a) => {
    var _b = _a, { store } = _b, props = __objRest(_b, ["store"]);
    const context = useToolbarContext();
    store = store || context;
    props = useCompositeContainer(__spreadValues({ store }, props));
    props = useToolbarItem(__spreadValues({ store }, props));
    return props;
  }
);
var ToolbarContainer = createMemoComponent(
  (props) => {
    const htmlProps = useToolbarContainer(props);
    return createElement("div", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  ToolbarContainer.displayName = "ToolbarContainer";
}
export {
  ToolbarContainer,
  useToolbarContainer
};
