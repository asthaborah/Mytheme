"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BlockListAppender;
var _react = require("react");
var _data = require("@wordpress/data");
var _blocks = require("@wordpress/blocks");
var _defaultBlockAppender = _interopRequireDefault(require("../default-block-appender"));
var _style = _interopRequireDefault(require("./style.scss"));
var _store = require("../../store");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

function DefaultAppender({
  rootClientId,
  showSeparator
}) {
  const {
    blockClientIds,
    canInsertDefaultBlock
  } = (0, _data.useSelect)(select => {
    const {
      getBlockOrder,
      canInsertBlockType
    } = select(_store.store);
    return {
      blockClientIds: getBlockOrder(rootClientId),
      canInsertDefaultBlock: canInsertBlockType((0, _blocks.getDefaultBlockName)(), rootClientId)
    };
  }, [rootClientId]);
  if (!canInsertDefaultBlock) {
    return null;
  }
  return (0, _react.createElement)(_defaultBlockAppender.default, {
    rootClientId: rootClientId,
    lastBlockClientId: blockClientIds[blockClientIds.length - 1],
    containerStyle: _style.default.blockListAppender,
    placeholder: blockClientIds.length > 0 ? '' : null,
    showSeparator: showSeparator
  });
}
function BlockListAppender({
  rootClientId,
  renderAppender: CustomAppender,
  showSeparator
}) {
  const isLocked = (0, _data.useSelect)(select => !!select(_store.store).getTemplateLock(rootClientId), [rootClientId]);
  if (isLocked) {
    return null;
  }
  if (CustomAppender) {
    return (0, _react.createElement)(CustomAppender, {
      showSeparator: showSeparator
    });
  }
  return (0, _react.createElement)(DefaultAppender, {
    rootClientId: rootClientId,
    showSeparator: showSeparator
  });
}
//# sourceMappingURL=index.native.js.map