{"version":3,"names":["_element","require","_blocks","_data","_i18n","_notices","_store","useNotifyCopy","getBlockName","useSelect","blockEditorStore","getBlockType","blocksStore","createSuccessNotice","useDispatch","noticesStore","useCallback","eventType","selectedBlockClientIds","notice","length","clientId","title","sprintf","__","_n","type"],"sources":["@wordpress/block-editor/src/utils/use-notify-copy.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useCallback } from '@wordpress/element';\nimport { store as blocksStore } from '@wordpress/blocks';\nimport { useDispatch, useSelect } from '@wordpress/data';\nimport { __, _n, sprintf } from '@wordpress/i18n';\nimport { store as noticesStore } from '@wordpress/notices';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../store';\n\nexport function useNotifyCopy() {\n\tconst { getBlockName } = useSelect( blockEditorStore );\n\tconst { getBlockType } = useSelect( blocksStore );\n\tconst { createSuccessNotice } = useDispatch( noticesStore );\n\n\treturn useCallback( ( eventType, selectedBlockClientIds ) => {\n\t\tlet notice = '';\n\t\tif ( selectedBlockClientIds.length === 1 ) {\n\t\t\tconst clientId = selectedBlockClientIds[ 0 ];\n\t\t\tconst title = getBlockType( getBlockName( clientId ) )?.title;\n\t\t\tnotice =\n\t\t\t\teventType === 'copy'\n\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t// Translators: Name of the block being copied, e.g. \"Paragraph\".\n\t\t\t\t\t\t\t__( 'Copied \"%s\" to clipboard.' ),\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t  )\n\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t// Translators: Name of the block being cut, e.g. \"Paragraph\".\n\t\t\t\t\t\t\t__( 'Moved \"%s\" to clipboard.' ),\n\t\t\t\t\t\t\ttitle\n\t\t\t\t\t  );\n\t\t} else {\n\t\t\tnotice =\n\t\t\t\teventType === 'copy'\n\t\t\t\t\t? sprintf(\n\t\t\t\t\t\t\t// Translators: %d: Number of blocks being copied.\n\t\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t\t'Copied %d block to clipboard.',\n\t\t\t\t\t\t\t\t'Copied %d blocks to clipboard.',\n\t\t\t\t\t\t\t\tselectedBlockClientIds.length\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tselectedBlockClientIds.length\n\t\t\t\t\t  )\n\t\t\t\t\t: sprintf(\n\t\t\t\t\t\t\t// Translators: %d: Number of blocks being cut.\n\t\t\t\t\t\t\t_n(\n\t\t\t\t\t\t\t\t'Moved %d block to clipboard.',\n\t\t\t\t\t\t\t\t'Moved %d blocks to clipboard.',\n\t\t\t\t\t\t\t\tselectedBlockClientIds.length\n\t\t\t\t\t\t\t),\n\t\t\t\t\t\t\tselectedBlockClientIds.length\n\t\t\t\t\t  );\n\t\t}\n\t\tcreateSuccessNotice( notice, {\n\t\t\ttype: 'snackbar',\n\t\t} );\n\t}, [] );\n}\n"],"mappings":";;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AACA,IAAAE,KAAA,GAAAF,OAAA;AACA,IAAAG,KAAA,GAAAH,OAAA;AACA,IAAAI,QAAA,GAAAJ,OAAA;AAKA,IAAAK,MAAA,GAAAL,OAAA;AAZA;AACA;AACA;;AAOA;AACA;AACA;;AAGO,SAASM,aAAaA,CAAA,EAAG;EAC/B,MAAM;IAAEC;EAAa,CAAC,GAAG,IAAAC,eAAS,EAAEC,YAAiB,CAAC;EACtD,MAAM;IAAEC;EAAa,CAAC,GAAG,IAAAF,eAAS,EAAEG,aAAY,CAAC;EACjD,MAAM;IAAEC;EAAoB,CAAC,GAAG,IAAAC,iBAAW,EAAEC,cAAa,CAAC;EAE3D,OAAO,IAAAC,oBAAW,EAAE,CAAEC,SAAS,EAAEC,sBAAsB,KAAM;IAC5D,IAAIC,MAAM,GAAG,EAAE;IACf,IAAKD,sBAAsB,CAACE,MAAM,KAAK,CAAC,EAAG;MAC1C,MAAMC,QAAQ,GAAGH,sBAAsB,CAAE,CAAC,CAAE;MAC5C,MAAMI,KAAK,GAAGX,YAAY,CAAEH,YAAY,CAAEa,QAAS,CAAE,CAAC,EAAEC,KAAK;MAC7DH,MAAM,GACLF,SAAS,KAAK,MAAM,GACjB,IAAAM,aAAO;MACP;MACA,IAAAC,QAAE,EAAE,2BAA4B,CAAC,EACjCF,KACA,CAAC,GACD,IAAAC,aAAO;MACP;MACA,IAAAC,QAAE,EAAE,0BAA2B,CAAC,EAChCF,KACA,CAAC;IACN,CAAC,MAAM;MACNH,MAAM,GACLF,SAAS,KAAK,MAAM,GACjB,IAAAM,aAAO;MACP;MACA,IAAAE,QAAE,EACD,+BAA+B,EAC/B,gCAAgC,EAChCP,sBAAsB,CAACE,MACxB,CAAC,EACDF,sBAAsB,CAACE,MACvB,CAAC,GACD,IAAAG,aAAO;MACP;MACA,IAAAE,QAAE,EACD,8BAA8B,EAC9B,+BAA+B,EAC/BP,sBAAsB,CAACE,MACxB,CAAC,EACDF,sBAAsB,CAACE,MACvB,CAAC;IACN;IACAP,mBAAmB,CAAEM,MAAM,EAAE;MAC5BO,IAAI,EAAE;IACP,CAAE,CAAC;EACJ,CAAC,EAAE,EAAG,CAAC;AACR"}