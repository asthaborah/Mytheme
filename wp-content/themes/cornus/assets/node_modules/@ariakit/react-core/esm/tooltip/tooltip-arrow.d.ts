import type { PopoverArrowOptions } from "../popover/popover-arrow.js";
import type { As, Props } from "../utils/types.js";
import type { TooltipStore } from "./tooltip-store.js";
/**
 * Returns props to create a `TooltipArrow` component.
 * @see https://ariakit.org/components/tooltip
 * @example
 * ```jsx
 * const store = useToolTipStore();
 * const props = useTooltipArrow({ store });
 * <TooltipAnchor store={store}>Anchor</TooltipAnchor>
 * <Tooltip store={store}>
 *   <Role {...props} />
 *   Tooltip
 * </Tooltip>
 * ```
 */
export declare const useTooltipArrow: import("../utils/types.js").Hook<TooltipArrowOptions<"div">>;
/**
 * Renders an arrow inside a [`Tooltip`](https://ariakit.org/reference/tooltip)
 * pointing to the anchor element.
 * @see https://ariakit.org/components/tooltip
 * @example
 * ```jsx {4}
 * <TooltipProvider>
 *   <TooltipAnchor>Anchor</TooltipAnchor>
 *   <Tooltip>
 *     <TooltipArrow />
 *     Tooltip
 *   </Tooltip>
 * </TooltipProvider>
 * ```
 */
export declare const TooltipArrow: import("../utils/types.js").Component<TooltipArrowOptions<"div">>;
export interface TooltipArrowOptions<T extends As = "div"> extends PopoverArrowOptions<T> {
    /**
     * Object returned by the
     * [`useTooltipStore`](https://ariakit.org/reference/use-tooltip-store) hook.
     * If not provided, the closest
     * [`Tooltip`](https://ariakit.org/reference/tooltip) or
     * [`TooltipProvider`](https://ariakit.org/reference/tooltip-provider)
     * components' context will be used.
     */
    store?: TooltipStore;
}
export type TooltipArrowProps<T extends As = "div"> = Props<TooltipArrowOptions<T>>;
