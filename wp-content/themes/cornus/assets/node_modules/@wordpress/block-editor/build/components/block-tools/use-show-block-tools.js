"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.useShowBlockTools = useShowBlockTools;
var _data = require("@wordpress/data");
var _blocks = require("@wordpress/blocks");
var _store = require("../../store");
var _useHasBlockToolbar = require("../block-toolbar/use-has-block-toolbar");
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

/**
 * Source of truth for which block tools are showing in the block editor.
 *
 * @return {Object} Object of which block tools will be shown.
 */
function useShowBlockTools() {
  const hasBlockToolbar = (0, _useHasBlockToolbar.useHasBlockToolbar)();
  return (0, _data.useSelect)(select => {
    const {
      getSelectedBlockClientId,
      getFirstMultiSelectedBlockClientId,
      getBlock,
      getSettings,
      hasMultiSelection,
      __unstableGetEditorMode,
      isTyping
    } = select(_store.store);
    const clientId = getSelectedBlockClientId() || getFirstMultiSelectedBlockClientId();
    const {
      name = '',
      attributes = {}
    } = getBlock(clientId) || {};
    const editorMode = __unstableGetEditorMode();
    const hasSelectedBlock = clientId && name;
    const isEmptyDefaultBlock = (0, _blocks.isUnmodifiedDefaultBlock)({
      name,
      attributes
    });
    const _showEmptyBlockSideInserter = clientId && !isTyping() && editorMode === 'edit' && (0, _blocks.isUnmodifiedDefaultBlock)({
      name,
      attributes
    });
    const maybeShowBreadcrumb = hasSelectedBlock && !hasMultiSelection() && (editorMode === 'navigation' || editorMode === 'zoom-out');
    return {
      showEmptyBlockSideInserter: _showEmptyBlockSideInserter,
      showBreadcrumb: !_showEmptyBlockSideInserter && maybeShowBreadcrumb,
      showBlockToolbarPopover: hasBlockToolbar && !getSettings().hasFixedToolbar && !_showEmptyBlockSideInserter && hasSelectedBlock && !isEmptyDefaultBlock && !maybeShowBreadcrumb,
      showFixedToolbar: editorMode !== 'zoom-out' && hasBlockToolbar && getSettings().hasFixedToolbar
    };
  }, [hasBlockToolbar]);
}
//# sourceMappingURL=use-show-block-tools.js.map