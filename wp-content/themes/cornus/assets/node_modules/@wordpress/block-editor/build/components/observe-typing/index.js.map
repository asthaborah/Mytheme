{"version":3,"names":["_compose","require","_data","_dom","_keycodes","_store","KEY_DOWN_ELIGIBLE_KEY_CODES","Set","UP","RIGHT","DOWN","LEFT","ENTER","BACKSPACE","isKeyDownEligibleForStartTyping","event","keyCode","shiftKey","has","useMouseMoveTypingReset","isTyping","useSelect","select","blockEditorStore","stopTyping","useDispatch","useRefEffect","node","ownerDocument","lastClientX","lastClientY","stopTypingOnMouseMove","clientX","clientY","addEventListener","removeEventListener","useTypingObserver","_isTyping","startTyping","ref1","ref2","defaultView","selection","getSelection","timerId","stopTypingOnNonTextField","target","setTimeout","isTextField","stopTypingOnEscapeKey","ESCAPE","TAB","stopTypingOnSelectionUncollapse","isCollapsed","clearTimeout","startTypingInTextField","type","contains","useMergeRefs","ObserveTyping","children","_react","createElement","ref","_default","exports","default"],"sources":["@wordpress/block-editor/src/components/observe-typing/index.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport { useRefEffect, useMergeRefs } from '@wordpress/compose';\nimport { useSelect, useDispatch } from '@wordpress/data';\nimport { isTextField } from '@wordpress/dom';\nimport {\n\tUP,\n\tRIGHT,\n\tDOWN,\n\tLEFT,\n\tENTER,\n\tBACKSPACE,\n\tESCAPE,\n\tTAB,\n} from '@wordpress/keycodes';\n\n/**\n * Internal dependencies\n */\nimport { store as blockEditorStore } from '../../store';\n\n/**\n * Set of key codes upon which typing is to be initiated on a keydown event.\n *\n * @type {Set<number>}\n */\nconst KEY_DOWN_ELIGIBLE_KEY_CODES = new Set( [\n\tUP,\n\tRIGHT,\n\tDOWN,\n\tLEFT,\n\tENTER,\n\tBACKSPACE,\n] );\n\n/**\n * Returns true if a given keydown event can be inferred as intent to start\n * typing, or false otherwise. A keydown is considered eligible if it is a\n * text navigation without shift active.\n *\n * @param {KeyboardEvent} event Keydown event to test.\n *\n * @return {boolean} Whether event is eligible to start typing.\n */\nfunction isKeyDownEligibleForStartTyping( event ) {\n\tconst { keyCode, shiftKey } = event;\n\treturn ! shiftKey && KEY_DOWN_ELIGIBLE_KEY_CODES.has( keyCode );\n}\n\n/**\n * Removes the `isTyping` flag when the mouse moves in the document of the given\n * element.\n */\nexport function useMouseMoveTypingReset() {\n\tconst isTyping = useSelect(\n\t\t( select ) => select( blockEditorStore ).isTyping(),\n\t\t[]\n\t);\n\tconst { stopTyping } = useDispatch( blockEditorStore );\n\n\treturn useRefEffect(\n\t\t( node ) => {\n\t\t\tif ( ! isTyping ) {\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst { ownerDocument } = node;\n\t\t\tlet lastClientX;\n\t\t\tlet lastClientY;\n\n\t\t\t/**\n\t\t\t * On mouse move, unset typing flag if user has moved cursor.\n\t\t\t *\n\t\t\t * @param {MouseEvent} event Mousemove event.\n\t\t\t */\n\t\t\tfunction stopTypingOnMouseMove( event ) {\n\t\t\t\tconst { clientX, clientY } = event;\n\n\t\t\t\t// We need to check that the mouse really moved because Safari\n\t\t\t\t// triggers mousemove events when shift or ctrl are pressed.\n\t\t\t\tif (\n\t\t\t\t\tlastClientX &&\n\t\t\t\t\tlastClientY &&\n\t\t\t\t\t( lastClientX !== clientX || lastClientY !== clientY )\n\t\t\t\t) {\n\t\t\t\t\tstopTyping();\n\t\t\t\t}\n\n\t\t\t\tlastClientX = clientX;\n\t\t\t\tlastClientY = clientY;\n\t\t\t}\n\n\t\t\townerDocument.addEventListener(\n\t\t\t\t'mousemove',\n\t\t\t\tstopTypingOnMouseMove\n\t\t\t);\n\n\t\t\treturn () => {\n\t\t\t\townerDocument.removeEventListener(\n\t\t\t\t\t'mousemove',\n\t\t\t\t\tstopTypingOnMouseMove\n\t\t\t\t);\n\t\t\t};\n\t\t},\n\t\t[ isTyping, stopTyping ]\n\t);\n}\n\n/**\n * Sets and removes the `isTyping` flag based on user actions:\n *\n * - Sets the flag if the user types within the given element.\n * - Removes the flag when the user selects some text, focusses a non-text\n *   field, presses ESC or TAB, or moves the mouse in the document.\n */\nexport function useTypingObserver() {\n\tconst { isTyping } = useSelect( ( select ) => {\n\t\tconst { isTyping: _isTyping } = select( blockEditorStore );\n\t\treturn {\n\t\t\tisTyping: _isTyping(),\n\t\t};\n\t}, [] );\n\tconst { startTyping, stopTyping } = useDispatch( blockEditorStore );\n\n\tconst ref1 = useMouseMoveTypingReset();\n\tconst ref2 = useRefEffect(\n\t\t( node ) => {\n\t\t\tconst { ownerDocument } = node;\n\t\t\tconst { defaultView } = ownerDocument;\n\t\t\tconst selection = defaultView.getSelection();\n\n\t\t\t// Listeners to stop typing should only be added when typing.\n\t\t\t// Listeners to start typing should only be added when not typing.\n\t\t\tif ( isTyping ) {\n\t\t\t\tlet timerId;\n\n\t\t\t\t/**\n\t\t\t\t * Stops typing when focus transitions to a non-text field element.\n\t\t\t\t *\n\t\t\t\t * @param {FocusEvent} event Focus event.\n\t\t\t\t */\n\t\t\t\tfunction stopTypingOnNonTextField( event ) {\n\t\t\t\t\tconst { target } = event;\n\n\t\t\t\t\t// Since focus to a non-text field via arrow key will trigger\n\t\t\t\t\t// before the keydown event, wait until after current stack\n\t\t\t\t\t// before evaluating whether typing is to be stopped. Otherwise,\n\t\t\t\t\t// typing will re-start.\n\t\t\t\t\ttimerId = defaultView.setTimeout( () => {\n\t\t\t\t\t\tif ( ! isTextField( target ) ) {\n\t\t\t\t\t\t\tstopTyping();\n\t\t\t\t\t\t}\n\t\t\t\t\t} );\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * Unsets typing flag if user presses Escape while typing flag is\n\t\t\t\t * active.\n\t\t\t\t *\n\t\t\t\t * @param {KeyboardEvent} event Keypress or keydown event to\n\t\t\t\t *                              interpret.\n\t\t\t\t */\n\t\t\t\tfunction stopTypingOnEscapeKey( event ) {\n\t\t\t\t\tconst { keyCode } = event;\n\n\t\t\t\t\tif ( keyCode === ESCAPE || keyCode === TAB ) {\n\t\t\t\t\t\tstopTyping();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t/**\n\t\t\t\t * On selection change, unset typing flag if user has made an\n\t\t\t\t * uncollapsed (shift) selection.\n\t\t\t\t */\n\t\t\t\tfunction stopTypingOnSelectionUncollapse() {\n\t\t\t\t\tif ( ! selection.isCollapsed ) {\n\t\t\t\t\t\tstopTyping();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tnode.addEventListener( 'focus', stopTypingOnNonTextField );\n\t\t\t\tnode.addEventListener( 'keydown', stopTypingOnEscapeKey );\n\n\t\t\t\townerDocument.addEventListener(\n\t\t\t\t\t'selectionchange',\n\t\t\t\t\tstopTypingOnSelectionUncollapse\n\t\t\t\t);\n\n\t\t\t\treturn () => {\n\t\t\t\t\tdefaultView.clearTimeout( timerId );\n\t\t\t\t\tnode.removeEventListener(\n\t\t\t\t\t\t'focus',\n\t\t\t\t\t\tstopTypingOnNonTextField\n\t\t\t\t\t);\n\t\t\t\t\tnode.removeEventListener(\n\t\t\t\t\t\t'keydown',\n\t\t\t\t\t\tstopTypingOnEscapeKey\n\t\t\t\t\t);\n\t\t\t\t\townerDocument.removeEventListener(\n\t\t\t\t\t\t'selectionchange',\n\t\t\t\t\t\tstopTypingOnSelectionUncollapse\n\t\t\t\t\t);\n\t\t\t\t};\n\t\t\t}\n\n\t\t\t/**\n\t\t\t * Handles a keypress or keydown event to infer intention to start\n\t\t\t * typing.\n\t\t\t *\n\t\t\t * @param {KeyboardEvent} event Keypress or keydown event to interpret.\n\t\t\t */\n\t\t\tfunction startTypingInTextField( event ) {\n\t\t\t\tconst { type, target } = event;\n\n\t\t\t\t// Abort early if already typing, or key press is incurred outside a\n\t\t\t\t// text field (e.g. arrow-ing through toolbar buttons).\n\t\t\t\t// Ignore typing if outside the current DOM container\n\t\t\t\tif ( ! isTextField( target ) || ! node.contains( target ) ) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\t// Special-case keydown because certain keys do not emit a keypress\n\t\t\t\t// event. Conversely avoid keydown as the canonical event since\n\t\t\t\t// there are many keydown which are explicitly not targeted for\n\t\t\t\t// typing.\n\t\t\t\tif (\n\t\t\t\t\ttype === 'keydown' &&\n\t\t\t\t\t! isKeyDownEligibleForStartTyping( event )\n\t\t\t\t) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tstartTyping();\n\t\t\t}\n\n\t\t\tnode.addEventListener( 'keypress', startTypingInTextField );\n\t\t\tnode.addEventListener( 'keydown', startTypingInTextField );\n\n\t\t\treturn () => {\n\t\t\t\tnode.removeEventListener( 'keypress', startTypingInTextField );\n\t\t\t\tnode.removeEventListener( 'keydown', startTypingInTextField );\n\t\t\t};\n\t\t},\n\t\t[ isTyping, startTyping, stopTyping ]\n\t);\n\n\treturn useMergeRefs( [ ref1, ref2 ] );\n}\n\nfunction ObserveTyping( { children } ) {\n\treturn <div ref={ useTypingObserver() }>{ children }</div>;\n}\n\n/**\n * @see https://github.com/WordPress/gutenberg/blob/HEAD/packages/block-editor/src/components/observe-typing/README.md\n */\nexport default ObserveTyping;\n"],"mappings":"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"}