import type { HovercardOptions } from "../hovercard/hovercard.jsx";
import type { As, Props } from "../utils/types.js";
import type { MenuListOptions } from "./menu-list.jsx";
/**
 * Returns props to create a `Menu` component.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx
 * const store = useMenuStore();
 * const props = useMenu({ store });
 * <MenuButton store={store}>Edit</MenuButton>
 * <Role {...props}>
 *   <MenuItem>Undo</MenuItem>
 *   <MenuItem>Redo</MenuItem>
 * </Role>
 * ```
 */
export declare const useMenu: import("../utils/types.js").Hook<MenuOptions<"div">>;
/**
 * Renders a dropdown menu element that's controlled by a
 * [`MenuButton`](https://ariakit.org/reference/menu-button) component.
 *
 * This component uses the primitive
 * [`MenuList`](https://ariakit.org/reference/menu-list) component under the
 * hood. It renders a popover and automatically focuses on items when the menu
 * is shown.
 * @see https://ariakit.org/components/menu
 * @example
 * ```jsx {3-6}
 * <MenuProvider>
 *   <MenuButton>Edit</MenuButton>
 *   <Menu>
 *     <MenuItem>Undo</MenuItem>
 *     <MenuItem>Redo</MenuItem>
 *   </Menu>
 * </MenuProvider>
 * ```
 */
export declare const Menu: import("../utils/types.js").Component<MenuOptions<"div">>;
export interface MenuOptions<T extends As = "div"> extends MenuListOptions<T>, Omit<HovercardOptions<T>, "store"> {
}
export type MenuProps<T extends As = "div"> = Props<MenuOptions<T>>;
