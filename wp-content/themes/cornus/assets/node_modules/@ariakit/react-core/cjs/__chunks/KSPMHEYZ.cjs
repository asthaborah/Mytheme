"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _PZL34OVOcjs = require('./PZL34OVO.cjs');


var _7YLCVXZ7cjs = require('./7YLCVXZ7.cjs');


var _5GTNIPQ6cjs = require('./5GTNIPQ6.cjs');




var _V24PR4PWcjs = require('./V24PR4PW.cjs');


var _6IUEXB4Lcjs = require('./6IUEXB4L.cjs');

// src/dialog/utils/disable-tree.ts
var _dom = require('@ariakit/core/utils/dom');
var _focus = require('@ariakit/core/utils/focus');
var _misc = require('@ariakit/core/utils/misc');
function disableTree(element, ignoredElements) {
  if (!("style" in element))
    return _misc.noop;
  if (_6IUEXB4Lcjs.supportsInert.call(void 0, )) {
    return _V24PR4PWcjs.setProperty.call(void 0, element, "inert", true);
  }
  const tabbableElements = _focus.getAllTabbableIn.call(void 0, element, true);
  const enableElements = tabbableElements.map((element2) => {
    if (ignoredElements == null ? void 0 : ignoredElements.some((el) => el && _dom.contains.call(void 0, el, element2)))
      return _misc.noop;
    return _V24PR4PWcjs.setAttribute.call(void 0, element2, "tabindex", "-1");
  });
  return _misc.chain.call(void 0, 
    ...enableElements,
    _PZL34OVOcjs.hideElementFromAccessibilityTree.call(void 0, element),
    _V24PR4PWcjs.assignStyle.call(void 0, element, {
      pointerEvents: "none",
      userSelect: "none",
      cursor: "default"
    })
  );
}
function disableTreeOutside(id, elements) {
  const cleanups = [];
  const ids = elements.map((el) => el == null ? void 0 : el.id);
  _5GTNIPQ6cjs.walkTreeOutside.call(void 0, id, elements, (element) => {
    if (_7YLCVXZ7cjs.isBackdrop.call(void 0, element, ...ids))
      return;
    cleanups.unshift(disableTree(element, elements));
  });
  const restoreTreeOutside = () => {
    cleanups.forEach((fn) => fn());
  };
  return restoreTreeOutside;
}




exports.disableTree = disableTree; exports.disableTreeOutside = disableTreeOutside;
