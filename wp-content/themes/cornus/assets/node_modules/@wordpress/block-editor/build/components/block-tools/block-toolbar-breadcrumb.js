"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = BlockToolbarBreadcrumb;
var _react = require("react");
var _classnames = _interopRequireDefault(require("classnames"));
var _blockSelectionButton = _interopRequireDefault(require("./block-selection-button"));
var _blockPopover = _interopRequireDefault(require("../block-popover"));
var _useBlockToolbarPopoverProps = _interopRequireDefault(require("./use-block-toolbar-popover-props"));
var _useSelectedBlockToolProps = _interopRequireDefault(require("./use-selected-block-tool-props"));
/**
 * External dependencies
 */

/**
 * Internal dependencies
 */

function BlockToolbarBreadcrumb({
  clientId,
  __unstableContentRef
}) {
  const {
    capturingClientId,
    isInsertionPointVisible,
    lastClientId,
    rootClientId
  } = (0, _useSelectedBlockToolProps.default)(clientId);
  const popoverProps = (0, _useBlockToolbarPopoverProps.default)({
    contentElement: __unstableContentRef?.current,
    clientId
  });
  return (0, _react.createElement)(_blockPopover.default, {
    clientId: capturingClientId || clientId,
    bottomClientId: lastClientId,
    className: (0, _classnames.default)('block-editor-block-list__block-popover', {
      'is-insertion-point-visible': isInsertionPointVisible
    }),
    resize: false,
    ...popoverProps
  }, (0, _react.createElement)(_blockSelectionButton.default, {
    clientId: clientId,
    rootClientId: rootClientId
  }));
}
//# sourceMappingURL=block-toolbar-breadcrumb.js.map