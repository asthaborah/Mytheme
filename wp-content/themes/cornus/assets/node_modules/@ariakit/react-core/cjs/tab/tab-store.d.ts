import * as Core from "@ariakit/core/tab/tab-store";
import type { CompositeStoreFunctions, CompositeStoreOptions, CompositeStoreState } from "../composite/composite-store.js";
import type { Store } from "../utils/store.js";
export declare function useTabStoreProps<T extends Core.TabStore>(store: T, update: () => void, props: TabStoreProps): T & {
    panels: import("@ariakit/core/collection/collection-store").CollectionStore<Core.TabStorePanel> & {
        useState: {
            (): import("@ariakit/core/collection/collection-store").CollectionStoreState<Core.TabStorePanel>;
            <K extends keyof import("@ariakit/core/collection/collection-store").CollectionStoreState<Core.TabStorePanel>>(key: K): import("@ariakit/core/collection/collection-store").CollectionStoreState<Core.TabStorePanel>[K];
            <V>(selector: (state: import("@ariakit/core/collection/collection-store").CollectionStoreState<Core.TabStorePanel>) => V): V;
        };
    };
};
/**
 * Creates a tab store to control the state of
 * [Tab](https://ariakit.org/components/tab) components.
 * @see https://ariakit.org/components/tab
 * @example
 * ```jsx
 * const tab = useTabStore();
 *
 * <TabList store={tab}>
 *   <Tab>Tab 1</Tab>
 *   <Tab>Tab 2</Tab>
 * </TabList>
 * <TabPanel store={tab}>Panel 1</TabPanel>
 * <TabPanel store={tab}>Panel 2</TabPanel>
 * ```
 */
export declare function useTabStore(props?: TabStoreProps): TabStore;
export interface TabStoreItem extends Core.TabStoreItem {
}
export interface TabStoreState extends Core.TabStoreState, CompositeStoreState<TabStoreItem> {
}
export interface TabStoreFunctions extends Core.TabStoreFunctions, CompositeStoreFunctions<TabStoreItem> {
    panels: Store<Core.TabStoreFunctions["panels"]>;
}
export interface TabStoreOptions extends Core.TabStoreOptions, CompositeStoreOptions<TabStoreItem> {
    /**
     * Function that will be called when the
     * [`selectedId`](https://ariakit.org/reference/tab-provider#selectedid) state
     * changes.
     *
     * Live examples:
     * - [Combobox with tabs](https://ariakit.org/examples/combobox-tabs)
     */
    setSelectedId?: (selectedId: TabStoreState["selectedId"]) => void;
}
export interface TabStoreProps extends TabStoreOptions, Core.TabStoreProps {
}
export interface TabStore extends TabStoreFunctions, Omit<Store<Core.TabStore>, "panels"> {
}
