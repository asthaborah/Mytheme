import type { CompositeInputOptions } from "../composite/composite-input.js";
import type { As, Props } from "../utils/types.js";
import type { ToolbarItemOptions } from "./toolbar-item.js";
/**
 * Returns props to create a `ToolbarInput` component.
 * @see https://ariakit.org/components/toolbar
 * @example
 * ```jsx
 * const store = useToolbarStore();
 * const props = useToolbarInput({ store });
 * <Toolbar store={store}>
 *   <Role {...props} />
 * </Toolbar>
 * ```
 */
export declare const useToolbarInput: import("../utils/types.js").Hook<ToolbarInputOptions<"input">>;
/**
 * Renders a text input as a toolbar item, maintaining arrow key navigation on
 * the toolbar.
 * @see https://ariakit.org/components/toolbar
 * @example
 * ```jsx {2}
 * <Toolbar>
 *   <ToolbarInput />
 * </Toolbar>
 * ```
 */
export declare const ToolbarInput: import("../utils/types.js").Component<ToolbarInputOptions<"input">>;
export interface ToolbarInputOptions<T extends As = "input"> extends ToolbarItemOptions<T>, Omit<CompositeInputOptions<T>, "store"> {
}
export type ToolbarInputProps<T extends As = "input"> = Props<ToolbarInputOptions<T>>;
