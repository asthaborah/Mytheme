"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _QCG6J6X5cjs = require('../__chunks/QCG6J6X5.cjs');
require('../__chunks/LFHNPG2L.cjs');
require('../__chunks/5UTRYT6E.cjs');
require('../__chunks/DAJUUBUI.cjs');


var _3W6FH6JKcjs = require('../__chunks/3W6FH6JK.cjs');
require('../__chunks/UVBBMANL.cjs');
require('../__chunks/F2A2ZQDB.cjs');
require('../__chunks/S6UU7NA4.cjs');
require('../__chunks/Z3GCTNW4.cjs');
require('../__chunks/75KXQZJX.cjs');


var _R66IWXK6cjs = require('../__chunks/R66IWXK6.cjs');




var _RNZNGEL4cjs = require('../__chunks/RNZNGEL4.cjs');



var _EO6LS72Hcjs = require('../__chunks/EO6LS72H.cjs');
require('../__chunks/CJDHQUBR.cjs');




var _AV6KTKLEcjs = require('../__chunks/AV6KTKLE.cjs');

// src/hovercard/hovercard-disclosure.tsx
var _react = require('react');
var _dom = require('@ariakit/core/utils/dom');
var _events = require('@ariakit/core/utils/events');
var _misc = require('@ariakit/core/utils/misc');
var _store = require('@ariakit/core/utils/store');
var _jsxruntime = require('react/jsx-runtime');
var useHovercardDisclosure = _RNZNGEL4cjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store } = _b, props = _AV6KTKLEcjs.__objRest.call(void 0, _b, ["store"]);
    const context = _3W6FH6JKcjs.useHovercardProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "HovercardDisclosure must receive a `store` prop or be wrapped in a HovercardProvider component."
    );
    const [visible, setVisible] = _react.useState.call(void 0, false);
    _react.useEffect.call(void 0, () => {
      if (!visible)
        return;
      const onBlur = (event) => {
        if (!store)
          return;
        const nextActiveElement = event.relatedTarget;
        if (nextActiveElement) {
          const {
            anchorElement: anchor,
            popoverElement: popover,
            disclosureElement: disclosure
          } = store.getState();
          if (anchor && _dom.contains.call(void 0, anchor, nextActiveElement))
            return;
          if (popover && _dom.contains.call(void 0, popover, nextActiveElement))
            return;
          if (disclosure && _dom.contains.call(void 0, disclosure, nextActiveElement))
            return;
          if (nextActiveElement.hasAttribute("data-focus-trap"))
            return;
        }
        setVisible(false);
      };
      return _events.addGlobalEventListener.call(void 0, "focusout", onBlur, true);
    }, [visible, store]);
    _react.useEffect.call(void 0, () => {
      return _store.sync.call(void 0, store, ["anchorElement"], (state) => {
        const anchor = state.anchorElement;
        if (!anchor)
          return;
        const observer = new MutationObserver(() => {
          if (!anchor.hasAttribute("data-focus-visible"))
            return;
          setVisible(true);
        });
        observer.observe(anchor, { attributeFilter: ["data-focus-visible"] });
        return () => observer.disconnect();
      });
    }, [store]);
    const onClickProp = props.onClick;
    const onClick = _EO6LS72Hcjs.useEvent.call(void 0, (event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented)
        return;
      store == null ? void 0 : store.setAutoFocusOnShow(true);
    });
    const onFocusProp = props.onFocus;
    const onFocus = _EO6LS72Hcjs.useEvent.call(void 0, (event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (event.defaultPrevented)
        return;
      setVisible(true);
    });
    const { style } = _R66IWXK6cjs.useVisuallyHidden.call(void 0, );
    if (!visible) {
      props = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props), {
        style: _AV6KTKLEcjs.__spreadValues.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, style), props.style)
      });
    }
    const children = /* @__PURE__ */ _jsxruntime.jsx.call(void 0, 
      "svg",
      {
        display: "block",
        fill: "none",
        stroke: "currentColor",
        strokeLinecap: "round",
        strokeLinejoin: "round",
        strokeWidth: "1.5pt",
        viewBox: "0 0 16 16",
        height: "1em",
        width: "1em",
        children: /* @__PURE__ */ _jsxruntime.jsx.call(void 0, "polyline", { points: "4,6 8,10 12,6" })
      }
    );
    props = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {
      children
    }, props), {
      ref: _EO6LS72Hcjs.useMergeRefs.call(void 0, store.setDisclosureElement, props.ref),
      onClick,
      onFocus
    });
    props = _QCG6J6X5cjs.useDialogDisclosure.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, { store }, props));
    return props;
  }
);
var HovercardDisclosure = _RNZNGEL4cjs.createComponent.call(void 0, 
  (props) => {
    const htmlProps = useHovercardDisclosure(props);
    return _RNZNGEL4cjs.createElement.call(void 0, "button", htmlProps);
  }
);
if (process.env.NODE_ENV !== "production") {
  HovercardDisclosure.displayName = "HovercardDisclosure";
}



exports.HovercardDisclosure = HovercardDisclosure; exports.useHovercardDisclosure = useHovercardDisclosure;
