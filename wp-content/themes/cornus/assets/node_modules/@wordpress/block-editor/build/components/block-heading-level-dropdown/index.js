"use strict";

var _interopRequireDefault = require("@babel/runtime/helpers/interopRequireDefault");
Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = HeadingLevelDropdown;
var _react = require("react");
var _components = require("@wordpress/components");
var _i18n = require("@wordpress/i18n");
var _headingLevelIcon = _interopRequireDefault(require("./heading-level-icon"));
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const HEADING_LEVELS = [1, 2, 3, 4, 5, 6];
const POPOVER_PROPS = {
  className: 'block-library-heading-level-dropdown'
};

/** @typedef {import('react').ComponentType} ComponentType */

/**
 * HeadingLevelDropdown props.
 *
 * @typedef WPHeadingLevelDropdownProps
 *
 * @property {number}                 value    The chosen heading level.
 * @property {number[]}               options  An array of supported heading levels.
 * @property {(newValue:number)=>any} onChange Callback to run when
 *                                             toolbar value is changed.
 */

/**
 * Dropdown for selecting a heading level (1 through 6) or paragraph (0).
 *
 * @param {WPHeadingLevelDropdownProps} props Component props.
 *
 * @return {ComponentType} The toolbar.
 */
function HeadingLevelDropdown({
  options = HEADING_LEVELS,
  value,
  onChange
}) {
  return (0, _react.createElement)(_components.ToolbarDropdownMenu, {
    popoverProps: POPOVER_PROPS,
    icon: (0, _react.createElement)(_headingLevelIcon.default, {
      level: value
    }),
    label: (0, _i18n.__)('Change level'),
    controls: options.map(targetLevel => {
      const isActive = targetLevel === value;
      return {
        icon: (0, _react.createElement)(_headingLevelIcon.default, {
          level: targetLevel
        }),
        title: targetLevel === 0 ? (0, _i18n.__)('Paragraph') : (0, _i18n.sprintf)(
        // translators: %s: heading level e.g: "1", "2", "3"
        (0, _i18n.__)('Heading %d'), targetLevel),
        isActive,
        onClick() {
          onChange(targetLevel);
        },
        role: 'menuitemradio'
      };
    })
  });
}
//# sourceMappingURL=index.js.map