"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";



var _NGEKJJDHcjs = require('../__chunks/NGEKJJDH.cjs');
require('../__chunks/7LBZXSLY.cjs');


var _LICANQTIcjs = require('../__chunks/LICANQTI.cjs');
require('../__chunks/QCG6J6X5.cjs');
require('../__chunks/LFHNPG2L.cjs');
require('../__chunks/3QW6ELTG.cjs');
require('../__chunks/5UTRYT6E.cjs');


var _6PUZ4NWRcjs = require('../__chunks/6PUZ4NWR.cjs');
require('../__chunks/DAJUUBUI.cjs');


var _TGTVGYEZcjs = require('../__chunks/TGTVGYEZ.cjs');
require('../__chunks/6ZZYUFPW.cjs');
require('../__chunks/UZNYSPKP.cjs');
require('../__chunks/BZTDJIVT.cjs');


var _LAUATD5Ocjs = require('../__chunks/LAUATD5O.cjs');
require('../__chunks/3W6FH6JK.cjs');
require('../__chunks/UVBBMANL.cjs');
require('../__chunks/F2A2ZQDB.cjs');
require('../__chunks/S6UU7NA4.cjs');
require('../__chunks/Z3GCTNW4.cjs');
require('../__chunks/75KXQZJX.cjs');




var _RNZNGEL4cjs = require('../__chunks/RNZNGEL4.cjs');


var _OLOZ5JT2cjs = require('../__chunks/OLOZ5JT2.cjs');





var _EO6LS72Hcjs = require('../__chunks/EO6LS72H.cjs');
require('../__chunks/CJDHQUBR.cjs');




var _AV6KTKLEcjs = require('../__chunks/AV6KTKLE.cjs');

// src/menu/menu-button.tsx
var _react = require('react');
var _dom = require('@ariakit/core/utils/dom');
var _misc = require('@ariakit/core/utils/misc');
var _jsxruntime = require('react/jsx-runtime');
function getInitialFocus(event, dir) {
  const keyMap = {
    ArrowDown: dir === "bottom" || dir === "top" ? "first" : false,
    ArrowUp: dir === "bottom" || dir === "top" ? "last" : false,
    ArrowRight: dir === "right" ? "first" : false,
    ArrowLeft: dir === "left" ? "first" : false
  };
  return keyMap[event.key];
}
function hasActiveItem(items, excludeElement) {
  return !!(items == null ? void 0 : items.some((item) => {
    if (!item.element)
      return false;
    if (item.element === excludeElement)
      return false;
    return item.element.getAttribute("aria-expanded") === "true";
  }));
}
var useMenuButton = _RNZNGEL4cjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store, focusable, accessibleWhenDisabled, showOnHover } = _b, props = _AV6KTKLEcjs.__objRest.call(void 0, _b, ["store", "focusable", "accessibleWhenDisabled", "showOnHover"]);
    const context = _NGEKJJDHcjs.useMenuProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "MenuButton must receive a `store` prop or be wrapped in a MenuProvider component."
    );
    const ref = _react.useRef.call(void 0, null);
    const parentMenu = store.parent;
    const parentMenubar = store.menubar;
    const hasParentMenu = !!parentMenu;
    const parentIsMenubar = !!parentMenubar && !hasParentMenu;
    const disabled = _misc.disabledFromProps.call(void 0, props);
    const showMenu = () => {
      const trigger = ref.current;
      if (!trigger)
        return;
      store == null ? void 0 : store.setDisclosureElement(trigger);
      store == null ? void 0 : store.setAnchorElement(trigger);
      store == null ? void 0 : store.show();
    };
    const onFocusProp = props.onFocus;
    const onFocus = _EO6LS72Hcjs.useEvent.call(void 0, (event) => {
      onFocusProp == null ? void 0 : onFocusProp(event);
      if (disabled)
        return;
      if (event.defaultPrevented)
        return;
      store == null ? void 0 : store.setAutoFocusOnShow(false);
      store == null ? void 0 : store.setActiveId(null);
      if (!parentMenubar)
        return;
      if (!parentIsMenubar)
        return;
      const { items } = parentMenubar.getState();
      if (hasActiveItem(items, event.currentTarget)) {
        showMenu();
      }
    });
    const dir = store.useState(
      (state) => state.placement.split("-")[0]
    );
    const onKeyDownProp = props.onKeyDown;
    const onKeyDown = _EO6LS72Hcjs.useEvent.call(void 0, (event) => {
      onKeyDownProp == null ? void 0 : onKeyDownProp(event);
      if (disabled)
        return;
      if (event.defaultPrevented)
        return;
      const initialFocus = getInitialFocus(event, dir);
      if (initialFocus) {
        event.preventDefault();
        showMenu();
        store == null ? void 0 : store.setAutoFocusOnShow(true);
        store == null ? void 0 : store.setInitialFocus(initialFocus);
      }
    });
    const onClickProp = props.onClick;
    const onClick = _EO6LS72Hcjs.useEvent.call(void 0, (event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented)
        return;
      if (!store)
        return;
      const isKeyboardClick = !event.detail;
      const { open } = store.getState();
      if (!open || isKeyboardClick) {
        if (!hasParentMenu || isKeyboardClick) {
          store.setAutoFocusOnShow(true);
        }
        store.setInitialFocus(isKeyboardClick ? "first" : "container");
      }
      if (hasParentMenu) {
        showMenu();
      }
    });
    props = _EO6LS72Hcjs.useWrapElement.call(void 0, 
      props,
      (element) => /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _NGEKJJDHcjs.MenuContextProvider, { value: store, children: element }),
      [store]
    );
    if (hasParentMenu) {
      props = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {}, props), {
        render: /* @__PURE__ */ _jsxruntime.jsx.call(void 0, _LAUATD5Ocjs.Role.div, { render: props.render })
      });
    }
    const id = _EO6LS72Hcjs.useId.call(void 0, props.id);
    const parentContentElement = _OLOZ5JT2cjs.useStoreState.call(void 0, 
      (parentMenu == null ? void 0 : parentMenu.combobox) || parentMenu,
      "contentElement"
    );
    const role = hasParentMenu || parentIsMenubar ? _dom.getPopupItemRole.call(void 0, parentContentElement, "menuitem") : void 0;
    const contentElement = store.useState("contentElement");
    props = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {
      id,
      role,
      "aria-haspopup": _dom.getPopupRole.call(void 0, contentElement, "menu")
    }, props), {
      ref: _EO6LS72Hcjs.useMergeRefs.call(void 0, ref, props.ref),
      onFocus,
      onKeyDown,
      onClick
    });
    props = _TGTVGYEZcjs.useHovercardAnchor.call(void 0, _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {
      store,
      focusable,
      accessibleWhenDisabled
    }, props), {
      showOnHover: (event) => {
        const getShowOnHover = () => {
          if (typeof showOnHover === "function")
            return showOnHover(event);
          if (showOnHover != null)
            return showOnHover;
          if (hasParentMenu)
            return true;
          if (!parentMenubar)
            return false;
          const { items } = parentMenubar.getState();
          return parentIsMenubar && hasActiveItem(items);
        };
        const canShowOnHover = getShowOnHover();
        if (!canShowOnHover)
          return false;
        const parent = parentIsMenubar ? parentMenubar : parentMenu;
        if (!parent)
          return true;
        parent.setActiveId(event.currentTarget.id);
        return true;
      }
    }));
    props = _LICANQTIcjs.usePopoverDisclosure.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {
      store,
      toggleOnClick: !hasParentMenu,
      focusable,
      accessibleWhenDisabled
    }, props));
    props = _6PUZ4NWRcjs.useCompositeTypeahead.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {
      store,
      typeahead: parentIsMenubar
    }, props));
    return props;
  }
);
var MenuButton = _RNZNGEL4cjs.createComponent.call(void 0, (props) => {
  const htmlProps = useMenuButton(props);
  return _RNZNGEL4cjs.createElement.call(void 0, "button", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  MenuButton.displayName = "MenuButton";
}



exports.MenuButton = MenuButton; exports.useMenuButton = useMenuButton;
