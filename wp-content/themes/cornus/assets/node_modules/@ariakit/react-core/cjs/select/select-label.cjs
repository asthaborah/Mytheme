"use strict";Object.defineProperty(exports, "__esModule", {value: true});"use client";


var _2WCJJQSKcjs = require('../__chunks/2WCJJQSK.cjs');
require('../__chunks/UZNYSPKP.cjs');
require('../__chunks/BZTDJIVT.cjs');
require('../__chunks/UVBBMANL.cjs');
require('../__chunks/F2A2ZQDB.cjs');
require('../__chunks/S6UU7NA4.cjs');




var _RNZNGEL4cjs = require('../__chunks/RNZNGEL4.cjs');




var _EO6LS72Hcjs = require('../__chunks/EO6LS72H.cjs');
require('../__chunks/CJDHQUBR.cjs');




var _AV6KTKLEcjs = require('../__chunks/AV6KTKLE.cjs');

// src/select/select-label.ts
var _misc = require('@ariakit/core/utils/misc');
var useSelectLabel = _RNZNGEL4cjs.createHook.call(void 0, 
  (_a) => {
    var _b = _a, { store } = _b, props = _AV6KTKLEcjs.__objRest.call(void 0, _b, ["store"]);
    const context = _2WCJJQSKcjs.useSelectProviderContext.call(void 0, );
    store = store || context;
    _misc.invariant.call(void 0, 
      store,
      process.env.NODE_ENV !== "production" && "SelectLabel must receive a `store` prop or be wrapped in a SelectProvider component."
    );
    const id = _EO6LS72Hcjs.useId.call(void 0, props.id);
    const onClickProp = props.onClick;
    const onClick = _EO6LS72Hcjs.useEvent.call(void 0, (event) => {
      onClickProp == null ? void 0 : onClickProp(event);
      if (event.defaultPrevented)
        return;
      queueMicrotask(() => {
        const select = store == null ? void 0 : store.getState().selectElement;
        select == null ? void 0 : select.focus();
        select == null ? void 0 : select.click();
      });
    });
    props = _AV6KTKLEcjs.__spreadProps.call(void 0, _AV6KTKLEcjs.__spreadValues.call(void 0, {
      id
    }, props), {
      ref: _EO6LS72Hcjs.useMergeRefs.call(void 0, store.setLabelElement, props.ref),
      onClick,
      style: _AV6KTKLEcjs.__spreadValues.call(void 0, {
        cursor: "default"
      }, props.style)
    });
    return props;
  }
);
var SelectLabel = _RNZNGEL4cjs.createMemoComponent.call(void 0, (props) => {
  const htmlProps = useSelectLabel(props);
  return _RNZNGEL4cjs.createElement.call(void 0, "div", htmlProps);
});
if (process.env.NODE_ENV !== "production") {
  SelectLabel.displayName = "SelectLabel";
}



exports.SelectLabel = SelectLabel; exports.useSelectLabel = useSelectLabel;
