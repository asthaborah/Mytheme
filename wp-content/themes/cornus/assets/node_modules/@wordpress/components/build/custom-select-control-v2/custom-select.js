"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.default = exports.CustomSelectContext = void 0;
var _react = require("react");
var _element = require("@wordpress/element");
var _i18n = require("@wordpress/i18n");
var _icons = require("@wordpress/icons");
var _ = require("..");
var Styled = _interopRequireWildcard(require("./styles"));
var _context = require("../context");
function _getRequireWildcardCache(e) { if ("function" != typeof WeakMap) return null; var r = new WeakMap(), t = new WeakMap(); return (_getRequireWildcardCache = function (e) { return e ? t : r; })(e); }
function _interopRequireWildcard(e, r) { if (!r && e && e.__esModule) return e; if (null === e || "object" != typeof e && "function" != typeof e) return { default: e }; var t = _getRequireWildcardCache(r); if (t && t.has(e)) return t.get(e); var n = { __proto__: null }, a = Object.defineProperty && Object.getOwnPropertyDescriptor; for (var u in e) if ("default" !== u && Object.prototype.hasOwnProperty.call(e, u)) { var i = a ? Object.getOwnPropertyDescriptor(e, u) : null; i && (i.get || i.set) ? Object.defineProperty(n, u, i) : n[u] = e[u]; } return n.default = e, t && t.set(e, n), n; }
/**
 * WordPress dependencies
 */

/**
 * Internal dependencies
 */

const CustomSelectContext = exports.CustomSelectContext = (0, _element.createContext)(undefined);
function defaultRenderSelectedValue(value) {
  const isValueEmpty = Array.isArray(value) ? value.length === 0 : value === undefined || value === null;
  if (isValueEmpty) {
    return (0, _i18n.__)('Select an item');
  }
  if (Array.isArray(value)) {
    return value.length === 1 ? value[0] :
    // translators: %s: number of items selected (it will always be 2 or more items)
    (0, _i18n.sprintf)((0, _i18n.__)('%s items selected'), value.length);
  }
  return value;
}
const UnconnectedCustomSelectButton = props => {
  const {
    renderSelectedValue,
    size = 'default',
    store,
    ...restProps
  } = (0, _context.useContextSystem)(props, 'CustomSelectControlButton');
  const {
    value: currentValue
  } = store.useState();
  const computedRenderSelectedValue = (0, _element.useMemo)(() => renderSelectedValue !== null && renderSelectedValue !== void 0 ? renderSelectedValue : defaultRenderSelectedValue, [renderSelectedValue]);
  return (0, _react.createElement)(Styled.Select, {
    ...restProps,
    size: size,
    hasCustomRenderProp: !!renderSelectedValue,
    store: store
    // to match legacy behavior where using arrow keys
    // move selection rather than open the popover
    ,
    showOnKeyDown: false
  }, (0, _react.createElement)("div", null, computedRenderSelectedValue(currentValue)), (0, _react.createElement)(_icons.Icon, {
    icon: _icons.chevronDown,
    size: 18
  }));
};
const CustomSelectButton = (0, _context.contextConnectWithoutRef)(UnconnectedCustomSelectButton, 'CustomSelectControlButton');
function _CustomSelect(props) {
  const {
    children,
    hideLabelFromVision = false,
    label,
    store,
    ...restProps
  } = props;
  return (0, _react.createElement)(_react.Fragment, null, hideLabelFromVision ?
  // TODO: Replace with BaseControl
  (0, _react.createElement)(_.VisuallyHidden, {
    as: "label"
  }, label) : (0, _react.createElement)(Styled.SelectLabel, {
    store: store
  }, label), (0, _react.createElement)(CustomSelectButton, {
    ...restProps,
    store: store
  }), (0, _react.createElement)(Styled.SelectPopover, {
    gutter: 12,
    store: store,
    sameWidth: true
  }, (0, _react.createElement)(CustomSelectContext.Provider, {
    value: {
      store
    }
  }, children)));
}
var _default = exports.default = _CustomSelect;
//# sourceMappingURL=custom-select.js.map