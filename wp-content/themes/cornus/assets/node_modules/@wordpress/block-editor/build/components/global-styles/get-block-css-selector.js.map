{"version":3,"names":["_utils","require","_object","getBlockCSSSelector","blockType","target","options","fallback","name","selectors","supports","hasSelectors","Object","keys","length","path","Array","isArray","join","rootSelector","root","__experimentalSelector","replace","pathArray","split","fallbackSelector","featureSelector","getValueFromObjectPath","scopeSelector","subfeatureSelector"],"sources":["@wordpress/block-editor/src/components/global-styles/get-block-css-selector.js"],"sourcesContent":["/**\n * Internal dependencies\n */\nimport { scopeSelector } from './utils';\nimport { getValueFromObjectPath } from '../../utils/object';\n\n/**\n * Determine the CSS selector for the block type and target provided, returning\n * it if available.\n *\n * @param {import('@wordpress/blocks').Block} blockType        The block's type.\n * @param {string|string[]}                   target           The desired selector's target e.g. `root`, delimited string, or array path.\n * @param {Object}                            options          Options object.\n * @param {boolean}                           options.fallback Whether or not to fallback to broader selector.\n *\n * @return {?string} The CSS selector or `null` if no selector available.\n */\nexport function getBlockCSSSelector(\n\tblockType,\n\ttarget = 'root',\n\toptions = {}\n) {\n\tif ( ! target ) {\n\t\treturn null;\n\t}\n\n\tconst { fallback = false } = options;\n\tconst { name, selectors, supports } = blockType;\n\n\tconst hasSelectors = selectors && Object.keys( selectors ).length > 0;\n\tconst path = Array.isArray( target ) ? target.join( '.' ) : target;\n\n\t// Root selector.\n\n\t// Calculated before returning as it can be used as a fallback for feature\n\t// selectors later on.\n\tlet rootSelector = null;\n\n\tif ( hasSelectors && selectors.root ) {\n\t\t// Use the selectors API if available.\n\t\trootSelector = selectors?.root;\n\t} else if ( supports?.__experimentalSelector ) {\n\t\t// Use the old experimental selector supports property if set.\n\t\trootSelector = supports.__experimentalSelector;\n\t} else {\n\t\t// If no root selector found, generate default block class selector.\n\t\trootSelector =\n\t\t\t'.wp-block-' + name.replace( 'core/', '' ).replace( '/', '-' );\n\t}\n\n\t// Return selector if it's the root target we are looking for.\n\tif ( path === 'root' ) {\n\t\treturn rootSelector;\n\t}\n\n\t// If target is not `root` or `duotone` we have a feature or subfeature\n\t// as the target. If the target is a string convert to an array.\n\tconst pathArray = Array.isArray( target ) ? target : target.split( '.' );\n\n\t// Feature selectors ( may fallback to root selector );\n\tif ( pathArray.length === 1 ) {\n\t\tconst fallbackSelector = fallback ? rootSelector : null;\n\n\t\t// Prefer the selectors API if available.\n\t\tif ( hasSelectors ) {\n\t\t\t// Get selector from either `feature.root` or shorthand path.\n\t\t\tconst featureSelector =\n\t\t\t\tgetValueFromObjectPath( selectors, `${ path }.root`, null ) ||\n\t\t\t\tgetValueFromObjectPath( selectors, path, null );\n\n\t\t\t// Return feature selector if found or any available fallback.\n\t\t\treturn featureSelector || fallbackSelector;\n\t\t}\n\n\t\t// Try getting old experimental supports selector value.\n\t\tconst featureSelector = getValueFromObjectPath(\n\t\t\tsupports,\n\t\t\t`${ path }.__experimentalSelector`,\n\t\t\tnull\n\t\t);\n\n\t\t// If nothing to work with, provide fallback selector if available.\n\t\tif ( ! featureSelector ) {\n\t\t\treturn fallbackSelector;\n\t\t}\n\n\t\t// Scope the feature selector by the block's root selector.\n\t\treturn scopeSelector( rootSelector, featureSelector );\n\t}\n\n\t// Subfeature selector.\n\t// This may fallback either to parent feature or root selector.\n\tlet subfeatureSelector;\n\n\t// Use selectors API if available.\n\tif ( hasSelectors ) {\n\t\tsubfeatureSelector = getValueFromObjectPath( selectors, path, null );\n\t}\n\n\t// Only return if we have a subfeature selector.\n\tif ( subfeatureSelector ) {\n\t\treturn subfeatureSelector;\n\t}\n\n\t// To this point we don't have a subfeature selector. If a fallback has been\n\t// requested, remove subfeature from target path and return results of a\n\t// call for the parent feature's selector.\n\tif ( fallback ) {\n\t\treturn getBlockCSSSelector( blockType, pathArray[ 0 ], options );\n\t}\n\n\t// We tried.\n\treturn null;\n}\n"],"mappings":";;;;;;AAGA,IAAAA,MAAA,GAAAC,OAAA;AACA,IAAAC,OAAA,GAAAD,OAAA;AAJA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASE,mBAAmBA,CAClCC,SAAS,EACTC,MAAM,GAAG,MAAM,EACfC,OAAO,GAAG,CAAC,CAAC,EACX;EACD,IAAK,CAAED,MAAM,EAAG;IACf,OAAO,IAAI;EACZ;EAEA,MAAM;IAAEE,QAAQ,GAAG;EAAM,CAAC,GAAGD,OAAO;EACpC,MAAM;IAAEE,IAAI;IAAEC,SAAS;IAAEC;EAAS,CAAC,GAAGN,SAAS;EAE/C,MAAMO,YAAY,GAAGF,SAAS,IAAIG,MAAM,CAACC,IAAI,CAAEJ,SAAU,CAAC,CAACK,MAAM,GAAG,CAAC;EACrE,MAAMC,IAAI,GAAGC,KAAK,CAACC,OAAO,CAAEZ,MAAO,CAAC,GAAGA,MAAM,CAACa,IAAI,CAAE,GAAI,CAAC,GAAGb,MAAM;;EAElE;;EAEA;EACA;EACA,IAAIc,YAAY,GAAG,IAAI;EAEvB,IAAKR,YAAY,IAAIF,SAAS,CAACW,IAAI,EAAG;IACrC;IACAD,YAAY,GAAGV,SAAS,EAAEW,IAAI;EAC/B,CAAC,MAAM,IAAKV,QAAQ,EAAEW,sBAAsB,EAAG;IAC9C;IACAF,YAAY,GAAGT,QAAQ,CAACW,sBAAsB;EAC/C,CAAC,MAAM;IACN;IACAF,YAAY,GACX,YAAY,GAAGX,IAAI,CAACc,OAAO,CAAE,OAAO,EAAE,EAAG,CAAC,CAACA,OAAO,CAAE,GAAG,EAAE,GAAI,CAAC;EAChE;;EAEA;EACA,IAAKP,IAAI,KAAK,MAAM,EAAG;IACtB,OAAOI,YAAY;EACpB;;EAEA;EACA;EACA,MAAMI,SAAS,GAAGP,KAAK,CAACC,OAAO,CAAEZ,MAAO,CAAC,GAAGA,MAAM,GAAGA,MAAM,CAACmB,KAAK,CAAE,GAAI,CAAC;;EAExE;EACA,IAAKD,SAAS,CAACT,MAAM,KAAK,CAAC,EAAG;IAC7B,MAAMW,gBAAgB,GAAGlB,QAAQ,GAAGY,YAAY,GAAG,IAAI;;IAEvD;IACA,IAAKR,YAAY,EAAG;MACnB;MACA,MAAMe,eAAe,GACpB,IAAAC,8BAAsB,EAAElB,SAAS,EAAG,GAAGM,IAAM,OAAM,EAAE,IAAK,CAAC,IAC3D,IAAAY,8BAAsB,EAAElB,SAAS,EAAEM,IAAI,EAAE,IAAK,CAAC;;MAEhD;MACA,OAAOW,eAAe,IAAID,gBAAgB;IAC3C;;IAEA;IACA,MAAMC,eAAe,GAAG,IAAAC,8BAAsB,EAC7CjB,QAAQ,EACP,GAAGK,IAAM,yBAAwB,EAClC,IACD,CAAC;;IAED;IACA,IAAK,CAAEW,eAAe,EAAG;MACxB,OAAOD,gBAAgB;IACxB;;IAEA;IACA,OAAO,IAAAG,oBAAa,EAAET,YAAY,EAAEO,eAAgB,CAAC;EACtD;;EAEA;EACA;EACA,IAAIG,kBAAkB;;EAEtB;EACA,IAAKlB,YAAY,EAAG;IACnBkB,kBAAkB,GAAG,IAAAF,8BAAsB,EAAElB,SAAS,EAAEM,IAAI,EAAE,IAAK,CAAC;EACrE;;EAEA;EACA,IAAKc,kBAAkB,EAAG;IACzB,OAAOA,kBAAkB;EAC1B;;EAEA;EACA;EACA;EACA,IAAKtB,QAAQ,EAAG;IACf,OAAOJ,mBAAmB,CAAEC,SAAS,EAAEmB,SAAS,CAAE,CAAC,CAAE,EAAEjB,OAAQ,CAAC;EACjE;;EAEA;EACA,OAAO,IAAI;AACZ"}