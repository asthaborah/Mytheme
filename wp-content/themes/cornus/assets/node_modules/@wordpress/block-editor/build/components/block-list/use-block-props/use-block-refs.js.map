{"version":3,"names":["_element","require","_compose","_blockRefsProvider","useBlockRefProvider","clientId","refs","callbacks","useContext","BlockRefs","ref","useRef","useLayoutEffect","set","delete","useRefEffect","element","current","forEach","id","setElement","useBlockRef","freshClientId","useMemo","entries","useBlockElement","useState"],"sources":["@wordpress/block-editor/src/components/block-list/use-block-props/use-block-refs.js"],"sourcesContent":["/**\n * WordPress dependencies\n */\nimport {\n\tuseContext,\n\tuseLayoutEffect,\n\tuseMemo,\n\tuseRef,\n\tuseState,\n} from '@wordpress/element';\nimport { useRefEffect } from '@wordpress/compose';\n\n/**\n * Internal dependencies\n */\nimport { BlockRefs } from '../../provider/block-refs-provider';\n\n/** @typedef {import('@wordpress/element').RefCallback} RefCallback */\n/** @typedef {import('@wordpress/element').RefObject} RefObject */\n\n/**\n * Provides a ref to the BlockRefs context.\n *\n * @param {string} clientId The client ID of the element ref.\n *\n * @return {RefCallback} Ref callback.\n */\nexport function useBlockRefProvider( clientId ) {\n\tconst { refs, callbacks } = useContext( BlockRefs );\n\tconst ref = useRef();\n\tuseLayoutEffect( () => {\n\t\trefs.set( ref, clientId );\n\t\treturn () => {\n\t\t\trefs.delete( ref );\n\t\t};\n\t}, [ clientId ] );\n\treturn useRefEffect(\n\t\t( element ) => {\n\t\t\t// Update the ref in the provider.\n\t\t\tref.current = element;\n\t\t\t// Call any update functions.\n\t\t\tcallbacks.forEach( ( id, setElement ) => {\n\t\t\t\tif ( clientId === id ) {\n\t\t\t\t\tsetElement( element );\n\t\t\t\t}\n\t\t\t} );\n\t\t},\n\t\t[ clientId ]\n\t);\n}\n\n/**\n * Gets a ref pointing to the current block element. Continues to return a\n * stable ref even if the block client ID changes.\n *\n * @param {string} clientId The client ID to get a ref for.\n *\n * @return {RefObject} A ref containing the element.\n */\nfunction useBlockRef( clientId ) {\n\tconst { refs } = useContext( BlockRefs );\n\tconst freshClientId = useRef();\n\tfreshClientId.current = clientId;\n\t// Always return an object, even if no ref exists for a given client ID, so\n\t// that `current` works at a later point.\n\treturn useMemo(\n\t\t() => ( {\n\t\t\tget current() {\n\t\t\t\tlet element = null;\n\n\t\t\t\t// Multiple refs may be created for a single block. Find the\n\t\t\t\t// first that has an element set.\n\t\t\t\tfor ( const [ ref, id ] of refs.entries() ) {\n\t\t\t\t\tif ( id === freshClientId.current && ref.current ) {\n\t\t\t\t\t\telement = ref.current;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn element;\n\t\t\t},\n\t\t} ),\n\t\t[]\n\t);\n}\n\n/**\n * Return the element for a given client ID. Updates whenever the element\n * changes, becomes available, or disappears.\n *\n * @param {string} clientId The client ID to an element for.\n *\n * @return {Element|null} The block's wrapper element.\n */\nfunction useBlockElement( clientId ) {\n\tconst { callbacks } = useContext( BlockRefs );\n\tconst ref = useBlockRef( clientId );\n\tconst [ element, setElement ] = useState( null );\n\n\tuseLayoutEffect( () => {\n\t\tif ( ! clientId ) {\n\t\t\treturn;\n\t\t}\n\n\t\tcallbacks.set( setElement, clientId );\n\t\treturn () => {\n\t\t\tcallbacks.delete( setElement );\n\t\t};\n\t}, [ clientId ] );\n\n\treturn ref.current || element;\n}\n\nexport { useBlockRef as __unstableUseBlockRef };\nexport { useBlockElement as __unstableUseBlockElement };\n"],"mappings":";;;;;;;;AAGA,IAAAA,QAAA,GAAAC,OAAA;AAOA,IAAAC,QAAA,GAAAD,OAAA;AAKA,IAAAE,kBAAA,GAAAF,OAAA;AAfA;AACA;AACA;;AAUA;AACA;AACA;;AAGA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,SAASG,mBAAmBA,CAAEC,QAAQ,EAAG;EAC/C,MAAM;IAAEC,IAAI;IAAEC;EAAU,CAAC,GAAG,IAAAC,mBAAU,EAAEC,4BAAU,CAAC;EACnD,MAAMC,GAAG,GAAG,IAAAC,eAAM,EAAC,CAAC;EACpB,IAAAC,wBAAe,EAAE,MAAM;IACtBN,IAAI,CAACO,GAAG,CAAEH,GAAG,EAAEL,QAAS,CAAC;IACzB,OAAO,MAAM;MACZC,IAAI,CAACQ,MAAM,CAAEJ,GAAI,CAAC;IACnB,CAAC;EACF,CAAC,EAAE,CAAEL,QAAQ,CAAG,CAAC;EACjB,OAAO,IAAAU,qBAAY,EAChBC,OAAO,IAAM;IACd;IACAN,GAAG,CAACO,OAAO,GAAGD,OAAO;IACrB;IACAT,SAAS,CAACW,OAAO,CAAE,CAAEC,EAAE,EAAEC,UAAU,KAAM;MACxC,IAAKf,QAAQ,KAAKc,EAAE,EAAG;QACtBC,UAAU,CAAEJ,OAAQ,CAAC;MACtB;IACD,CAAE,CAAC;EACJ,CAAC,EACD,CAAEX,QAAQ,CACX,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASgB,WAAWA,CAAEhB,QAAQ,EAAG;EAChC,MAAM;IAAEC;EAAK,CAAC,GAAG,IAAAE,mBAAU,EAAEC,4BAAU,CAAC;EACxC,MAAMa,aAAa,GAAG,IAAAX,eAAM,EAAC,CAAC;EAC9BW,aAAa,CAACL,OAAO,GAAGZ,QAAQ;EAChC;EACA;EACA,OAAO,IAAAkB,gBAAO,EACb,OAAQ;IACP,IAAIN,OAAOA,CAAA,EAAG;MACb,IAAID,OAAO,GAAG,IAAI;;MAElB;MACA;MACA,KAAM,MAAM,CAAEN,GAAG,EAAES,EAAE,CAAE,IAAIb,IAAI,CAACkB,OAAO,CAAC,CAAC,EAAG;QAC3C,IAAKL,EAAE,KAAKG,aAAa,CAACL,OAAO,IAAIP,GAAG,CAACO,OAAO,EAAG;UAClDD,OAAO,GAAGN,GAAG,CAACO,OAAO;QACtB;MACD;MAEA,OAAOD,OAAO;IACf;EACD,CAAC,CAAE,EACH,EACD,CAAC;AACF;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAASS,eAAeA,CAAEpB,QAAQ,EAAG;EACpC,MAAM;IAAEE;EAAU,CAAC,GAAG,IAAAC,mBAAU,EAAEC,4BAAU,CAAC;EAC7C,MAAMC,GAAG,GAAGW,WAAW,CAAEhB,QAAS,CAAC;EACnC,MAAM,CAAEW,OAAO,EAAEI,UAAU,CAAE,GAAG,IAAAM,iBAAQ,EAAE,IAAK,CAAC;EAEhD,IAAAd,wBAAe,EAAE,MAAM;IACtB,IAAK,CAAEP,QAAQ,EAAG;MACjB;IACD;IAEAE,SAAS,CAACM,GAAG,CAAEO,UAAU,EAAEf,QAAS,CAAC;IACrC,OAAO,MAAM;MACZE,SAAS,CAACO,MAAM,CAAEM,UAAW,CAAC;IAC/B,CAAC;EACF,CAAC,EAAE,CAAEf,QAAQ,CAAG,CAAC;EAEjB,OAAOK,GAAG,CAACO,OAAO,IAAID,OAAO;AAC9B"}